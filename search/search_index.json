{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GPStar Documentation Home For the Proton Pack, Neutrona Wand, and Accessories Summary A fully integrated Proton Pack and Neutrona Wand, packed with features and add-ons. Compatible with the HasLab Plasma Series Proton Pack and Neutrona Wand, Mack's Proton Pack and Wand, and more! Polyphonic sound Allows simultaneous playback of multiple audio tracks which can be layered together to create a rich experience with smoothly layered sound effects and buttery smooth transitions. While blasting away with the Proton stream you can still hear all the layers of sound effects that came before...the Pack effects, each Wand toggle effect, Music etc. Wand / Pack communication system By implementing both the pack and wand controllers with an upgraded hose connection, both devices work seamlessly together. Interactions with the wand have an immediate effect on the pack, and vice-versa. This functionality includes sound effects, alarm triggers, Cyclotron interaction, venting/overheat sequences, and proton stream effects (eg. video game colours and crossing the streams). Feature Reel Demos Just see for yourself what this kit can do, and you'll be ready to believe us! Walkthrough Videos \"You know, it just occurred to me that we really haven't had a successful test of this equipment.\" -Ray Stantz Except that we have! Here is a Walkthrough Video Contributed by JustinDustin (YouTube, March 2023) showcasing several of the stock features in a converted pack/wand combination. Several optional features were implemented as part of this build using the Arduino platform. Additionally, this video covers several new updates in the months since, using the new GPStar controllers, as the Optional Features and Menu Walkthrough (YouTube, July 2023). Guides Everywhere! \"Ray, pretend for a moment that I don't know anything about metallurgy, engineering, or physics, and just tell me what the hell is going on.\" -Dr. Venkman That's alright, this will help you study. Start with the Component Guides section to find the dedicated guides to build out your new electronic brains, and maybe find some cool new features to implement as part of the addendums. Movie-Accurate Audio About our Effects files The sound effects files furnished with this project are combination of self made files to those contributed within the Ghostbusters community, etc. We do apologize if it is forgotten to acknowledge where some of the files originate from, though we do our best to share credit where due. See the About page for more information. \"Yes, have some\"...music! Special thanks to Michael Klodzinksi for graciously allowing us to include his version of Savin' The Day as a bundled music file to demo your awesome Proton Pack mods! Check out his other works at michaelk.net . Licensing This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/ . Disclaimer This community-driven project is independent and not affiliated with, endorsed by, or sponsored by Hasbro Inc., Ghost Corps, or Sony Pictures. Hasbro Inc. does not endorse or support this project, and any views or opinions expressed within the project are those of the individual contributors and not necessarily those of Hasbro Inc. Participants in this project should be aware that it is entirely separate from any official activities or initiatives of Hasbro Inc.. Any use of Hasbro Inc.'s name or its products within this project is purely for informative purposes and does not imply any form of partnership, endorsement, or association with Hasbro Inc. Individuals involved in this project are responsible for their own actions, and Hasbro Inc. bears no responsibility for the content, decisions, or outcomes related to this community-driven effort. By participating in this project, individuals acknowledge that it is an independent initiative and that Hasbro Inc. is not responsible for the project's development, management, or outcomes. This disclaimer is subject to change, and individuals are encouraged to check for updates regularly.","title":"Home"},{"location":"#summary","text":"A fully integrated Proton Pack and Neutrona Wand, packed with features and add-ons. Compatible with the HasLab Plasma Series Proton Pack and Neutrona Wand, Mack's Proton Pack and Wand, and more! Polyphonic sound Allows simultaneous playback of multiple audio tracks which can be layered together to create a rich experience with smoothly layered sound effects and buttery smooth transitions. While blasting away with the Proton stream you can still hear all the layers of sound effects that came before...the Pack effects, each Wand toggle effect, Music etc. Wand / Pack communication system By implementing both the pack and wand controllers with an upgraded hose connection, both devices work seamlessly together. Interactions with the wand have an immediate effect on the pack, and vice-versa. This functionality includes sound effects, alarm triggers, Cyclotron interaction, venting/overheat sequences, and proton stream effects (eg. video game colours and crossing the streams).","title":"Summary"},{"location":"#feature-reel-demos","text":"Just see for yourself what this kit can do, and you'll be ready to believe us!","title":"Feature Reel Demos"},{"location":"#walkthrough-videos","text":"\"You know, it just occurred to me that we really haven't had a successful test of this equipment.\" -Ray Stantz Except that we have! Here is a Walkthrough Video Contributed by JustinDustin (YouTube, March 2023) showcasing several of the stock features in a converted pack/wand combination. Several optional features were implemented as part of this build using the Arduino platform. Additionally, this video covers several new updates in the months since, using the new GPStar controllers, as the Optional Features and Menu Walkthrough (YouTube, July 2023).","title":"Walkthrough Videos"},{"location":"#guides-everywhere","text":"\"Ray, pretend for a moment that I don't know anything about metallurgy, engineering, or physics, and just tell me what the hell is going on.\" -Dr. Venkman That's alright, this will help you study. Start with the Component Guides section to find the dedicated guides to build out your new electronic brains, and maybe find some cool new features to implement as part of the addendums.","title":"Guides Everywhere!"},{"location":"#movie-accurate-audio","text":"","title":"Movie-Accurate Audio"},{"location":"#about-our-effects-files","text":"The sound effects files furnished with this project are combination of self made files to those contributed within the Ghostbusters community, etc. We do apologize if it is forgotten to acknowledge where some of the files originate from, though we do our best to share credit where due. See the About page for more information.","title":"About our Effects files"},{"location":"#yes-have-somemusic","text":"Special thanks to Michael Klodzinksi for graciously allowing us to include his version of Savin' The Day as a bundled music file to demo your awesome Proton Pack mods! Check out his other works at michaelk.net .","title":"\"Yes, have some\"...music!"},{"location":"#licensing","text":"This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","title":"Licensing"},{"location":"#disclaimer","text":"This community-driven project is independent and not affiliated with, endorsed by, or sponsored by Hasbro Inc., Ghost Corps, or Sony Pictures. Hasbro Inc. does not endorse or support this project, and any views or opinions expressed within the project are those of the individual contributors and not necessarily those of Hasbro Inc. Participants in this project should be aware that it is entirely separate from any official activities or initiatives of Hasbro Inc.. Any use of Hasbro Inc.'s name or its products within this project is purely for informative purposes and does not imply any form of partnership, endorsement, or association with Hasbro Inc. Individuals involved in this project are responsible for their own actions, and Hasbro Inc. bears no responsibility for the content, decisions, or outcomes related to this community-driven effort. By participating in this project, individuals acknowledge that it is an independent initiative and that Hasbro Inc. is not responsible for the project's development, management, or outcomes. This disclaimer is subject to change, and individuals are encouraged to check for updates regularly.","title":"Disclaimer"},{"location":"ABOUT/","text":"Team Members This project is made possible by Ghostbusters community makers and volunteers spanning 4 countries over 2 continents. Michael Rajotte (aka. \"GPStar Technologies\") - Director of Operations, Software Architect, Product Designer, PCB Design, 3D Modelling, EU & Worldwide Distribution Jonathan Gunn (aka. \"Jonogunn\") - Video Instruction Guides, Install Testing. Dustin Grau (aka. \"JustinDustin\") - Prototyping and Testing, Documentation, 3D Modelling, Software Support Angie Rutto (aka. \"Frutto Technology\") - Maker and purveyor of fine add-on products, UK Distribution Nomake Wan - Software Support, Testing, and Feature Development Special Community Thanks Emre Sahare (GBFans: One Time) For the original prop mode \"Mode Original\" operation deciphering. Alexander Hibbs (@BeaulieuDesigns87) For his SVG equipment schematic as used in the WiFi web UI. Thank you to our supporters on GBFans.com and the Facebook group . Project History Work began in December of 2022 by Michael Rajotte through regular posts on the GBFans forum. Initial efforts focused on creation of a \"cheat device\" or more commonly referred to as a \"keepalive mod\" which would defeat the automatic power-down feature built into the Habro Haslab equipment. By January of 2023 most of the worldwide community were receiving their orders from Hasbro and interest in such cheat devices was growing. At this stage Michael was successful in creating a working mod though it required soldering to delicate components within the Neutrona Wand which was outside the skillset of many end-users. Though once a minimal keepalive solution was found, Michael began experimenting with other features such as cyclotron lights and audio upgrades. Conversations with Jonathan Gunn about potential features exposed some obvious limitations with the Haslab equipment, and so the idea of a microcontroller replacement was born. By late January the wand had a working prototype using an Arduino Nano to control the built-in hardware and work began on the pack controller. Within weeks the pack was running its core functions from an Arduino as well and both devices could communicate with each other for effects and operations. Interest from the community was growing, as was the list of requests for features. Progress updates continued on the GBFans forums as new prototyping work began in the background through February. The introduction of the GitHub page for all source code and project files was introduced. Work also began to prototype and beta test Michael's schematics in the community. By early March the experimental hardware and software was replicated by Dustin Grau and efforts began to formally document instructions for the community. The first true replacement to the stock Haslab controllers was on its way to adoption but only by the most-skilled users. Michael continued adding features and modding his equipment to accommodate community requests. Documentation turned to schematics and video demonstrations, but was still a daunting prospect to most modders. Then in April a PCB schematic was created by Jonathan which changed everything--the idea would be to combine the electronic components which lived on protoboards onto a single board powered by a ATmega2560 chip. Several revisions were rapidly created and modified, and within weeks a prototype board for the pack was created and available. By May, both the pack and wand had viable prototypes which offered the same socket connections as their replaced originals, along with user-friendly options for attaching the wand components which were originally soldered to the stock controller. This was the breakthrough moment for the project. Handwritten notes turned into documentation, which turned into manufactured circuits, then gave way to a means of creating drop-in controllers that would be accessible to modders with a wider range of skills. Even those with no soldering abilities could pick up a screwdriver and install these components. At this stage Angie Rutto of Frutto Technology began working with Michael to identify add-on parts that could integrate with the controllers in use and a bevvy of new options became available. Replacement lights for the power cell and cyclotron lid allowed for full-color effects on the pack, while a new bargraph unit allowed for a plug-and-play upgrade for the wand. The project was now becoming a platform with supported accessories. Efforts then shifted from prototyping and revisional changes to potential worldwide distribution. Polls and preorders gauged the public interest and efforts began to turn components into kits. Michael, Jonathan, and Angie took on additional roles as regional distributors covering the EU, North America, and the UK (respectively). Jonathan created the first website for ordering and modders were able to submit their choice for base kits, special upgrade kits, and optional add-ons.","title":"About"},{"location":"ABOUT/#team-members","text":"This project is made possible by Ghostbusters community makers and volunteers spanning 4 countries over 2 continents. Michael Rajotte (aka. \"GPStar Technologies\") - Director of Operations, Software Architect, Product Designer, PCB Design, 3D Modelling, EU & Worldwide Distribution Jonathan Gunn (aka. \"Jonogunn\") - Video Instruction Guides, Install Testing. Dustin Grau (aka. \"JustinDustin\") - Prototyping and Testing, Documentation, 3D Modelling, Software Support Angie Rutto (aka. \"Frutto Technology\") - Maker and purveyor of fine add-on products, UK Distribution Nomake Wan - Software Support, Testing, and Feature Development","title":"Team Members"},{"location":"ABOUT/#special-community-thanks","text":"Emre Sahare (GBFans: One Time) For the original prop mode \"Mode Original\" operation deciphering. Alexander Hibbs (@BeaulieuDesigns87) For his SVG equipment schematic as used in the WiFi web UI. Thank you to our supporters on GBFans.com and the Facebook group .","title":"Special Community Thanks"},{"location":"ABOUT/#project-history","text":"Work began in December of 2022 by Michael Rajotte through regular posts on the GBFans forum. Initial efforts focused on creation of a \"cheat device\" or more commonly referred to as a \"keepalive mod\" which would defeat the automatic power-down feature built into the Habro Haslab equipment. By January of 2023 most of the worldwide community were receiving their orders from Hasbro and interest in such cheat devices was growing. At this stage Michael was successful in creating a working mod though it required soldering to delicate components within the Neutrona Wand which was outside the skillset of many end-users. Though once a minimal keepalive solution was found, Michael began experimenting with other features such as cyclotron lights and audio upgrades. Conversations with Jonathan Gunn about potential features exposed some obvious limitations with the Haslab equipment, and so the idea of a microcontroller replacement was born. By late January the wand had a working prototype using an Arduino Nano to control the built-in hardware and work began on the pack controller. Within weeks the pack was running its core functions from an Arduino as well and both devices could communicate with each other for effects and operations. Interest from the community was growing, as was the list of requests for features. Progress updates continued on the GBFans forums as new prototyping work began in the background through February. The introduction of the GitHub page for all source code and project files was introduced. Work also began to prototype and beta test Michael's schematics in the community. By early March the experimental hardware and software was replicated by Dustin Grau and efforts began to formally document instructions for the community. The first true replacement to the stock Haslab controllers was on its way to adoption but only by the most-skilled users. Michael continued adding features and modding his equipment to accommodate community requests. Documentation turned to schematics and video demonstrations, but was still a daunting prospect to most modders. Then in April a PCB schematic was created by Jonathan which changed everything--the idea would be to combine the electronic components which lived on protoboards onto a single board powered by a ATmega2560 chip. Several revisions were rapidly created and modified, and within weeks a prototype board for the pack was created and available. By May, both the pack and wand had viable prototypes which offered the same socket connections as their replaced originals, along with user-friendly options for attaching the wand components which were originally soldered to the stock controller. This was the breakthrough moment for the project. Handwritten notes turned into documentation, which turned into manufactured circuits, then gave way to a means of creating drop-in controllers that would be accessible to modders with a wider range of skills. Even those with no soldering abilities could pick up a screwdriver and install these components. At this stage Angie Rutto of Frutto Technology began working with Michael to identify add-on parts that could integrate with the controllers in use and a bevvy of new options became available. Replacement lights for the power cell and cyclotron lid allowed for full-color effects on the pack, while a new bargraph unit allowed for a plug-and-play upgrade for the wand. The project was now becoming a platform with supported accessories. Efforts then shifted from prototyping and revisional changes to potential worldwide distribution. Polls and preorders gauged the public interest and efforts began to turn components into kits. Michael, Jonathan, and Angie took on additional roles as regional distributors covering the EU, North America, and the UK (respectively). Jonathan created the first website for ordering and modders were able to submit their choice for base kits, special upgrade kits, and optional add-ons.","title":"Project History"},{"location":"ADVCONFIG/","text":"Advanced Configuration The following guide explores the variables and constants which are user-changeable within the code. The purpose of these changes is to set preferred defaults for the operation of your Proton Pack and Neutrona Wand at bootup, meaning just after the devices have battery power applied. These defaults will avoid the need to switch operation modes and other settings through the menu system. Please consider all items as changeable at your own risk. Deviating from any recommended values may impact the operation of your pack and wand and cause unwanted or odd behavior. Bug reports or issues which arise from modification of these values will be considered moot unless accompanied by copies of changed files to aid in reproducing the behavior. All user-configurable values reside within their respective Configuration.h file. Note that when loading the .ino file to the Arduino IDE this should load the related .h files automatically. For more information on how to compile and flash a custom binary after modifying Configuration.h , please see COMPILING_FLASHING.md for GPStar hardware or DIY_FLASHING.md for DIY Arduino builds. EEPROM Data For those who customise their settings and flash their boards manually, any saved settings in the Proton Pack or Neutrona Wand EEPROM can override some settings that you manually flash to your Proton Pack or Neutrona Wand's main system memory. Examples include the Cyclotron and Power Cell Delays, the number of LEDs defined for the Power Cell or Cyclotron, overheating options, etc. You can either override the EEPROM settings by setting b_eeprom = false in the Proton Pack and or Neutrona Wand Configuration.h file before flashing or clearing all the saved settings in your EEPROM from the EEPROM LED Menu System and EEPROM Configuration Menu System. Refer to the Operation Manual for more information on how to enter the different EEPROM menu systems. EEPROM data saving and menu system is only available while using the GPStar Neutrona Wand board with your Neutrona Wand, or via the web interface when using an ESP32 wireless module or Attenuator. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did or wish to disable the EEPROM loading system, refer to const bool b_eeprom in the Proton Pack table below. Proton Pack Variable Description Default Setting uint8_t i_cyclotron_leds Cyclotron Lid LED count. There are 12 LEDs in the stock HasLab Cyclotron Lid. If you install a 40 LED NeoPixel ring in your Cyclotron Lid, then this should be set to 40. The Cyclotron Lid can support up to 40 (rgbw) addressable LEDs such as NeoPixels (ws2812b). They will change colour accordingly if you switch to video game modes firing modes. 12 const uint16_t i_1984_delay This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 1984/1989 mode. The default setting is 275 which is 0.275 seconds. The 2009 video game uses 500. 275 #define CYCLOTRON_DELAY_2021_12_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using the stock Haslab 12 LED setup. 15 #define CYCLOTRON_DELAY_2021_20_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a Frutto Technology 20 LED setup. 10 #define CYCLOTRON_DELAY_2021_36_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a Frutto Technology Max 36 LED setup. 5 #define CYCLOTRON_DELAY_2021_40_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a 40 LED NeoPixel ring. 7 const uint8_t i_1984_cyclotron_12_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the stock Haslab LED setup. { 1, 4, 7, 10 } const uint8_t i_1984_cyclotron_12_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the stock Haslab LED setup. { 1, 10, 7, 4 } const uint8_t i_1984_cyclotron_20_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the Frutto Technology 20 LED setup. { 2, 7, 12, 17 } const uint8_t i_1984_cyclotron_20_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the Frutto Technology 20 LED setup. { 2, 17, 12, 7 } const uint8_t i_1984_cyclotron_36_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the Frutto Technology Max 36 LED setup. { 4, 13, 22, 31 } const uint8_t i_1984_cyclotron_36_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the Frutto Technology Max 36 LED setup. { 4, 31, 22, 13 } const uint8_t i_1984_cyclotron_40_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the 40 NeoPixel Ring LED setup. { 0, 10, 18, 28 } const uint8_t i_1984_cyclotron_40_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the 40 NeoPixel Ring LED setup. { 0, 28, 18, 10 } bool b_clockwise Set to true for the Cyclotron lights to spin clockwise. Set to false to be counter clockwise. This can be controlled by an optional switch on pin 29. This can be toggled from the Neutrona Wand sub menu system. true bool b_fade_cyclotron_led When set to false, the LEDs on the Cyclotron Lid in 1984/1989 mode will not fade between lens transitions which is closer to their appearance in the films. Set to true to get an appearance closer to the 2009 video game. This can be toggled from the Neutrona Wand sub menu system. true bool b_cyclotron_single_led When set to true, the LEDs on the Cyclotron Lid will light up the middle LED only per Cyclotron lens in 1984 and 1989 mode. When set to false, 3 LEDs per lens will be displayed instead. This can be toggled from the Neutrona Wand sub menu system. true bool b_cyclotron_simulate_ring When set to true, using LEDs that are not a ring will simulate a ring rotation for the Cyclotron LEDs in the lid. This only affects Afterlife and Frozen Empire modes (2021/2024). This has no effect if you are using a 40 pixel ring in your Cyclotron Lid. true bool b_cyclotron_colour_toggle If you are using Cyclotron Lid LEDs and Inner Cyclotron LEDs with RGB support, such as the Frutto Technology Cyclotron LEDs or NeoPixel Rings etc. You can toggle if you want it to change colours to match the Video Game Modes or stay the default Red at all times. The default setting is true, which makes the Cyclotron Lid and Inner Cyclotron change colours to match the Video Game Modes. This has no affect on the stock HasLab Cyclotron Lid LEDs, which are red only. This can be toggled in the Neutrona Wand sub menu system. true const bool b_cyclotron_haslab_chsv_colour_change When using 12 LEDs for the Cyclotron Lid (Stock HasLab), the system will default it to always red because changing the colour space with a CHSV colour object affects the brightness slightly for non RGB pixels such as the ones used in the HasLab Cyclotron Lid. If you are using 12 LEDs that are RGB, they will always be red when this is set to false. Setting this to true will override it and make the LEDs change colour if they are RGB. This only affects when you are using 12 LEDs for the Cyclotron Lid (HasLab) false uint8_t i_powercell_leds Power Cell LED count. There are 13 LEDs in the stock HasLab Power Cell. If you install a Frutto Technology Power Cell which has 15 LEDs, then change this to 15. You can also add your own addressable LEDs, adjust the count as necessary. If you add more Power Cell LEDs, you may want to adjust the i_powercell_delay_2021 and i_powercell_delay_1984 to lower numbers to speed up the Power Cell delay to reflect the additional LEDs. For 15 LEDs, 1984 at 60 and 2021 at 34 are good settings. 13 #define POWERCELL_DELAY_1984_13_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 1984/1989 mode when using a 13 LED Power Cell. 46 #define POWERCELL_DELAY_2021_13_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 2021/2024 mode when using a 13 LED Power Cell. 40 #define POWERCELL_DELAY_1984_15_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 1984/1989 mode when using a 15 LED Power Cell. 40 #define POWERCELL_DELAY_2021_15_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 2021/1989 mode when using a 15 LED Power Cell. 34 uint8_t i_powercell_delay_1984 This is the actual control variable for the Power Cell LED delay in 1984/1989 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. POWERCELL_DELAY_1984_13_LED uint8_t i_powercell_delay_2021 This is the actual control variable for the Power Cell LED delay in 2021/2024 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. POWERCELL_DELAY_2021_13_LED bool b_powercell_invert Set to true to invert the Power Cell animation. false bool b_powercell_colour_toggle If you are using Power Cell LEDs with RGB support, such as the Frutto Technology Power Cells, you can toggle if you want it to change colours to match the Video Game Modes or stay the default Blue at all times. The default setting is true, which makes the Power Cell change colours to match the Video Game Modes. This has no affect on the stock HasLab Power Cell LEDs, which are blue only. This can be toggled in the Neutrona Wand sub menu system. true uint8_t i_inner_cyclotron_cake_num_leds This setting controls how many optional LEDs are in the Inner (cake) Cyclotron. Default setting of 35 is for a 35 pixel NeoPixel ring. If you change this for a smaller NeoPixel ring, you may need to alter the i_2021_inner_delay and i_1984_inner_delay to lower values to slow down the rotation speed for a smaller ring. 35 LED_TYPES CAVITY_LED_TYPE Sets the default LED type for the inner cyclotron cavity fairy lights. Choices are RGB_LED , GRB_LED or GBR_LED . RGB_LED uint8_t i_inner_cyclotron_cavity_num_leds You can use up to 20 LEDs. This is generally for adding additional LEDs inside the cyclotron cavity to create spark effects or anything else. 0 LED_TYPES CAKE_LED_TYPE Sets the default LED type for the inner cyclotron cake. Choices are RGB_LED , GRB_LED or GBR_LED . GBR_LED #define INNER_CYCLOTRON_DELAY_1984_12_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 12 LED NeoPixel ring. 15 #define INNER_CYCLOTRON_DELAY_2021_12_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 12 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_1984_23_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 23 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_23_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 23 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_24_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 24 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_24_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 24 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_26_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 26 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_26_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 26 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_35_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 35 LED NeoPixel ring. 9 #define INNER_CYCLOTRON_DELAY_2021_35_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 35 LED NeoPixel ring. 5 #define INNER_CYCLOTRON_DELAY_1984_36_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 36 LED NeoPixel ring. 9 #define INNER_CYCLOTRON_DELAY_2021_36_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 36 LED NeoPixel ring. 5 uint8_t i_1984_inner_delay This is the actual control variable for the Inner Cyclotron (cake) LED delay in 1984/1989 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. INNER_CYCLOTRON_DELAY_1984_35_LED uint8_t i_2021_inner_delay This is the actual control variable for the Inner Cyclotron (cake) LED delay in 2021/2024 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. INNER_CYCLOTRON_DELAY_2021_35_LED uint8_t i_spectral_powercell_custom_colour This is the default colour of the Power Cell when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_cyclotron_custom_colour This is the default colour of the Cyclotron when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_cyclotron_inner_custom#95;colour This is the default colour of the Inner Cyclotron (cake) when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_powercell_custom_saturation This is the saturation of the Power Cell when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_spectral_cyclotron_custom_saturation This is the saturation of the Cyclotron when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_spectral_cyclotron_inner_custom_saturation This is the saturation of the Inner Cyclotron (cake) when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_powercell_brightness The default brightness of your Power Cell LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_brightness The default brightness of your Cyclotron LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_inner_brightness The default brightness of your Inner Cyclotron LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_panel_brightness The default brightness of your Frutto Inner Cyclotron LED Switch Panel (if installed) in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 const uint8_t STARTUP_VOLUME The default startup master volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const uint8_t STARTUP_VOLUME_MUSIC The default music volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const uint8_t STARTUP_VOLUME_EFFECTS The default sound effects volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const int8_t MINIMUM_VOLUME You can set the minimum lowest volume the Proton Pack can go. 0 = loudest, and -70 = quietest. -60 const uint8_t VOLUME_MULTIPLIER Percentage increments of master volume change. 5 const uint8_t VOLUME_MUSIC_MULTIPLIER Percentage increments of the music volume change. 5 const uint8_t VOLUME_EFFECTS_MULTIPLIER Percentage increments of the sound effects volume change. 5 const bool b_onboard_amp_enabled Set to true to enable the onboard amplifier of the WAV Trigger. Turning off the onboard amp draws less power. If using the AUX cable jack of the WAV Trigger, the amp can be disabled to save power. If you are using the output pins directly on the WAV Trigger board to your speakers, you will need to enable the amp. The onboard mono audio amplifier and speaker connector specifications: 2w into 4 Ohms, 1.25W into 8 Ohms false bool b_demo_light_mode When set to true, the Proton Pack will turn on automatically when it receives power. If you want your Proton Pack to be silent, change your STARTUP_VOLUME to be 0 or unplug the power to your amplifier. false bool b_stream_effects When set to true, various impact and other stream effects will overlap and mix randomly into the Proton Stream for an added experience. This can be toggled from the Neutrona Wand sub menu system true bool b_overheat_strobe If you want the optional N-Filter NeoPixel jewel to strobe during overheat, set to true. When false, the light stays solid white during overheat. false bool b_overheat_lights_off When the pack is overheating, the Power Cell will ramp down and turn off. The Cyclotron also turns off. When set to false, the Power Cell and Cyclotron stay on during overheat but ramps down and spins very slowly. true bool b_overheat_sync_to_fan When set to true, smoke from the N-Filter will only operate at the same time the fan is operating. When set to false (default), smoke in the N-Filter will pump earlier than the fan to fill up the N-Filter with some smoke. If you have a smoke/fan kit for the N-Filter that operates the smoke and fan at the same time, and you are connected to the smoke N-Filter pin on the pack board, then you would want to set this to true. If you have a smoke kit where the smoke and fan are independently connected to the pack board, setting to false is preferred. false bool b_smoke_enabled Enable or disable smoke settings. This can be toggled with a switch on PIN 37. This can be toggled from the Neutrona Wand sub menu system. true bool b_smoke_1_continuous_firing Set to true to enable smoke 1 during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_smoke_2_continuous_firing Set to true to enable smoke 2 during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_fan_continuous_firing Set to true to enable the fan during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_fan_booster_continuous_firing Set to true to enable the fan in the booster tube during continuous firing events. This can be overridden if b_smoke_enabled is set to false true const bool b_smoke_continuous_level_1 Set to true to enable smoke events in wand power level 1 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_2 Set to true to enable smoke events in wand power level 2 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_3 Set to true to enable smoke events in wand power level 3 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_4 Set to true to enable smoke events in wand power level 4 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_5 Set to true to enable smoke events in wand power level 5 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const uint16_t i_smoke_timer_level_1 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 1 . Example: 30000 is 30 seconds 30000 const uint16_t i_smoke_timer_level_2 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 2 . Example: 15000 is 15 seconds 15000 const uint16_t i_smoke_timer_level_3 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 3 . Example: 10000 is 10 seconds 10000 const uint16_t i_smoke_timer_level_4 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 4 . Example: 7500 is 7.5 seconds 7500 const uint16_t i_smoke_timer_level_5 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 5 . Example: 6000 is 6 seconds 6000 const uint16_t i_smoke_on_time_level_1 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 1 after they have been activated. Example: 3000 is 3 seconds 3000 const uint16_t i_smoke_on_time_level_2 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 2 after they have been activated. Example: 3000 is 3 seconds 3000 const uint16_t i_smoke_on_time_level_3 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 3 after they have been activated. Example: 3500 is 3.5 seconds 3500 const uint16_t i_smoke_on_time_level_4 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 4 after they have been activated. Example: 3500 is 3.5 seconds 3500 const uint16_t i_smoke_on_time_level_5 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 5 after they have been activated. Example: 3500 is 4 seconds 4000 bool b_smoke_nfilter_overheat Set to true to enable N-Filter smoke during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_smoke_booster_overheat Set to true to enable booster tube smoke during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_fan_nfilter_overheat Set to true to enable the N-Filter fan pin during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_fan_booster_overheat Set to true to enable the booster tube fan pin during the overheat sequence. This can be overridden if b_smoke_enabled is false true const bool b_smoke_overheat_level_1 Set to true to enable smoke events during the overheat sequence in wand power level 1 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_2 Set to true to enable smoke events during the overheat sequence in wand power level 2 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_3 Set to true to enable smoke events during the overheat sequence in wand power level 3 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_4 Set to true to enable smoke events during the overheat sequence in wand power level 4 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_5 Set to true to enable smoke events during the overheat sequence in wand power level 5 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true uint16_t i_ms_overheating_length_1 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 1 . Example: 2000 is 2 seconds 2000 uint16_t i_ms_overheating_length_2 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 2 . Example: 3000 is 3 seconds 3000 uint16_t i_ms_overheating_length_3 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 3 . Example: 4000 is 4 seconds 4000 uint16_t i_ms_overheating_length_4 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 4 . Example: 5000 is 5 seconds 5000 uint16_t i_ms_overheating_length_5 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 5 . Example: 6000 is 6 seconds 6000 bool b_use_ribbon_cable Set to true to false the Ribbon Cable Alarm switch. false const bool b_use_power_meter Set to true to enable support for the Frutto Current Sensor board which allows the use of unmodified Hasbro wands with the GPStar Proton Pack. true const bool b_show_power_data Set to true to output V/A data to the serial monitor for diagnostic plotting purposes. false const bool b_diagnostic Set to true if you want to know if your wand and pack are communicating. If the wand and pack have a serial connection to each other, you will hear a constant beeping sound. false const bool b_eeprom Set to true if you to read the configuration data from the EEPROM memory in the Proton Pack. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. true Neutrona Wand Variable Description Default Setting const uint8_t STARTUP_VOLUME The default master volume of your wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const uint8_t STARTUP_VOLUME_MUSIC The default music volume of the Neutrona Wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const uint8_t STARTUP_VOLUME_EFFECTS The default sound effects volume of the Neutrona Wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const int8_t MINIMUM_VOLUME You can set the minimum lowest volume the Neutona Wand can go. 0 = loudest, and -70 = quietest. If your Proton Pack is overpowering your Neutrona Wand sounds at lower volume levels, increase this number. -35 const uint8_t VOLUME_MULTIPLIER Percentage increments of main volume change. 5 const uint8_t VOLUME_MUSIC_MULTIPLIER Percentage increments of the music volume change. 5 const uint8_t VOLUME_EFFECTS_MULTIPLIER Percentage increments of the sound effects volume change. 5 const bool b_onboard_amp_enabled Set to true to enable the onboard amplifier of the WAV Trigger. Turning off the onboard amp draws less power. If using the AUX cable jack of the WAV Trigger, the amp can be disabled to save power. If you are using the output pins directly on the WAV Trigger board to your speakers, you will need to enable the amp. The onboard mono audio amplifier and speaker connector specifications: 2w into 4 Ohms, 1.25W into 8 Ohms true bool b_bargraph_invert When set to true, the bargraph sequences will be inverted. false bool b_rgb_vent_light Enables support for the optional GPStar RGB Vent/Top Light board. If enabled, addressable LED data will be transmitted on pin D12 instead of the top LED blink. false bool b_vent_light_control When set to true, the vent light will adjust its intensity based on the wand power levels and status. This pairs very well with the Frutto Technologies High Intensity Vent Light. true bool b_quick_vent When set to true, pressing Intensify while the top switch on the wand is off initiates a quick vent while holding down Intensify will perform a full overheat sequence. Overheating must be enabled for this to work. true bool b_power_on_indicator When set to true, the LED at the front of the Neutrona Wand body next to the Clippard valve will start to blink after 1 minute of inactivity while the Neutrona Wand and Proton Pack are powered down. true bool b_spectral_mode_enabled When set to true, the special spectral firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPRON config menu. false bool b_holiday_mode_enabled When set to true, the special holiday firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPROM config menu. false bool b_spectral_custom_mode_enabled When set to true, the Spectral Custom firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPROM config menu. false uint8_t i_spectral_wand_custom_colour This is the default colour of the Neutrona Wand barrel when in the Spectral Custom firing mode. The default colour is purple. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_wand_custom_saturation This is the saturation of the Wand Barrel when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 bool b_overheat_enabled Set to true if you want the Neutrona Wand and Proton Pack to overheat (Overheat settings below still need to be enabled for the necessary power levels. When set to false, it will override and overheating settings in each individual power mode. This can be toggled from the Neutrona Wand sub menu system. true bool b_wand_boot_errors Set to true to have your Neutrona Wand boot up with errors when the top right switch (beep switch) is on while you are turning on your wand. When set to false, this feature is disabled. true bool b_overheat_bargraph_blink Set to true to have your Neutrona Wand bargraph blink on and off during the overheat sequence. When set to false, it will ramp down instead. false bool b_beep_loop When set to false, the Neutrona Wand will no longer loop the beep sound effect in Afterlife mode. true bool b_overheat_level_1 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 1 false bool b_overheat_level_2 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 2 false bool b_overheat_level_3 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 3 false bool b_overheat_level_4 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 4 false bool b_overheat_level_5 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 5 true uint16_t i_ms_overheat_initiate_level_1 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 1 . Example: 60000 is 60 seconds 60000 uint16_t i_ms_overheat_initiate_level_2 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 2 . Example: 50000 is 50 seconds 50000 uint16_t i_ms_overheat_initiate_level_3 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 3 . Example: 40000 is 40 seconds 40000 uint16_t i_ms_overheat_initiate_level_4 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 4 . Example: 35000 is 35 seconds 35000 uint16_t i_ms_overheat_initiate_level_5 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 5 . Example: 30000 is 30 seconds 30000 bool b_stream_effects When set to true, various impact and other stream effects will overlap and mix randomly into the Proton Stream for an added experience. This can be toggled from the Neutrona Wand sub menu system true bool b_extra_pack_sounds When set to true, the Proton Pack will play sounds that the Neutrona Wand would normally play alone. Useful when running a Neutrona Wand build without a speaker. true const bool b_eeprom Set to true if you want to read the configuration data from the EEPROM memory in the Neutrona Wand. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. true const bool b_gpstar_benchtest Set this to true if you want to use your Neutrona Wand without a Proton Pack connected. Otherwise when false, the Neutrona Wand will wait until it is connected to a Proton Pack before it can activate. false","title":"Advanced Configuration"},{"location":"ADVCONFIG/#advanced-configuration","text":"The following guide explores the variables and constants which are user-changeable within the code. The purpose of these changes is to set preferred defaults for the operation of your Proton Pack and Neutrona Wand at bootup, meaning just after the devices have battery power applied. These defaults will avoid the need to switch operation modes and other settings through the menu system. Please consider all items as changeable at your own risk. Deviating from any recommended values may impact the operation of your pack and wand and cause unwanted or odd behavior. Bug reports or issues which arise from modification of these values will be considered moot unless accompanied by copies of changed files to aid in reproducing the behavior. All user-configurable values reside within their respective Configuration.h file. Note that when loading the .ino file to the Arduino IDE this should load the related .h files automatically. For more information on how to compile and flash a custom binary after modifying Configuration.h , please see COMPILING_FLASHING.md for GPStar hardware or DIY_FLASHING.md for DIY Arduino builds.","title":"Advanced Configuration"},{"location":"ADVCONFIG/#eeprom-data","text":"For those who customise their settings and flash their boards manually, any saved settings in the Proton Pack or Neutrona Wand EEPROM can override some settings that you manually flash to your Proton Pack or Neutrona Wand's main system memory. Examples include the Cyclotron and Power Cell Delays, the number of LEDs defined for the Power Cell or Cyclotron, overheating options, etc. You can either override the EEPROM settings by setting b_eeprom = false in the Proton Pack and or Neutrona Wand Configuration.h file before flashing or clearing all the saved settings in your EEPROM from the EEPROM LED Menu System and EEPROM Configuration Menu System. Refer to the Operation Manual for more information on how to enter the different EEPROM menu systems. EEPROM data saving and menu system is only available while using the GPStar Neutrona Wand board with your Neutrona Wand, or via the web interface when using an ESP32 wireless module or Attenuator. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did or wish to disable the EEPROM loading system, refer to const bool b_eeprom in the Proton Pack table below.","title":"EEPROM Data"},{"location":"ADVCONFIG/#proton-pack","text":"Variable Description Default Setting uint8_t i_cyclotron_leds Cyclotron Lid LED count. There are 12 LEDs in the stock HasLab Cyclotron Lid. If you install a 40 LED NeoPixel ring in your Cyclotron Lid, then this should be set to 40. The Cyclotron Lid can support up to 40 (rgbw) addressable LEDs such as NeoPixels (ws2812b). They will change colour accordingly if you switch to video game modes firing modes. 12 const uint16_t i_1984_delay This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 1984/1989 mode. The default setting is 275 which is 0.275 seconds. The 2009 video game uses 500. 275 #define CYCLOTRON_DELAY_2021_12_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using the stock Haslab 12 LED setup. 15 #define CYCLOTRON_DELAY_2021_20_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a Frutto Technology 20 LED setup. 10 #define CYCLOTRON_DELAY_2021_36_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a Frutto Technology Max 36 LED setup. 5 #define CYCLOTRON_DELAY_2021_40_LED This controls the delay in milliseconds when an LED changes on the Cyclotron Lid in 2021/2024 mode when using a 40 LED NeoPixel ring. 7 const uint8_t i_1984_cyclotron_12_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the stock Haslab LED setup. { 1, 4, 7, 10 } const uint8_t i_1984_cyclotron_12_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the stock Haslab LED setup. { 1, 10, 7, 4 } const uint8_t i_1984_cyclotron_20_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the Frutto Technology 20 LED setup. { 2, 7, 12, 17 } const uint8_t i_1984_cyclotron_20_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the Frutto Technology 20 LED setup. { 2, 17, 12, 7 } const uint8_t i_1984_cyclotron_36_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the Frutto Technology Max 36 LED setup. { 4, 13, 22, 31 } const uint8_t i_1984_cyclotron_36_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the Frutto Technology Max 36 LED setup. { 4, 31, 22, 13 } const uint8_t i_1984_cyclotron_40_leds_cw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a clockwise direction. The top right lens is the Cyclotron lens #1 and work your way clockwise. This is for the 40 NeoPixel Ring LED setup. { 0, 10, 18, 28 } const uint8_t i_1984_cyclotron_40_leds_ccw[4] This is the middle LED aligned in each Cyclotron lens. Put the sequence in order from lowest to highest in a counter-clockwise direction. The top right lens is the Cyclotron lens #1 and work your way counter-clockwise. This is for the 40 NeoPixel Ring LED setup. { 0, 28, 18, 10 } bool b_clockwise Set to true for the Cyclotron lights to spin clockwise. Set to false to be counter clockwise. This can be controlled by an optional switch on pin 29. This can be toggled from the Neutrona Wand sub menu system. true bool b_fade_cyclotron_led When set to false, the LEDs on the Cyclotron Lid in 1984/1989 mode will not fade between lens transitions which is closer to their appearance in the films. Set to true to get an appearance closer to the 2009 video game. This can be toggled from the Neutrona Wand sub menu system. true bool b_cyclotron_single_led When set to true, the LEDs on the Cyclotron Lid will light up the middle LED only per Cyclotron lens in 1984 and 1989 mode. When set to false, 3 LEDs per lens will be displayed instead. This can be toggled from the Neutrona Wand sub menu system. true bool b_cyclotron_simulate_ring When set to true, using LEDs that are not a ring will simulate a ring rotation for the Cyclotron LEDs in the lid. This only affects Afterlife and Frozen Empire modes (2021/2024). This has no effect if you are using a 40 pixel ring in your Cyclotron Lid. true bool b_cyclotron_colour_toggle If you are using Cyclotron Lid LEDs and Inner Cyclotron LEDs with RGB support, such as the Frutto Technology Cyclotron LEDs or NeoPixel Rings etc. You can toggle if you want it to change colours to match the Video Game Modes or stay the default Red at all times. The default setting is true, which makes the Cyclotron Lid and Inner Cyclotron change colours to match the Video Game Modes. This has no affect on the stock HasLab Cyclotron Lid LEDs, which are red only. This can be toggled in the Neutrona Wand sub menu system. true const bool b_cyclotron_haslab_chsv_colour_change When using 12 LEDs for the Cyclotron Lid (Stock HasLab), the system will default it to always red because changing the colour space with a CHSV colour object affects the brightness slightly for non RGB pixels such as the ones used in the HasLab Cyclotron Lid. If you are using 12 LEDs that are RGB, they will always be red when this is set to false. Setting this to true will override it and make the LEDs change colour if they are RGB. This only affects when you are using 12 LEDs for the Cyclotron Lid (HasLab) false uint8_t i_powercell_leds Power Cell LED count. There are 13 LEDs in the stock HasLab Power Cell. If you install a Frutto Technology Power Cell which has 15 LEDs, then change this to 15. You can also add your own addressable LEDs, adjust the count as necessary. If you add more Power Cell LEDs, you may want to adjust the i_powercell_delay_2021 and i_powercell_delay_1984 to lower numbers to speed up the Power Cell delay to reflect the additional LEDs. For 15 LEDs, 1984 at 60 and 2021 at 34 are good settings. 13 #define POWERCELL_DELAY_1984_13_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 1984/1989 mode when using a 13 LED Power Cell. 46 #define POWERCELL_DELAY_2021_13_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 2021/2024 mode when using a 13 LED Power Cell. 40 #define POWERCELL_DELAY_1984_15_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 1984/1989 mode when using a 15 LED Power Cell. 40 #define POWERCELL_DELAY_2021_15_LED This controls the delay in milliseconds when an LED changes on the Power Cell in 2021/1989 mode when using a 15 LED Power Cell. 34 uint8_t i_powercell_delay_1984 This is the actual control variable for the Power Cell LED delay in 1984/1989 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. POWERCELL_DELAY_1984_13_LED uint8_t i_powercell_delay_2021 This is the actual control variable for the Power Cell LED delay in 2021/2024 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. POWERCELL_DELAY_2021_13_LED bool b_powercell_invert Set to true to invert the Power Cell animation. false bool b_powercell_colour_toggle If you are using Power Cell LEDs with RGB support, such as the Frutto Technology Power Cells, you can toggle if you want it to change colours to match the Video Game Modes or stay the default Blue at all times. The default setting is true, which makes the Power Cell change colours to match the Video Game Modes. This has no affect on the stock HasLab Power Cell LEDs, which are blue only. This can be toggled in the Neutrona Wand sub menu system. true uint8_t i_inner_cyclotron_cake_num_leds This setting controls how many optional LEDs are in the Inner (cake) Cyclotron. Default setting of 35 is for a 35 pixel NeoPixel ring. If you change this for a smaller NeoPixel ring, you may need to alter the i_2021_inner_delay and i_1984_inner_delay to lower values to slow down the rotation speed for a smaller ring. 35 LED_TYPES CAVITY_LED_TYPE Sets the default LED type for the inner cyclotron cavity fairy lights. Choices are RGB_LED , GRB_LED or GBR_LED . RGB_LED uint8_t i_inner_cyclotron_cavity_num_leds You can use up to 20 LEDs. This is generally for adding additional LEDs inside the cyclotron cavity to create spark effects or anything else. 0 LED_TYPES CAKE_LED_TYPE Sets the default LED type for the inner cyclotron cake. Choices are RGB_LED , GRB_LED or GBR_LED . GBR_LED #define INNER_CYCLOTRON_DELAY_1984_12_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 12 LED NeoPixel ring. 15 #define INNER_CYCLOTRON_DELAY_2021_12_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 12 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_1984_23_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 23 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_23_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 23 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_24_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 24 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_24_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 24 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_26_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 26 LED NeoPixel ring. 12 #define INNER_CYCLOTRON_DELAY_2021_26_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 26 LED NeoPixel ring. 8 #define INNER_CYCLOTRON_DELAY_1984_35_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 35 LED NeoPixel ring. 9 #define INNER_CYCLOTRON_DELAY_2021_35_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 35 LED NeoPixel ring. 5 #define INNER_CYCLOTRON_DELAY_1984_36_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 1984/1989 mode when using a 36 LED NeoPixel ring. 9 #define INNER_CYCLOTRON_DELAY_2021_36_LED This controls the delay in milliseconds when an LED changes on the Inner Cyclotron (cake) in 2021/2024 mode when using a 36 LED NeoPixel ring. 5 uint8_t i_1984_inner_delay This is the actual control variable for the Inner Cyclotron (cake) LED delay in 1984/1989 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. INNER_CYCLOTRON_DELAY_1984_35_LED uint8_t i_2021_inner_delay This is the actual control variable for the Inner Cyclotron (cake) LED delay in 2021/2024 mode. It is recommended to change the above defines and only change this variable to the appropriate define for your LED configuration. INNER_CYCLOTRON_DELAY_2021_35_LED uint8_t i_spectral_powercell_custom_colour This is the default colour of the Power Cell when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_cyclotron_custom_colour This is the default colour of the Cyclotron when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_cyclotron_inner_custom#95;colour This is the default colour of the Inner Cyclotron (cake) when in the Spectral Custom firing mode. The default colour is purple, and this ranges from 1 to 254. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_powercell_custom_saturation This is the saturation of the Power Cell when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_spectral_cyclotron_custom_saturation This is the saturation of the Cyclotron when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_spectral_cyclotron_inner_custom_saturation This is the saturation of the Inner Cyclotron (cake) when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 uint8_t i_powercell_brightness The default brightness of your Power Cell LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_brightness The default brightness of your Cyclotron LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_inner_brightness The default brightness of your Inner Cyclotron LEDs in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 uint8_t i_cyclotron_panel_brightness The default brightness of your Frutto Inner Cyclotron LED Switch Panel (if installed) in percentages. 0 = off, 100 = maximum brightness. This can be toggled from the Neutrona Wand sub menu system. 100 const uint8_t STARTUP_VOLUME The default startup master volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const uint8_t STARTUP_VOLUME_MUSIC The default music volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const uint8_t STARTUP_VOLUME_EFFECTS The default sound effects volume of the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. When a Neutrona Wand is connected, it will sync to this value. 100 const int8_t MINIMUM_VOLUME You can set the minimum lowest volume the Proton Pack can go. 0 = loudest, and -70 = quietest. -60 const uint8_t VOLUME_MULTIPLIER Percentage increments of master volume change. 5 const uint8_t VOLUME_MUSIC_MULTIPLIER Percentage increments of the music volume change. 5 const uint8_t VOLUME_EFFECTS_MULTIPLIER Percentage increments of the sound effects volume change. 5 const bool b_onboard_amp_enabled Set to true to enable the onboard amplifier of the WAV Trigger. Turning off the onboard amp draws less power. If using the AUX cable jack of the WAV Trigger, the amp can be disabled to save power. If you are using the output pins directly on the WAV Trigger board to your speakers, you will need to enable the amp. The onboard mono audio amplifier and speaker connector specifications: 2w into 4 Ohms, 1.25W into 8 Ohms false bool b_demo_light_mode When set to true, the Proton Pack will turn on automatically when it receives power. If you want your Proton Pack to be silent, change your STARTUP_VOLUME to be 0 or unplug the power to your amplifier. false bool b_stream_effects When set to true, various impact and other stream effects will overlap and mix randomly into the Proton Stream for an added experience. This can be toggled from the Neutrona Wand sub menu system true bool b_overheat_strobe If you want the optional N-Filter NeoPixel jewel to strobe during overheat, set to true. When false, the light stays solid white during overheat. false bool b_overheat_lights_off When the pack is overheating, the Power Cell will ramp down and turn off. The Cyclotron also turns off. When set to false, the Power Cell and Cyclotron stay on during overheat but ramps down and spins very slowly. true bool b_overheat_sync_to_fan When set to true, smoke from the N-Filter will only operate at the same time the fan is operating. When set to false (default), smoke in the N-Filter will pump earlier than the fan to fill up the N-Filter with some smoke. If you have a smoke/fan kit for the N-Filter that operates the smoke and fan at the same time, and you are connected to the smoke N-Filter pin on the pack board, then you would want to set this to true. If you have a smoke kit where the smoke and fan are independently connected to the pack board, setting to false is preferred. false bool b_smoke_enabled Enable or disable smoke settings. This can be toggled with a switch on PIN 37. This can be toggled from the Neutrona Wand sub menu system. true bool b_smoke_1_continuous_firing Set to true to enable smoke 1 during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_smoke_2_continuous_firing Set to true to enable smoke 2 during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_fan_continuous_firing Set to true to enable the fan during continuous firing events. This can be overridden if b_smoke_enabled is set to false true bool b_fan_booster_continuous_firing Set to true to enable the fan in the booster tube during continuous firing events. This can be overridden if b_smoke_enabled is set to false true const bool b_smoke_continuous_level_1 Set to true to enable smoke events in wand power level 1 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_2 Set to true to enable smoke events in wand power level 2 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_3 Set to true to enable smoke events in wand power level 3 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_4 Set to true to enable smoke events in wand power level 4 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const bool b_smoke_continuous_level_5 Set to true to enable smoke events in wand power level 5 during continuous firing events. This can be overridden if b_smoke_enabled is set to false or if all 3 of the smoke_1, smoke_2 and fan_continuous are set to false true const uint16_t i_smoke_timer_level_1 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 1 . Example: 30000 is 30 seconds 30000 const uint16_t i_smoke_timer_level_2 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 2 . Example: 15000 is 15 seconds 15000 const uint16_t i_smoke_timer_level_3 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 3 . Example: 10000 is 10 seconds 10000 const uint16_t i_smoke_timer_level_4 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 4 . Example: 7500 is 7.5 seconds 7500 const uint16_t i_smoke_timer_level_5 How long in milliseconds until the smoke pins & fan pin are activated during a continuous firing in wand power level 5 . Example: 6000 is 6 seconds 6000 const uint16_t i_smoke_on_time_level_1 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 1 after they have been activated. Example: 3000 is 3 seconds 3000 const uint16_t i_smoke_on_time_level_2 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 2 after they have been activated. Example: 3000 is 3 seconds 3000 const uint16_t i_smoke_on_time_level_3 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 3 after they have been activated. Example: 3500 is 3.5 seconds 3500 const uint16_t i_smoke_on_time_level_4 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 4 after they have been activated. Example: 3500 is 3.5 seconds 3500 const uint16_t i_smoke_on_time_level_5 How long you want your smoke pins and fan pin to stay on while continuous firing in wand power level 5 after they have been activated. Example: 3500 is 4 seconds 4000 bool b_smoke_nfilter_overheat Set to true to enable N-Filter smoke during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_smoke_booster_overheat Set to true to enable booster tube smoke during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_fan_nfilter_overheat Set to true to enable the N-Filter fan pin during the overheat sequence. This can be overridden if b_smoke_enabled is false true bool b_fan_booster_overheat Set to true to enable the booster tube fan pin during the overheat sequence. This can be overridden if b_smoke_enabled is false true const bool b_smoke_overheat_level_1 Set to true to enable smoke events during the overheat sequence in wand power level 1 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_2 Set to true to enable smoke events during the overheat sequence in wand power level 2 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_3 Set to true to enable smoke events during the overheat sequence in wand power level 3 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_4 Set to true to enable smoke events during the overheat sequence in wand power level 4 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true const bool b_smoke_overheat_level_5 Set to true to enable smoke events during the overheat sequence in wand power level 5 . This can be overridden if b_smoke_enabled is false or if all 3 of the smoke_1, smoke_2 and fan overheat are set to false true uint16_t i_ms_overheating_length_1 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 1 . Example: 2000 is 2 seconds 2000 uint16_t i_ms_overheating_length_2 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 2 . Example: 3000 is 3 seconds 3000 uint16_t i_ms_overheating_length_3 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 3 . Example: 4000 is 4 seconds 4000 uint16_t i_ms_overheating_length_4 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 4 . Example: 5000 is 5 seconds 5000 uint16_t i_ms_overheating_length_5 How long the overheat sequence (and smoke duration if b_overheat_sync_to_fan is enabled) lasts in wand power level 5 . Example: 6000 is 6 seconds 6000 bool b_use_ribbon_cable Set to true to false the Ribbon Cable Alarm switch. false const bool b_use_power_meter Set to true to enable support for the Frutto Current Sensor board which allows the use of unmodified Hasbro wands with the GPStar Proton Pack. true const bool b_show_power_data Set to true to output V/A data to the serial monitor for diagnostic plotting purposes. false const bool b_diagnostic Set to true if you want to know if your wand and pack are communicating. If the wand and pack have a serial connection to each other, you will hear a constant beeping sound. false const bool b_eeprom Set to true if you to read the configuration data from the EEPROM memory in the Proton Pack. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. true","title":"Proton Pack"},{"location":"ADVCONFIG/#neutrona-wand","text":"Variable Description Default Setting const uint8_t STARTUP_VOLUME The default master volume of your wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const uint8_t STARTUP_VOLUME_MUSIC The default music volume of the Neutrona Wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const uint8_t STARTUP_VOLUME_EFFECTS The default sound effects volume of the Neutrona Wand. This will be overridden if you connect your Neutrona Wand to the Proton Pack. This is a percentage value of between 100% and 0%. 100 = highest, 0 = lowest. 100 const int8_t MINIMUM_VOLUME You can set the minimum lowest volume the Neutona Wand can go. 0 = loudest, and -70 = quietest. If your Proton Pack is overpowering your Neutrona Wand sounds at lower volume levels, increase this number. -35 const uint8_t VOLUME_MULTIPLIER Percentage increments of main volume change. 5 const uint8_t VOLUME_MUSIC_MULTIPLIER Percentage increments of the music volume change. 5 const uint8_t VOLUME_EFFECTS_MULTIPLIER Percentage increments of the sound effects volume change. 5 const bool b_onboard_amp_enabled Set to true to enable the onboard amplifier of the WAV Trigger. Turning off the onboard amp draws less power. If using the AUX cable jack of the WAV Trigger, the amp can be disabled to save power. If you are using the output pins directly on the WAV Trigger board to your speakers, you will need to enable the amp. The onboard mono audio amplifier and speaker connector specifications: 2w into 4 Ohms, 1.25W into 8 Ohms true bool b_bargraph_invert When set to true, the bargraph sequences will be inverted. false bool b_rgb_vent_light Enables support for the optional GPStar RGB Vent/Top Light board. If enabled, addressable LED data will be transmitted on pin D12 instead of the top LED blink. false bool b_vent_light_control When set to true, the vent light will adjust its intensity based on the wand power levels and status. This pairs very well with the Frutto Technologies High Intensity Vent Light. true bool b_quick_vent When set to true, pressing Intensify while the top switch on the wand is off initiates a quick vent while holding down Intensify will perform a full overheat sequence. Overheating must be enabled for this to work. true bool b_power_on_indicator When set to true, the LED at the front of the Neutrona Wand body next to the Clippard valve will start to blink after 1 minute of inactivity while the Neutrona Wand and Proton Pack are powered down. true bool b_spectral_mode_enabled When set to true, the special spectral firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPRON config menu. false bool b_holiday_mode_enabled When set to true, the special holiday firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPROM config menu. false bool b_spectral_custom_mode_enabled When set to true, the Spectral Custom firing mode is enabled. This firing mode is part of the video game firing modes. This can be toggled from the EEPROM config menu. false uint8_t i_spectral_wand_custom_colour This is the default colour of the Neutrona Wand barrel when in the Spectral Custom firing mode. The default colour is purple. This firing mode is part of the video game firing modes. This colour can be adjusted from the EEPROM LED menu. 200 uint8_t i_spectral_wand_custom_saturation This is the saturation of the Wand Barrel when in the Spectral Custom firing mode. This ranges from 1 to 254. This firing mode is part of the video game firing modes. This saturation can be adjusted from the EEPROM LED menu. 254 bool b_overheat_enabled Set to true if you want the Neutrona Wand and Proton Pack to overheat (Overheat settings below still need to be enabled for the necessary power levels. When set to false, it will override and overheating settings in each individual power mode. This can be toggled from the Neutrona Wand sub menu system. true bool b_wand_boot_errors Set to true to have your Neutrona Wand boot up with errors when the top right switch (beep switch) is on while you are turning on your wand. When set to false, this feature is disabled. true bool b_overheat_bargraph_blink Set to true to have your Neutrona Wand bargraph blink on and off during the overheat sequence. When set to false, it will ramp down instead. false bool b_beep_loop When set to false, the Neutrona Wand will no longer loop the beep sound effect in Afterlife mode. true bool b_overheat_level_1 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 1 false bool b_overheat_level_2 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 2 false bool b_overheat_level_3 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 3 false bool b_overheat_level_4 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 4 false bool b_overheat_level_5 Set to true if you want the Neutrona Wand and Proton Pack to overheat in wand power level 5 true uint16_t i_ms_overheat_initiate_level_1 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 1 . Example: 60000 is 60 seconds 60000 uint16_t i_ms_overheat_initiate_level_2 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 2 . Example: 50000 is 50 seconds 50000 uint16_t i_ms_overheat_initiate_level_3 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 3 . Example: 40000 is 40 seconds 40000 uint16_t i_ms_overheat_initiate_level_4 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 4 . Example: 35000 is 35 seconds 35000 uint16_t i_ms_overheat_initiate_level_5 Time in milliseconds for when the overheat sequence will initiate for the Neutrona Wand and Proton Pack if enabled for wand power level 5 . Example: 30000 is 30 seconds 30000 bool b_stream_effects When set to true, various impact and other stream effects will overlap and mix randomly into the Proton Stream for an added experience. This can be toggled from the Neutrona Wand sub menu system true bool b_extra_pack_sounds When set to true, the Proton Pack will play sounds that the Neutrona Wand would normally play alone. Useful when running a Neutrona Wand build without a speaker. true const bool b_eeprom Set to true if you want to read the configuration data from the EEPROM memory in the Neutrona Wand. The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. true const bool b_gpstar_benchtest Set this to true if you want to use your Neutrona Wand without a Proton Pack connected. Otherwise when false, the Neutrona Wand will wait until it is connected to a Proton Pack before it can activate. false","title":"Neutrona Wand"},{"location":"ATTENUATOR/","text":"Pack Attenuator (Optional) \"If Egon had kept on using and modifying his pack and modifying it, what might it look like?\" That was the question posed by Jason Reitman to Adam Savage with regards to the 2021 Ghostbusters Afterlife film. So in 2022 Adam Savage's Tested YouTube channel released a video for a \"1 Day Build\" which featured propmaster Ben Eadie to create a unique item which brings more life to the front of the Proton Pack. This guide demonstrates the build process for replicating the \"Pack Attenuator\" device first created by Adam and Ben which fully integrates into the GPStar electronics kit. The ability to control and receive feedback from the devices makes this more than just an aesthetic improvement but a truly usable piece of the pack-wand combination. Potential Backstory The device was rediscovered by Phoebe Spengler from notes in her grandfather\u2019s underground workshop on the \u201cDirt Farm\u201d. The device was theorized and prototyped but never put into service until now. The attenuator device alters the magnetic field to maintain a correct \u201crate of feed\u201d of positrons into the cyclotron, thus allowing the user to extend the time to ensnare a ghost by preventing an overheat event within the Proton Pack. Ahead of an overheat (aka. vent sequence) the device will provide physical and audiovisual cues as to the impending event. Interacting with the device will cancel the warning and stave off the venting sequence. Reference Videos Attenuator Preview Demonstration (YouTube, August 2023). Attenuator Backstory and Updates (YouTube, October 2023). Building Your Own Please see the dedicated ATTENUATOR_DIY guide for how to construct the electronics for your own device. GPStar Kits Please see the ATTENUATOR_FINISHING guide for advice on how to assemble and finish your device. Firmware Flashing Please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your Attenuator controller. Operation Physical Operation While not attached to a compatible Proton Pack (read: standalone mode) the device will simply provide some lights and effects. The left toggle switch will turn on the bargraph animations while the right toggle switch will turn on the LEDs. Ideally, the device is intended be connected to the GPStar Proton Pack Controller which will allow it to provide all extended functionality. Under normal use the main dial will allow adjusting the overall volume, starting/stopping music tracks, navigating to the next track, and adjusting the effects volume. Standard Controls Left Toggle: Turns the pack on or off, similar to use of the switch under the Ion Arm Right Toggle: Turns the Attenuator device itself on or off. When off, this turns off the device LEDs and silences any feedback from the buzzer and vibration motor. Main Dial - Long Press: Alternates between two modes of operation Mode 1 (Default) - Indicated by a high buzzer tone Main Dial - Short Press: Starts or stops the current music track Main Dial - Double Press: Mutes or unmutes all pack/wand audio Main Dial - Turn CW/CCW: Adjusts the overall volume for pack/wand Mode 2 - Indicated by a low buzzer tone Main Dial - Short Press: Advances to the next music track Main Dial - Double Press: Move to the previous music track Main Dial - Turn CW/CCW: Adjusts the effects volume for pack/wand Note that during an overheat warning, the device will emit sounds and vibrations in addition to lighting effects as the pack reaches a critical state. At this time the pack operator can turn the primary dial either direction to \"attenuate\" the pack and cancel the current warning. If the warning time is allowed to expire the the pack will enter the venting sequence. Lockout Mode (Main Dial) Lockout mode is a special option for only the main dial to prevent accidental changing of volume: 1) Press down on the main dial and immediately change the Right Toggle to the opposite position. If on, switch off, or vice-versa. 1) Continue to hold down the main dial for another second. If vibration feedback is enabled you will feel a long buzz to indicate when the lockout mode is either enabled or disabled (there will be no buzzer sound like there is during a menu level change). Buzzer/Vibration Feedback As part of the user experience, some actions initiated on the device or as a result of using your Proton Pack will trigger haptic feedback via a piezo buzzer and a vibration motor. These features can be enabled or disabled based on user preference. For more information on how to enable or disable these features via the device preferences, please see the Wireless Operations guide. Web Operation For instructions on using the web interface to view the status of, or to control your equipment, please see the Wireless Operations guide.","title":"Attenuator"},{"location":"ATTENUATOR/#pack-attenuator-optional","text":"\"If Egon had kept on using and modifying his pack and modifying it, what might it look like?\" That was the question posed by Jason Reitman to Adam Savage with regards to the 2021 Ghostbusters Afterlife film. So in 2022 Adam Savage's Tested YouTube channel released a video for a \"1 Day Build\" which featured propmaster Ben Eadie to create a unique item which brings more life to the front of the Proton Pack. This guide demonstrates the build process for replicating the \"Pack Attenuator\" device first created by Adam and Ben which fully integrates into the GPStar electronics kit. The ability to control and receive feedback from the devices makes this more than just an aesthetic improvement but a truly usable piece of the pack-wand combination.","title":"Pack Attenuator (Optional)"},{"location":"ATTENUATOR/#potential-backstory","text":"The device was rediscovered by Phoebe Spengler from notes in her grandfather\u2019s underground workshop on the \u201cDirt Farm\u201d. The device was theorized and prototyped but never put into service until now. The attenuator device alters the magnetic field to maintain a correct \u201crate of feed\u201d of positrons into the cyclotron, thus allowing the user to extend the time to ensnare a ghost by preventing an overheat event within the Proton Pack. Ahead of an overheat (aka. vent sequence) the device will provide physical and audiovisual cues as to the impending event. Interacting with the device will cancel the warning and stave off the venting sequence.","title":"Potential Backstory"},{"location":"ATTENUATOR/#reference-videos","text":"Attenuator Preview Demonstration (YouTube, August 2023). Attenuator Backstory and Updates (YouTube, October 2023).","title":"Reference Videos"},{"location":"ATTENUATOR/#building-your-own","text":"Please see the dedicated ATTENUATOR_DIY guide for how to construct the electronics for your own device.","title":"Building Your Own"},{"location":"ATTENUATOR/#gpstar-kits","text":"Please see the ATTENUATOR_FINISHING guide for advice on how to assemble and finish your device.","title":"GPStar Kits"},{"location":"ATTENUATOR/#firmware-flashing","text":"Please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your Attenuator controller.","title":"Firmware Flashing"},{"location":"ATTENUATOR/#operation","text":"","title":"Operation"},{"location":"ATTENUATOR/#physical-operation","text":"While not attached to a compatible Proton Pack (read: standalone mode) the device will simply provide some lights and effects. The left toggle switch will turn on the bargraph animations while the right toggle switch will turn on the LEDs. Ideally, the device is intended be connected to the GPStar Proton Pack Controller which will allow it to provide all extended functionality. Under normal use the main dial will allow adjusting the overall volume, starting/stopping music tracks, navigating to the next track, and adjusting the effects volume.","title":"Physical Operation"},{"location":"ATTENUATOR/#standard-controls","text":"Left Toggle: Turns the pack on or off, similar to use of the switch under the Ion Arm Right Toggle: Turns the Attenuator device itself on or off. When off, this turns off the device LEDs and silences any feedback from the buzzer and vibration motor. Main Dial - Long Press: Alternates between two modes of operation Mode 1 (Default) - Indicated by a high buzzer tone Main Dial - Short Press: Starts or stops the current music track Main Dial - Double Press: Mutes or unmutes all pack/wand audio Main Dial - Turn CW/CCW: Adjusts the overall volume for pack/wand Mode 2 - Indicated by a low buzzer tone Main Dial - Short Press: Advances to the next music track Main Dial - Double Press: Move to the previous music track Main Dial - Turn CW/CCW: Adjusts the effects volume for pack/wand Note that during an overheat warning, the device will emit sounds and vibrations in addition to lighting effects as the pack reaches a critical state. At this time the pack operator can turn the primary dial either direction to \"attenuate\" the pack and cancel the current warning. If the warning time is allowed to expire the the pack will enter the venting sequence.","title":"Standard Controls"},{"location":"ATTENUATOR/#lockout-mode-main-dial","text":"Lockout mode is a special option for only the main dial to prevent accidental changing of volume: 1) Press down on the main dial and immediately change the Right Toggle to the opposite position. If on, switch off, or vice-versa. 1) Continue to hold down the main dial for another second. If vibration feedback is enabled you will feel a long buzz to indicate when the lockout mode is either enabled or disabled (there will be no buzzer sound like there is during a menu level change).","title":"Lockout Mode (Main Dial)"},{"location":"ATTENUATOR/#buzzervibration-feedback","text":"As part of the user experience, some actions initiated on the device or as a result of using your Proton Pack will trigger haptic feedback via a piezo buzzer and a vibration motor. These features can be enabled or disabled based on user preference. For more information on how to enable or disable these features via the device preferences, please see the Wireless Operations guide.","title":"Buzzer/Vibration Feedback"},{"location":"ATTENUATOR/#web-operation","text":"For instructions on using the web interface to view the status of, or to control your equipment, please see the Wireless Operations guide.","title":"Web Operation"},{"location":"ATTENUATOR_DIY/","text":"Pack Attenuator - DIY Guide This guide is intended to document the parts and processes required to build the internals of an Attenuator device for your Proton Pack. Please note that as of the V6 release of the GPStar software, the only processor option for this device is via an ESP32. Video Assembly Guide (YouTube, December 2023). Printing a Shell The STL files are available through this repository if you have the capability of printing your own Attenuator shell. Please see the accompanying PDF in that directory for more details. Bill of Materials This device has it's own BOM which is separate from any other build items related to the pack or wand. This utilizes the same project template for developing software as the other controllers and we'll be using the same type of serial protocol as used between the pack and wand. Core Electronics Proton Pack Connector: 4 Pin Aviation Connector Proton Pack Cable: 20 AWG 4 Conductor Wire w/ PVC Jacket Cable Covering: 1/4 Inch Braided PET Wire Loom PG7 Rubber Strain Relief Connector Single-Pixel 5V WS2812B RGB Addressable RGB LEDs (You will use 3 pixels from this set 1 ) Pre-soldered SPST Mini Toggle Switches or Flat Toggles w/o Wires Rotary Encoder Knob w/ Switch 3V 10mm x 2mm Vibration Motor 9mm Passive Piezo Buzzer 28-Segment Bargraph from Frutto Technology 2x NPN2222 transistors, 2x 1N4001 diodes, and various resistors (see schematics) 1 These pre-soldered LED modules will likely be offered for use in future kits, though in both cases the price point is high considering the need for only 3 LEDs. Microprocessor Control Unit (MCU) An ESP32 controller provides the full range of features to integrate with the Proton Pack and Neutrona Wand hardware. Use of an Arduino Nano is no longer supported due to the limitations of that hardware. ESP-WROOM-32 30-pin Dev Board w/ Terminal Shield or ESP-WROOM-32 Dev Board w/out Headers Exterior Decorations This device was designed to allow for certain \"real\" parts as opposed to being 100% 3D printed. To finish the look of the exterior the following are merely suggestions . These parts may be sourced from any vendor you prefer (in the US most ACE Hardware locations have extensive selections of metrics screws). If a certain item is improbable or unavailable you may substitute as you wish--regardless of material used for printing it should be possible to install a similar sized screw for the provided holes in the shell. M3x4 Button Hex Head Screws (Qty: 14) - Used for decoration on the sides of the body. M4x6 Cheese Head Slotted Screws (Qty: 4) - Used for decoration on the top of the body. You could also use 8-40 x 1/4\" Fillister Head Slotted Screws M4 nuts may be required to secure the screws to the Attenuator shell. The back plate will be attached using either M5 or M4 screws depending on the material used. For screws, your best value is to purchase an assorted set as this cost less than buying a single size of screw. M4x8 Button Hex Head Screws (Qty: 4) - Used to secure the base plate to metal body. or M4x8 Button Hex Head Screws (Qty: 4) - Used to secure the base plate to plastic body. M4x6 Heat-set Inserts (Qty: 4) - Used to secure the base plate to a plastic body. Device labels can be obtained or created by any means desired. The sizes offered by this product on GBFans should be sufficient. Lower Mode/Indicator: Clear Dome Lens or Fluted Dome Lens Top Mode/Indicator: Clip-in Lens SML_190_CTP Dimensions It is worth noting that the device is meant to attach to the left shoulder strap of a standard ALICE pack. The width of the strap is typically around 80mm while worn, so this device will fit near perfectly once the strap is pressed against your shoulder/chest. These are the overall dimensions if you wish to approximate the needed space or design your own enclosure. Maintaining these dimensions ensures the components above will fit within the enclosure. Width: 80mm Height: 115mm Depth: 38mm WiFi Connectivity A primary benefit of using an ESP32 controller it is possible to connect to the device via WiFi. The SSID (Network Name) will be broadcast as \"ProtonPack_####\" where \"####\" is the last 4 hexadecimal values for the MAC address of the WiFi interface. This will differ for each ESP32 device, making each network unique to the attached pack. The default password is \"555-2368\" and can (and should) be changed via the web interface after successfully connecting to the network. The IP address for the device will be hardcoded as \"192.168.1.2\" with the web interface accessible at http://192.168.1.2 or simply http://ProtonPack_####.local . Security Notice Once you have successfully paired with the WiFi network for the Proton pack, you are HIGHLY encouraged to change the default password. This is accessible via a link at the bottom of the main device page as noted above. Follow the prompts to enter and confirm a new password then re-join your pack's WiFi network with the new credentials. For instructions on using the web interface to control your equipment, please see the Wireless Operations guide. ESP32 - 30-Pin Reference \ud83d\udcdd Note: There are typically 30-pin and 38-pin versions of the ESP32 development modules and matching terminal shields. Both should work, though there will be some minor differences to the order of pins. ALWAYS match the GPIO pin by label not position or index. This guide uses the more compact 30-pin packaging. ESP32 - Pin Connections The following is a diagram of the ESP32 pins from left and right, when oriented with the USB connection facing down (south) like the pinout diagram above. This follows the standard pinout for a 30-pin device. Connection ESP32 (L) ESP32 (R) Connection EN GPIO23 Neopixels (2) GPIO36 GPIO22 SCL Bargraph GPIO39 GPIO1 Left Toggle GPIO34 GPIO3 Right Toggle GPIO35 GPIO21 SDA Bargraph Encoder A GPIO32 GPIO19 PN2222 Encoder B GPIO33 GPIO18 Piezo Buzzer GPIO25 GPIO5 GPIO26 GPIO17 to Pack RX1 GPIO27 GPIO16 to Pack TX1 GPIO14 GPIO4 Encoder Post GPIO12 GPIO2 GPIO13 GPIO15 Ground (Pack) GND GND Common Ground +5V (Pack) VIN 3.3V Vib. Motor + USB When connecting to the pack, the following wiring scheme was used with the recommended 4-pin connector: 1 - GND (Black) 2 - VIN (Red) 3 - TX2 (White) to Pack RX1 4 - RX2 (Yellow) to Pack TX1 It is advised to add a 330uF capacitor to the VIN+GND pins to help regulate power which will be shared with the controller, bargraph, and addressable LEDs. Note: Bargraph power (+5V) should be split from the VIN terminal which delivers power from the Proton Pack. Connections by Component Wire colors are suggestions, and meant to help differentiate the components. You may use your own scheme as desired. Microcontroller (MCU) pins are labelled using their GPIO# designations. Common pins will retain a singular name. For the ESP32 controller, GPIO pins 34 and 35 are input-only and do not have internal pull-up resistors. In order to get an accurate reading from the state of the switch it is necessary to add a 3.8k \u03a9 resistor between the 3.3V (3V3) pin and the respective GPIO pin where the toggle switch connects to the controller. This is essentially a wire from the V+ pin to the noted GPIO pin, with the stated resistor on the wire. Both wires for the pull-up resistor and toggle switch will terminate at the same point on the controller. LEFT TOGGLE MCU Pin Notes Blue \u2192 \u2192 GND Shouldn\u2019t matter which wire goes where Blue \u2192 \u2192 GPIO34 Shouldn\u2019t matter which wire goes where Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor Right TOGGLE MCU Pin Notes Green \u2192 \u2192 GND Shouldn\u2019t matter which wire goes where Green \u2192 \u2192 GPIO35 Shouldn\u2019t matter which wire goes where Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor Rotary Encoder w/ Switch The rotary encoder is similar to that used on the Proton Pack and Neutrona Wand in that it will rotate without an end-stop, though unlike the other devices this has a center post which acts like a momentary switch. It requires a common ground connection with positive voltage, and sends data via the A/B signal wires to indicate which direction it was turned or the center post was pushed. Note: This is based on the KY-040 pre-soldered module with 5 pins. ROTARY ENCODER (DIAL) MCU Pin GND \u2192 GND + (VCC) \u2192 VIN (5V) SW \u2192 D4/GPIO4 DT (B) \u2192 D2/GPIO33 CLK (A) \u2192 D3/GPIO32 Addressable LEDs LED'S Component MCU Pin Red \u2192 100uf 5V/VIN Green \u2192 470 \u03a9 D9/GPIO23 Black \u2192 100uf GND Note: It is advised to place a 100uf capacitor across the positive and negative connections to these devices, just to buffer any current fluctuations. Addressable LEDs have a distinct data flow with solder pads labelled DIN and DOUT . It is crucial to chain these devices starting from the Arduino to an LEDs DIN pad first, then the same device's DOUT pad to the next LED's DIN pad, and so on. Audio & Physical Feedback PIEZO BUZZER Component(s) MCU Pin Red \u2192 VIN/5V Black NPN C NPN B R 270 \u03a9 \u2192 D10/GPIO18 NPN E GND VIBRATION MOTOR Component(s) Component(s) MCU Pin Red 1N4001 (s) \u2192 3V3/3.3V Blue 1N4001 NPN C NPN B R 270 \u03a9 \u2192 D11/GPIO19 NPN E GND Note: The vibration motor (60mA) requires use of a transistor as the higher current draw exceeds the maximum 40mA recommended for the microcontroller's pin. To safely deliver power we will use an 2N2222/2N5551, an NPN Bipolar Transistor (BJT). A diode is recommended as this is a motor and thus could cause a small induction current in reverse when power is removed. Bargraph This is a separate but critical device and should be a relatively easy connection when using the Frutto Technology packaging which has only 2 ports: 5V/GND and SDA/SCL. Power will be connected to the \"5V\" on the Arduino and a common ground (GND). These are GPIO pins 21 and 22 for SDA and SCL, respectively. Note: For the ESP32 controller, GPIO pins 21 (SDA) and 22 (SCL) do not have internal pull-up resistors. In order to detect attached devices it is necessary to add a 3.8k \u03a9 resistor between the 3.3V (3V3) pin and the respective GPIO pin where the bargraph connects to the controller. This is essentially a wire from the V+ pin to the noted GPIO pin, with the stated resistor on the wire. Both wires for the pull-up resistor and data line will terminate at the same point on the controller. Bargraph MCU Pin Notes Red \u2193 3.8K \u03a9 3V3 External Pull-up Resistor White SDA \u2192 \u2192 GPIO21 Check wire labels on bargraph White SCL \u2192 \u2192 GPIO22 Check wire labels on bargraph Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor ESP32 Break-out Board To simplify installation it is suggested to create a break-out board for connections when using the ESP32 microcontroller. This is due to the need for pull-up resistors on select pins and can be accomplished by using a solderable \u00bd size protoboard. A B C D E F G H I J 1 GPIO23 R 470 \u03a9 \u2194 \u2194 \u2194 R 470 \u03a9 Addressable LEDs 2 3V3 Z+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO21 Bargraph SDA (JST\u2010PH) 3 Z+ Y+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO22 Bargraph SCL (JST\u2010PH) 4 V+ X+ Y+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO34 Left Toggle 5 V- Left Toggle (-) 6 W- V- Right Toggle (-) 7 X+ W+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO35 Right Toggle 8 9 V+ NPN C Buzzer (+) 10 GPIO18 R 270 \u03a9 \u2194 \u2194 \u2194 R 270 \u03a9 NPN B 11 X- NPN E Buzzer (\u2010) 12 Z- Rot. Enc. (GND) W+ 1N4001 (s) Vib. Motor (+) 13 GND (-) Z- Y- X- W- \u2195 14 \u2195 15 NPN C 1N4001 Vib. Motor (-) 16 GPIO19 R 270 \u03a9 \u2194 \u2194 \u2194 R 270 \u03a9 NPN B 17 Y- NPN E Pack Connection Cable In order to connect to the pack you will need to create a custom cable for the device. This will consist of running the 4-conductor jacketed wire through the braided wire loom, and terminating with the 4-pin connector at one end and passing through the strain relief at the other end. The bare wires can be soldered directly to the microcontroller or use a terminal shield. Where the socket for this connection cable is mounted on the pack is up to you--this device is meant to integrate how you think it should. You will be able to use 2 existing JST-XH connections on the gpstar Pack PCB controller: 5V-OUT and TX1/RX1. Please refer to the wiring notes above for how to make this connections. Just remember that TX/RX from the Attenuator will go to RX/TX on the pack (read: the wires flip). Please see the notes above for the correct pin names for connections based on your choice of microcontroller. Component Fitment The dimensions of the project housing allows for easy access into all areas of the device. It should be no problem to fit the available components within the final device. Note that you will want to build the connection cable in full and run it through the strain relief before attached to the device housing. For assembly, the shell contains 4 holes meant to take heat-set inserts which provide metal-threaded junctions for screws to hold on the bottom plate. Because the plat must then be attached to the ALICE pack strap these should be secure but removable in the case of re-flashing software updates to the device. External Finishing View the guide here for parts and materials for finishing the exterior of your device.","title":"Pack Attenuator - DIY Guide"},{"location":"ATTENUATOR_DIY/#pack-attenuator-diy-guide","text":"This guide is intended to document the parts and processes required to build the internals of an Attenuator device for your Proton Pack. Please note that as of the V6 release of the GPStar software, the only processor option for this device is via an ESP32. Video Assembly Guide (YouTube, December 2023).","title":"Pack Attenuator - DIY Guide"},{"location":"ATTENUATOR_DIY/#printing-a-shell","text":"The STL files are available through this repository if you have the capability of printing your own Attenuator shell. Please see the accompanying PDF in that directory for more details.","title":"Printing a Shell"},{"location":"ATTENUATOR_DIY/#bill-of-materials","text":"This device has it's own BOM which is separate from any other build items related to the pack or wand. This utilizes the same project template for developing software as the other controllers and we'll be using the same type of serial protocol as used between the pack and wand. Core Electronics Proton Pack Connector: 4 Pin Aviation Connector Proton Pack Cable: 20 AWG 4 Conductor Wire w/ PVC Jacket Cable Covering: 1/4 Inch Braided PET Wire Loom PG7 Rubber Strain Relief Connector Single-Pixel 5V WS2812B RGB Addressable RGB LEDs (You will use 3 pixels from this set 1 ) Pre-soldered SPST Mini Toggle Switches or Flat Toggles w/o Wires Rotary Encoder Knob w/ Switch 3V 10mm x 2mm Vibration Motor 9mm Passive Piezo Buzzer 28-Segment Bargraph from Frutto Technology 2x NPN2222 transistors, 2x 1N4001 diodes, and various resistors (see schematics) 1 These pre-soldered LED modules will likely be offered for use in future kits, though in both cases the price point is high considering the need for only 3 LEDs. Microprocessor Control Unit (MCU) An ESP32 controller provides the full range of features to integrate with the Proton Pack and Neutrona Wand hardware. Use of an Arduino Nano is no longer supported due to the limitations of that hardware. ESP-WROOM-32 30-pin Dev Board w/ Terminal Shield or ESP-WROOM-32 Dev Board w/out Headers Exterior Decorations This device was designed to allow for certain \"real\" parts as opposed to being 100% 3D printed. To finish the look of the exterior the following are merely suggestions . These parts may be sourced from any vendor you prefer (in the US most ACE Hardware locations have extensive selections of metrics screws). If a certain item is improbable or unavailable you may substitute as you wish--regardless of material used for printing it should be possible to install a similar sized screw for the provided holes in the shell. M3x4 Button Hex Head Screws (Qty: 14) - Used for decoration on the sides of the body. M4x6 Cheese Head Slotted Screws (Qty: 4) - Used for decoration on the top of the body. You could also use 8-40 x 1/4\" Fillister Head Slotted Screws M4 nuts may be required to secure the screws to the Attenuator shell. The back plate will be attached using either M5 or M4 screws depending on the material used. For screws, your best value is to purchase an assorted set as this cost less than buying a single size of screw. M4x8 Button Hex Head Screws (Qty: 4) - Used to secure the base plate to metal body. or M4x8 Button Hex Head Screws (Qty: 4) - Used to secure the base plate to plastic body. M4x6 Heat-set Inserts (Qty: 4) - Used to secure the base plate to a plastic body. Device labels can be obtained or created by any means desired. The sizes offered by this product on GBFans should be sufficient. Lower Mode/Indicator: Clear Dome Lens or Fluted Dome Lens Top Mode/Indicator: Clip-in Lens SML_190_CTP","title":"Bill of Materials"},{"location":"ATTENUATOR_DIY/#dimensions","text":"It is worth noting that the device is meant to attach to the left shoulder strap of a standard ALICE pack. The width of the strap is typically around 80mm while worn, so this device will fit near perfectly once the strap is pressed against your shoulder/chest. These are the overall dimensions if you wish to approximate the needed space or design your own enclosure. Maintaining these dimensions ensures the components above will fit within the enclosure. Width: 80mm Height: 115mm Depth: 38mm","title":"Dimensions"},{"location":"ATTENUATOR_DIY/#wifi-connectivity","text":"A primary benefit of using an ESP32 controller it is possible to connect to the device via WiFi. The SSID (Network Name) will be broadcast as \"ProtonPack_####\" where \"####\" is the last 4 hexadecimal values for the MAC address of the WiFi interface. This will differ for each ESP32 device, making each network unique to the attached pack. The default password is \"555-2368\" and can (and should) be changed via the web interface after successfully connecting to the network. The IP address for the device will be hardcoded as \"192.168.1.2\" with the web interface accessible at http://192.168.1.2 or simply http://ProtonPack_####.local . Security Notice Once you have successfully paired with the WiFi network for the Proton pack, you are HIGHLY encouraged to change the default password. This is accessible via a link at the bottom of the main device page as noted above. Follow the prompts to enter and confirm a new password then re-join your pack's WiFi network with the new credentials. For instructions on using the web interface to control your equipment, please see the Wireless Operations guide.","title":"WiFi Connectivity"},{"location":"ATTENUATOR_DIY/#esp32-30-pin-reference","text":"\ud83d\udcdd Note: There are typically 30-pin and 38-pin versions of the ESP32 development modules and matching terminal shields. Both should work, though there will be some minor differences to the order of pins. ALWAYS match the GPIO pin by label not position or index. This guide uses the more compact 30-pin packaging.","title":"ESP32 - 30-Pin Reference"},{"location":"ATTENUATOR_DIY/#esp32-pin-connections","text":"The following is a diagram of the ESP32 pins from left and right, when oriented with the USB connection facing down (south) like the pinout diagram above. This follows the standard pinout for a 30-pin device. Connection ESP32 (L) ESP32 (R) Connection EN GPIO23 Neopixels (2) GPIO36 GPIO22 SCL Bargraph GPIO39 GPIO1 Left Toggle GPIO34 GPIO3 Right Toggle GPIO35 GPIO21 SDA Bargraph Encoder A GPIO32 GPIO19 PN2222 Encoder B GPIO33 GPIO18 Piezo Buzzer GPIO25 GPIO5 GPIO26 GPIO17 to Pack RX1 GPIO27 GPIO16 to Pack TX1 GPIO14 GPIO4 Encoder Post GPIO12 GPIO2 GPIO13 GPIO15 Ground (Pack) GND GND Common Ground +5V (Pack) VIN 3.3V Vib. Motor + USB When connecting to the pack, the following wiring scheme was used with the recommended 4-pin connector: 1 - GND (Black) 2 - VIN (Red) 3 - TX2 (White) to Pack RX1 4 - RX2 (Yellow) to Pack TX1 It is advised to add a 330uF capacitor to the VIN+GND pins to help regulate power which will be shared with the controller, bargraph, and addressable LEDs. Note: Bargraph power (+5V) should be split from the VIN terminal which delivers power from the Proton Pack.","title":"ESP32 - Pin Connections"},{"location":"ATTENUATOR_DIY/#connections-by-component","text":"Wire colors are suggestions, and meant to help differentiate the components. You may use your own scheme as desired. Microcontroller (MCU) pins are labelled using their GPIO# designations. Common pins will retain a singular name. For the ESP32 controller, GPIO pins 34 and 35 are input-only and do not have internal pull-up resistors. In order to get an accurate reading from the state of the switch it is necessary to add a 3.8k \u03a9 resistor between the 3.3V (3V3) pin and the respective GPIO pin where the toggle switch connects to the controller. This is essentially a wire from the V+ pin to the noted GPIO pin, with the stated resistor on the wire. Both wires for the pull-up resistor and toggle switch will terminate at the same point on the controller. LEFT TOGGLE MCU Pin Notes Blue \u2192 \u2192 GND Shouldn\u2019t matter which wire goes where Blue \u2192 \u2192 GPIO34 Shouldn\u2019t matter which wire goes where Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor Right TOGGLE MCU Pin Notes Green \u2192 \u2192 GND Shouldn\u2019t matter which wire goes where Green \u2192 \u2192 GPIO35 Shouldn\u2019t matter which wire goes where Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor Rotary Encoder w/ Switch The rotary encoder is similar to that used on the Proton Pack and Neutrona Wand in that it will rotate without an end-stop, though unlike the other devices this has a center post which acts like a momentary switch. It requires a common ground connection with positive voltage, and sends data via the A/B signal wires to indicate which direction it was turned or the center post was pushed. Note: This is based on the KY-040 pre-soldered module with 5 pins. ROTARY ENCODER (DIAL) MCU Pin GND \u2192 GND + (VCC) \u2192 VIN (5V) SW \u2192 D4/GPIO4 DT (B) \u2192 D2/GPIO33 CLK (A) \u2192 D3/GPIO32 Addressable LEDs LED'S Component MCU Pin Red \u2192 100uf 5V/VIN Green \u2192 470 \u03a9 D9/GPIO23 Black \u2192 100uf GND Note: It is advised to place a 100uf capacitor across the positive and negative connections to these devices, just to buffer any current fluctuations. Addressable LEDs have a distinct data flow with solder pads labelled DIN and DOUT . It is crucial to chain these devices starting from the Arduino to an LEDs DIN pad first, then the same device's DOUT pad to the next LED's DIN pad, and so on. Audio & Physical Feedback PIEZO BUZZER Component(s) MCU Pin Red \u2192 VIN/5V Black NPN C NPN B R 270 \u03a9 \u2192 D10/GPIO18 NPN E GND VIBRATION MOTOR Component(s) Component(s) MCU Pin Red 1N4001 (s) \u2192 3V3/3.3V Blue 1N4001 NPN C NPN B R 270 \u03a9 \u2192 D11/GPIO19 NPN E GND Note: The vibration motor (60mA) requires use of a transistor as the higher current draw exceeds the maximum 40mA recommended for the microcontroller's pin. To safely deliver power we will use an 2N2222/2N5551, an NPN Bipolar Transistor (BJT). A diode is recommended as this is a motor and thus could cause a small induction current in reverse when power is removed.","title":"Connections by Component"},{"location":"ATTENUATOR_DIY/#bargraph","text":"This is a separate but critical device and should be a relatively easy connection when using the Frutto Technology packaging which has only 2 ports: 5V/GND and SDA/SCL. Power will be connected to the \"5V\" on the Arduino and a common ground (GND). These are GPIO pins 21 and 22 for SDA and SCL, respectively. Note: For the ESP32 controller, GPIO pins 21 (SDA) and 22 (SCL) do not have internal pull-up resistors. In order to detect attached devices it is necessary to add a 3.8k \u03a9 resistor between the 3.3V (3V3) pin and the respective GPIO pin where the bargraph connects to the controller. This is essentially a wire from the V+ pin to the noted GPIO pin, with the stated resistor on the wire. Both wires for the pull-up resistor and data line will terminate at the same point on the controller. Bargraph MCU Pin Notes Red \u2193 3.8K \u03a9 3V3 External Pull-up Resistor White SDA \u2192 \u2192 GPIO21 Check wire labels on bargraph White SCL \u2192 \u2192 GPIO22 Check wire labels on bargraph Red \u2191 3.8K \u03a9 3V3 External Pull-up Resistor","title":"Bargraph"},{"location":"ATTENUATOR_DIY/#esp32-break-out-board","text":"To simplify installation it is suggested to create a break-out board for connections when using the ESP32 microcontroller. This is due to the need for pull-up resistors on select pins and can be accomplished by using a solderable \u00bd size protoboard. A B C D E F G H I J 1 GPIO23 R 470 \u03a9 \u2194 \u2194 \u2194 R 470 \u03a9 Addressable LEDs 2 3V3 Z+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO21 Bargraph SDA (JST\u2010PH) 3 Z+ Y+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO22 Bargraph SCL (JST\u2010PH) 4 V+ X+ Y+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO34 Left Toggle 5 V- Left Toggle (-) 6 W- V- Right Toggle (-) 7 X+ W+ R 3.8K \u03a9 \u2194 \u2194 \u2194 R 3.8K \u03a9 GPIO35 Right Toggle 8 9 V+ NPN C Buzzer (+) 10 GPIO18 R 270 \u03a9 \u2194 \u2194 \u2194 R 270 \u03a9 NPN B 11 X- NPN E Buzzer (\u2010) 12 Z- Rot. Enc. (GND) W+ 1N4001 (s) Vib. Motor (+) 13 GND (-) Z- Y- X- W- \u2195 14 \u2195 15 NPN C 1N4001 Vib. Motor (-) 16 GPIO19 R 270 \u03a9 \u2194 \u2194 \u2194 R 270 \u03a9 NPN B 17 Y- NPN E","title":"ESP32 Break-out Board"},{"location":"ATTENUATOR_DIY/#pack-connection-cable","text":"In order to connect to the pack you will need to create a custom cable for the device. This will consist of running the 4-conductor jacketed wire through the braided wire loom, and terminating with the 4-pin connector at one end and passing through the strain relief at the other end. The bare wires can be soldered directly to the microcontroller or use a terminal shield. Where the socket for this connection cable is mounted on the pack is up to you--this device is meant to integrate how you think it should. You will be able to use 2 existing JST-XH connections on the gpstar Pack PCB controller: 5V-OUT and TX1/RX1. Please refer to the wiring notes above for how to make this connections. Just remember that TX/RX from the Attenuator will go to RX/TX on the pack (read: the wires flip). Please see the notes above for the correct pin names for connections based on your choice of microcontroller.","title":"Pack Connection Cable"},{"location":"ATTENUATOR_DIY/#component-fitment","text":"The dimensions of the project housing allows for easy access into all areas of the device. It should be no problem to fit the available components within the final device. Note that you will want to build the connection cable in full and run it through the strain relief before attached to the device housing. For assembly, the shell contains 4 holes meant to take heat-set inserts which provide metal-threaded junctions for screws to hold on the bottom plate. Because the plat must then be attached to the ALICE pack strap these should be secure but removable in the case of re-flashing software updates to the device.","title":"Component Fitment"},{"location":"ATTENUATOR_DIY/#external-finishing","text":"View the guide here for parts and materials for finishing the exterior of your device.","title":"External Finishing"},{"location":"ATTENUATOR_FINISHING/","text":"Pack Attenuator - Finishing Guide Assembly Guide See the installation guide located in the extras folder for details on how to install the electronics into your Attenuator shell. Alternatively, watch this Attenuator Kit Finishing video from February 2024 which covers the electronics, finishing, and fitment of your components: Paint Guide The look of your device is just as important as the internals, though this is highly subjective to your personal tastes. Therefore, it's hard to say precisely what look you may be wanting to achieve so this portion will offer some guidance on what materials may be useful. This portion of the guide will assume you will want a chipped-paint style weathering though you can adjust to suite your taste as necessary. Resin Shells These shells are practically ready for painting as-is. You can optionally give a light sanding to enhance the texture and promote paint adhesion, or use a spray which can help bond any paint to the surface. Below are some products which will help you get a smooth, metallic under-layer to act as your exposed metal when weathering the device. Dupli-Color Adhesion Promoter Rustoleum Metallic Aluminum Aluminum Shells For the aluminum printed shells, you may want to first sand the exterior smooth prior to painting. This can be done easily using \"sanding sponges\" which come in a variety of grits from course to fine (available at most hardware stores). Generally 220 and higher will work well and not remove too much material. If you sand in only one direction across the surface you can achieve a brushed aluminum appearance in the final look. Regardless of whether you sand or not, be sure to wash your aluminum print with soap and water to remove any oil residues from your fingers during handling, and use gloves while finishing to ensure maximum adhesion for paint. General Supplies If you wish to have a chipped paint look you will want a solid, flat black paint. Rustoleum's truck bed liner is a heavy, textured paint which is used often for the Proton Pack shells and works well to give the needed look. You'll also want to mask some areas of the shell to help reveal those paint chips. Latex Masking Fluid Silicone Brushes Truck Bed Liner Spray Paint Use the silicone brushes to paint on a bit of the masking fluid where you do not wish the final coat of paint to stick, meaning the areas you want to show as chipped. These would typically be near edges or corners where you might see normal wear and tear from use, and can be somewhat chaotic or irregular. Be careful if applying a second coat as the latex may stick to the brush and peel away. Once the latext dries, you can apply a single coat of the truck bed liner. Apply a second coat per the product instructions to ensure any metallic areas are fully covered. Allow to dry thoroughly which may take upwards of 48 hours. Once dried, you can begin peeling away the latex-coated areas which will appear bumpy. Rub with your finger or scrape with your fingernail or a soft plastic scraper to avoid marring any metallic surface below (this is most important for the resin shell). Once your shell is painted and has the worn look you desire, you can use standard acrylic paints to add dirt, rust, or other effects for the final appearance.","title":"Pack Attenuator - Finishing Guide"},{"location":"ATTENUATOR_FINISHING/#pack-attenuator-finishing-guide","text":"","title":"Pack Attenuator - Finishing Guide"},{"location":"ATTENUATOR_FINISHING/#assembly-guide","text":"See the installation guide located in the extras folder for details on how to install the electronics into your Attenuator shell. Alternatively, watch this Attenuator Kit Finishing video from February 2024 which covers the electronics, finishing, and fitment of your components:","title":"Assembly Guide"},{"location":"ATTENUATOR_FINISHING/#paint-guide","text":"The look of your device is just as important as the internals, though this is highly subjective to your personal tastes. Therefore, it's hard to say precisely what look you may be wanting to achieve so this portion will offer some guidance on what materials may be useful. This portion of the guide will assume you will want a chipped-paint style weathering though you can adjust to suite your taste as necessary.","title":"Paint Guide"},{"location":"ATTENUATOR_FINISHING/#resin-shells","text":"These shells are practically ready for painting as-is. You can optionally give a light sanding to enhance the texture and promote paint adhesion, or use a spray which can help bond any paint to the surface. Below are some products which will help you get a smooth, metallic under-layer to act as your exposed metal when weathering the device. Dupli-Color Adhesion Promoter Rustoleum Metallic Aluminum","title":"Resin Shells"},{"location":"ATTENUATOR_FINISHING/#aluminum-shells","text":"For the aluminum printed shells, you may want to first sand the exterior smooth prior to painting. This can be done easily using \"sanding sponges\" which come in a variety of grits from course to fine (available at most hardware stores). Generally 220 and higher will work well and not remove too much material. If you sand in only one direction across the surface you can achieve a brushed aluminum appearance in the final look. Regardless of whether you sand or not, be sure to wash your aluminum print with soap and water to remove any oil residues from your fingers during handling, and use gloves while finishing to ensure maximum adhesion for paint.","title":"Aluminum Shells"},{"location":"ATTENUATOR_FINISHING/#general-supplies","text":"If you wish to have a chipped paint look you will want a solid, flat black paint. Rustoleum's truck bed liner is a heavy, textured paint which is used often for the Proton Pack shells and works well to give the needed look. You'll also want to mask some areas of the shell to help reveal those paint chips. Latex Masking Fluid Silicone Brushes Truck Bed Liner Spray Paint Use the silicone brushes to paint on a bit of the masking fluid where you do not wish the final coat of paint to stick, meaning the areas you want to show as chipped. These would typically be near edges or corners where you might see normal wear and tear from use, and can be somewhat chaotic or irregular. Be careful if applying a second coat as the latex may stick to the brush and peel away. Once the latext dries, you can apply a single coat of the truck bed liner. Apply a second coat per the product instructions to ensure any metallic areas are fully covered. Allow to dry thoroughly which may take upwards of 48 hours. Once dried, you can begin peeling away the latex-coated areas which will appear bumpy. Rub with your finger or scrape with your fingernail or a soft plastic scraper to avoid marring any metallic surface below (this is most important for the resin shell). Once your shell is painted and has the worn look you desire, you can use standard acrylic paints to add dirt, rust, or other effects for the final appearance.","title":"General Supplies"},{"location":"ATTENUATOR_FLASHING/","text":"Flashing the Attenuator NOTICE - As of the V6.0 release all support for the Arduino Nano hardware has been deprecated as we can no longer build the necessary binaries for the limited memory space on that device. Going forward, only the ESP32 will be supported for the Attenuator device, whether purchased as a kit from Frutto Technologies or as a DIY solution. The ESP32 microcontroller is capable of supporting Over-The-Air (OTA) updates for firmware, meaning you will need to utilize a desktop web browser from a computer (not a mobile device or tablet) and the built-in WiFi access point provided by the controller (prefix: \"ProtonPack_\"). However, please note the following special conditions! If you used an off-the-shelf ESP32 device, then the software which enables the WiFi access point is not yet loaded so you will need to follow the \"First-Time Upload\" for the initial upload of firmware to your device. If you are performing your first upgrade to the version v6.x firmware, you will need to perform the exact same process as the \"First-Time Upload\" to re-partition your device to accept the larger firmware files. Important Upgrades: V5.x \u2192 V6.x \ud83d\uded1 STOP, PLEASE READ! The partition scheme for the ESP32-based controllers has changed as of v6.0.0 to support a larger firmware file. This requires an update via USB cable for any users who were previously on a firmware release in v5.x or earlier. You will need to follow the \"First-Time Upload\" process to use a new, custom partition scheme on the device which provides a larger storage areas for Over-the-Air (OTA) updates. The standard flash memory of the ESP-WROOM-32 modules we use is limited to 4MB and must provide space to upload new firmware. For context, the default partition prioritized a \"SPIFFS\" area which was intended for file storage but is not used for our purposes. By removing that storage area we can allocate more space for larger firmware images (app0/app1), and adds an additional area for non-volatile storage (NVS). Old Scheme: nvs: 20kb otadata: 8kb app0: 1280kb (ota_0) app1: 1280kb (ota_1) spiffs: 1408kb coredump: 64kb New Scheme: nvs: 20kb otadata: 8kb app0: 1920kb (ota_0) app1: 1920kb (ota_1) nvs2: 128kb coredump: 64kb Once you have updated to a firmware from v6.x or later using the USB process, then then you may proceed to using the instructions for over-the-air (OTA/WiFi) updates without a USB cable as described in the \"Standard Updates\" section. For a more visual representation, please refer to this flowchart: ESP32: First-Time Upload (via USB) The following steps MUST be taken if either of these situations applies to you: If you are using your own ESP32 controller direct from Amazon or another supplier, then the microcontroller has not been flashed with the GPStar firmware to enable the OTA upload feature and the manual flashing process is required. Or, if you are performing the first firmware update since the introduction of v6.x you will need to perform the manual flashing process. We need to make room for larger firmware files and this can only be done by repartitioning the device's internal 4MB storage area. If you encounter any issues while attempting to access your ESP32 device via a USB cable, please see the \" USB Troubleshooting \" section at the bottom of this guide. Option 1: Using GPStar ESP32 Firmware Uploader This uses a purpose-built flash tool just like the tools for the Proton Pack, Neutrona Wand, Single-Shot Blaster and GPStar Audio. Thanks to its ease of use, this is our recommended method for performing the first-time USB upload process. First, download either the Windows or Mac OSX flash tool from the extras folder. If you are on Windows x86 or Linux, try Option 2 below instead. Windows (x64 only): GPStar ESP32 Firmware Flasher MacOS Intel/M1: GPStar ESP32 Firmware Flasher (Mac OSX) Plug your device into a USB port on your computer. Locate the following files from the /binaries/attenuator directory. extras/Attenuator-ESP32-Bootloader.bin = This is the standard bootloader for the ESP32 itself. extras/Attenuator-ESP32-Partitions.bin = This specifies the partition scheme for the flash memory. extras/boot_app0.bin = This is the software for selecting the available/next OTA partition. Attenuator-ESP32.bin = This is the custom firmware for the GPStar kit. Open the GPStar ESP32 Firmware Flasher and browse to the files specified in step 2 above for each of the four requested file locations (see below screenshot). The program should automatically detect the correct COM port and baud rate (see above screenshot). If it did not, use the drop-down menus to select the correct one for your PC. Click the Upload button to flash the new firmware to your ESP32. Be patient, this process can take between 15 seconds and several minutes depending on the selected baud rate. Once the flash has completed successfully, your ESP32 should now be broadcasting a WiFi network and you should be ready to install it into your Proton Pack. If the flash failed, please see Solution 2 in the \" USB Troubleshooting \" section at the bottom of this guide to manually switch the ESP32 into bootloader mode. You may also try lowering the baud rate to 115200 (if available), though note this will increase the time it takes to flash the firmware. Option 2: Via Web Uploader This uses a 3rd-party website to upload using the Web Serial protocol which is only available on the Google Chrome, Microsoft Edge, and Opera desktop web browsers. Mobile browsers are NOT supported, and you will be prompted with a message if your web browser is not valid for use. Plug your device into a USB port on your computer and go to http://espwebtool.ghostbusters.engineering (which redirects to https://esp.huhn.me ). Locate the following files from the /binaries/attenuator directory. extras/Attenuator-ESP32-Bootloader.bin = This is the standard bootloader for the ESP32 itself. extras/Attenuator-ESP32-Partitions.bin = This specifies the partition scheme for the flash memory. extras/boot_app0.bin = This is the software for selecting the available/next OTA partition. Attenuator-ESP32.bin = This is the custom firmware for the GPStar kit. Click on the CONNECT button and select your USB serial device from the list of options and click on \"Connect\". Once connected, select the files (noted above) for the following address spaces: 0x1000 \u2192 Attenuator-ESP32-Bootloader.bin 0x8000 \u2192 Attenuator-ESP32-Partitions.bin 0xE000 \u2192 boot_app0.bin 0x10000 \u2192 Attenuator-ESP32.bin Click on the PROGRAM button to begin flashing. View the \"Output\" window to view progress of the flashing operation. Once the device has completely flashed (100%) unplug the USB cable and remove any remaining power source from the device. Restore power to reboot the device and confirm operation. View a quick video of what this process should look like. Your list of USB devices may differ, and it may require selecting a different device if you cannot immediately determine which connected device is your ESP32. \ud83d\udcdd NOTE: If your device still cannot be found automatically you may need to view the \" USB Troubleshooting \" section at the bottom of this guide. Option 3: Via Command-Line You will need to utilize a command-line tool to upload the firmware to your device from your local computer. Note this is not recommended unless you are using a platform other than Windows x64 or Mac OSX, such as Linux. Install the latest Python 3.x utility based on your operating system: Windows: Download the installer from Python . When installing you may be prompted to \"Add Python to PATH\", and it is recommended to accept that option. Linux: Execute sudo apt update && sudo apt install -y python3 python3-pip MacOS: Execute brew install python using Homebrew ( instructions here ) From a terminal (command line) prompt run the following which will install the pip tool along with the esptool utility: python3 -m ensurepip python3 -m pip install --upgrade pip setuptools esptool Confirm that python was installed successfully by running the commands python --version and python3 --version . Use the command that reports a 3.x version ( python or python3 ) for all following steps. We will assume python3 is available. Navigate to the binaries/attenuator directory within the extracted GPStar-proton-pack software release: cd <extracted_location>/binaries/attenuator Ensure your ESP32 is plugged into your computer using a data-capable USB cable. Run the following command to detect and display information about your ESP32, including the serial port used for communication: python3 -m esptool flash_id If this lists multiple devices, unplug the device and run the command; then replug the device and run the command again. Look for differences in the results to identify which USB device belongs to your ESP32. For Linux/MacOS the port name may begin with /dev/cu.usbserial or /dev/cu.wchusbserial and is case-sensitive when used. For Windows it would be COM[0-9] (eg. COM4 or COM12 ) and is not case-sensitive. Run the following command to flash the bootloader and firmware, providing the correct <PORT> value discovered from the previous step: python3 -m esptool --port <PORT> --chip esp32 --baud 921600 write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 extras/Attenuator-ESP32-Bootloader.bin 0x8000 extras/Attenuator-ESP32-Partitions.bin 0xe000 extras/boot_app0.bin 0x10000 Attenuator-ESP32.bin \ud83d\udcdd NOTE: If your device still cannot be found automatically you may need to view the \" USB Troubleshooting \" section at the bottom of this guide. ESP32: Standard Updates (via WiFi) This applies to all updates you will perform AFTER the first-time upload of the firmware for the device, when the private WiFi network for the Proton Pack is available via the custom firmware. Power up your Proton Pack and ESP32 device (whether standalone or as part of the Attenuator hardware). Open the WiFi preferences on your computer/device and look for the SSID which begins \"ProtonPack_\" . If this is your first connection to this access point, use the default password \"555-2368\" . Navigate directly to the URL: http://192.168.1.2/update Use the \"Select File\" button and select the Attenuator-ESP32.bin file from the /binaries/attenuator directory. The upload will begin immediately. Once at 100% the device will reboot. Navigate to http://192.168.1.2 or http://protonpack_####.local to confirm that the device is able to communicate with the Proton Pack PCB. Note: If the upload fails, this is not uncommon. Simply attempt the upload again using the OTA updater. WiFi Security While every device gets a unique SSID for the wireless network, the password is always the same default of \"555-2368\". Therefore, to keep your device private and out of reach of others you are strongly encouraged to change this password. Setting a WiFi Password Since this device will make use of a private WiFi network with a default password, it is STRONGLY encouraged that you take a moment to change the password to something you prefer to avoid unauthorized access of your equipment. Once you are able to reach the web UI at http://192.168.1.2 or http://protonpack_####.local scroll to the bottom of the page to find the \"Secure Device WiFi\" link. Follow the instructions on the page to set a new password for your device. This will be unique to the ESP32 controller and will persist as the new default even if the device is power-cycled. Passwords must only be at least 8 characters and you will be required to enter a matching password as confirmation to ensure you entered the expected string of characters. The password you choose will be stored in an area of the device's flash memory that is unaffected by future firmware updates. Therefore, if you forget your password you may need to load a special version of the firmware which can bypass that stored value and allow you to use the default password again. This process is covered in the next section. Forgot Your WiFi Password? The following is only applicable to users on firmware PRIOR to the v5.2.2 release. As of that release the ability to boot up with the default password was introduced by pressing down on the center dial when power is applied to the device. If you have forgotten the password to the private WiFi network, you will need to load a special firmware to allow you to access the device and reset the password. Though if you have opted to connect your device to a preferred WiFi network using the built-in WiFi settings, simply return to your device's IP address on that network and change the password for the private WiFi network as desired. In the case where you do not have access to your device via an external WiFi network, you will need to follow a special process using a USB cable and a utility for your OS of choice. This will follow the same process as the \"First-Time Upload\" instructions posted above, though you will instead load the Attenuator-ESP32-Reset.bin file from the /binaries/attenuator directory. Once flashed, this will allow you to get back into the web UI at http://192.168.1.2 or http://protonpack_####.local using the default password (\"555-2368\") and change to your choice of password. Once changed, you will need to re-flash the device using the standard firmware--otherwise, the device will always use the default WiFi password while this firmware is loaded ! The new password will be used automatically to secure the WiFi access point once the regular firmware is in use. \ud83d\udcdd Note: When using this firmware there will be additional debug messages enabled for the device. Therefore, this firmware image may also be used to help debug WiFi issues by checking the output via the Arduino IDE's serial console. Be sure to set the baud rate to 112500 to view the output correctly. USB Troubleshooting Before beginning any actions when using a USB cable, be sure to use a high-quality USB cable which supports data transfer. Some cheap cables may only support charging (not data), or not fully support the power requirements of the device. Problem 1: Your ESP32 controller does not appear as a serial device in your operating system (COM# for Windows, /dev/cu.usb* for macOS/Linux). Solution 1: It is necessary to install a driver for the \"CP210x USB to UART Bridge\" onto your computer for some devices. A driver for Windows and macOS is available via Silicon Labs and has proved useful. Problem 2: The ESP32 device can be detected when using the ESPWebTool website but can't connect. Alternatively, you get a notice that the device must be reset. Solution 2: You must put the device into bootloader mode. To help with this, use the SerialTerminal website to connect to your device first: Plug ESP32 into computer Hold down BOOT button While holding BOOT, click EN once Continue holding BOOT until the firmware update tool says \"Connecting...\" then release You should see a message similar to the following which indicates the device is ready to flash: rst:0x1 (POWERON_RESET),boot:0x3 (DOWNLOAD_BOOT(UART0/UART1/SDIO_REI_REO_V2)) waiting for download Without disconnecting the device from your computer, and using the same browser tab, return to the ESPWebTool website](https://esp.huhn.me/) and complete the flashing process as described earlier in this guide as \"Option 2\". Note: If you get garbage on the screen when using the serial terminal, use the gear icon at the top right to make sure the baud rate is set to 115200. Problem 3: The process described in Solution 2 did not work, help! Solution 3: Try using Option 1 instead. For users not on Windows x64 or Mac OSX, use Option 3 to run esptool manually. Problem 4: For Linux users, if you get a \"Permission denied\" error when running esptool you may need to add your user to the dialout group. Solution 4: Run this command, then log out and back in for the changes to take effect: `sudo usermod -aG dialout $USER` \ud83d\udcdd Tip: If you have successfully flashed your ESP32 device and do not see the available WiFi access point, try plugging your USB cable directly into the Talentcell battery or try another USB port on your computer. In rare cases the USB port and/or cable cannot supply enough voltage to run the ESP32's WiFi radio. \ud83d\udcdd Tip: To identify the USB device requires different methods based on the operating system used: For Linux use the lsusb utility (or lsusb -v ) to list attached USB devices. For MacOS run ls /dev/{tty,cu}.* to list available USB devices. For Windows , use the \"Device Manager\" and look at the \"Ports (COM & LPT)\" section. These guides from Espressif may be of some help as a reference: Espressif - esptool Installation Espressif - Flashing Firmware Espressif - Boot Mode Selection Software Development Requirements As of the v5.4.0 release the development platform of choice for this device has been migrated from Arduino IDE to the VSCode with PlatformIO . Please follow the linked guide for installing the core software and plugins required.","title":"Flashing Attenuator/Wifi"},{"location":"ATTENUATOR_FLASHING/#flashing-the-attenuator","text":"NOTICE - As of the V6.0 release all support for the Arduino Nano hardware has been deprecated as we can no longer build the necessary binaries for the limited memory space on that device. Going forward, only the ESP32 will be supported for the Attenuator device, whether purchased as a kit from Frutto Technologies or as a DIY solution. The ESP32 microcontroller is capable of supporting Over-The-Air (OTA) updates for firmware, meaning you will need to utilize a desktop web browser from a computer (not a mobile device or tablet) and the built-in WiFi access point provided by the controller (prefix: \"ProtonPack_\"). However, please note the following special conditions! If you used an off-the-shelf ESP32 device, then the software which enables the WiFi access point is not yet loaded so you will need to follow the \"First-Time Upload\" for the initial upload of firmware to your device. If you are performing your first upgrade to the version v6.x firmware, you will need to perform the exact same process as the \"First-Time Upload\" to re-partition your device to accept the larger firmware files.","title":"Flashing the Attenuator"},{"location":"ATTENUATOR_FLASHING/#important-upgrades-v5x-v6x","text":"\ud83d\uded1 STOP, PLEASE READ! The partition scheme for the ESP32-based controllers has changed as of v6.0.0 to support a larger firmware file. This requires an update via USB cable for any users who were previously on a firmware release in v5.x or earlier. You will need to follow the \"First-Time Upload\" process to use a new, custom partition scheme on the device which provides a larger storage areas for Over-the-Air (OTA) updates. The standard flash memory of the ESP-WROOM-32 modules we use is limited to 4MB and must provide space to upload new firmware. For context, the default partition prioritized a \"SPIFFS\" area which was intended for file storage but is not used for our purposes. By removing that storage area we can allocate more space for larger firmware images (app0/app1), and adds an additional area for non-volatile storage (NVS). Old Scheme: nvs: 20kb otadata: 8kb app0: 1280kb (ota_0) app1: 1280kb (ota_1) spiffs: 1408kb coredump: 64kb New Scheme: nvs: 20kb otadata: 8kb app0: 1920kb (ota_0) app1: 1920kb (ota_1) nvs2: 128kb coredump: 64kb Once you have updated to a firmware from v6.x or later using the USB process, then then you may proceed to using the instructions for over-the-air (OTA/WiFi) updates without a USB cable as described in the \"Standard Updates\" section. For a more visual representation, please refer to this flowchart:","title":"Important Upgrades: V5.x &rarr; V6.x"},{"location":"ATTENUATOR_FLASHING/#esp32-first-time-upload-via-usb","text":"The following steps MUST be taken if either of these situations applies to you: If you are using your own ESP32 controller direct from Amazon or another supplier, then the microcontroller has not been flashed with the GPStar firmware to enable the OTA upload feature and the manual flashing process is required. Or, if you are performing the first firmware update since the introduction of v6.x you will need to perform the manual flashing process. We need to make room for larger firmware files and this can only be done by repartitioning the device's internal 4MB storage area. If you encounter any issues while attempting to access your ESP32 device via a USB cable, please see the \" USB Troubleshooting \" section at the bottom of this guide. Option 1: Using GPStar ESP32 Firmware Uploader This uses a purpose-built flash tool just like the tools for the Proton Pack, Neutrona Wand, Single-Shot Blaster and GPStar Audio. Thanks to its ease of use, this is our recommended method for performing the first-time USB upload process. First, download either the Windows or Mac OSX flash tool from the extras folder. If you are on Windows x86 or Linux, try Option 2 below instead. Windows (x64 only): GPStar ESP32 Firmware Flasher MacOS Intel/M1: GPStar ESP32 Firmware Flasher (Mac OSX) Plug your device into a USB port on your computer. Locate the following files from the /binaries/attenuator directory. extras/Attenuator-ESP32-Bootloader.bin = This is the standard bootloader for the ESP32 itself. extras/Attenuator-ESP32-Partitions.bin = This specifies the partition scheme for the flash memory. extras/boot_app0.bin = This is the software for selecting the available/next OTA partition. Attenuator-ESP32.bin = This is the custom firmware for the GPStar kit. Open the GPStar ESP32 Firmware Flasher and browse to the files specified in step 2 above for each of the four requested file locations (see below screenshot). The program should automatically detect the correct COM port and baud rate (see above screenshot). If it did not, use the drop-down menus to select the correct one for your PC. Click the Upload button to flash the new firmware to your ESP32. Be patient, this process can take between 15 seconds and several minutes depending on the selected baud rate. Once the flash has completed successfully, your ESP32 should now be broadcasting a WiFi network and you should be ready to install it into your Proton Pack. If the flash failed, please see Solution 2 in the \" USB Troubleshooting \" section at the bottom of this guide to manually switch the ESP32 into bootloader mode. You may also try lowering the baud rate to 115200 (if available), though note this will increase the time it takes to flash the firmware. Option 2: Via Web Uploader This uses a 3rd-party website to upload using the Web Serial protocol which is only available on the Google Chrome, Microsoft Edge, and Opera desktop web browsers. Mobile browsers are NOT supported, and you will be prompted with a message if your web browser is not valid for use. Plug your device into a USB port on your computer and go to http://espwebtool.ghostbusters.engineering (which redirects to https://esp.huhn.me ). Locate the following files from the /binaries/attenuator directory. extras/Attenuator-ESP32-Bootloader.bin = This is the standard bootloader for the ESP32 itself. extras/Attenuator-ESP32-Partitions.bin = This specifies the partition scheme for the flash memory. extras/boot_app0.bin = This is the software for selecting the available/next OTA partition. Attenuator-ESP32.bin = This is the custom firmware for the GPStar kit. Click on the CONNECT button and select your USB serial device from the list of options and click on \"Connect\". Once connected, select the files (noted above) for the following address spaces: 0x1000 \u2192 Attenuator-ESP32-Bootloader.bin 0x8000 \u2192 Attenuator-ESP32-Partitions.bin 0xE000 \u2192 boot_app0.bin 0x10000 \u2192 Attenuator-ESP32.bin Click on the PROGRAM button to begin flashing. View the \"Output\" window to view progress of the flashing operation. Once the device has completely flashed (100%) unplug the USB cable and remove any remaining power source from the device. Restore power to reboot the device and confirm operation. View a quick video of what this process should look like. Your list of USB devices may differ, and it may require selecting a different device if you cannot immediately determine which connected device is your ESP32. \ud83d\udcdd NOTE: If your device still cannot be found automatically you may need to view the \" USB Troubleshooting \" section at the bottom of this guide. Option 3: Via Command-Line You will need to utilize a command-line tool to upload the firmware to your device from your local computer. Note this is not recommended unless you are using a platform other than Windows x64 or Mac OSX, such as Linux. Install the latest Python 3.x utility based on your operating system: Windows: Download the installer from Python . When installing you may be prompted to \"Add Python to PATH\", and it is recommended to accept that option. Linux: Execute sudo apt update && sudo apt install -y python3 python3-pip MacOS: Execute brew install python using Homebrew ( instructions here ) From a terminal (command line) prompt run the following which will install the pip tool along with the esptool utility: python3 -m ensurepip python3 -m pip install --upgrade pip setuptools esptool Confirm that python was installed successfully by running the commands python --version and python3 --version . Use the command that reports a 3.x version ( python or python3 ) for all following steps. We will assume python3 is available. Navigate to the binaries/attenuator directory within the extracted GPStar-proton-pack software release: cd <extracted_location>/binaries/attenuator Ensure your ESP32 is plugged into your computer using a data-capable USB cable. Run the following command to detect and display information about your ESP32, including the serial port used for communication: python3 -m esptool flash_id If this lists multiple devices, unplug the device and run the command; then replug the device and run the command again. Look for differences in the results to identify which USB device belongs to your ESP32. For Linux/MacOS the port name may begin with /dev/cu.usbserial or /dev/cu.wchusbserial and is case-sensitive when used. For Windows it would be COM[0-9] (eg. COM4 or COM12 ) and is not case-sensitive. Run the following command to flash the bootloader and firmware, providing the correct <PORT> value discovered from the previous step: python3 -m esptool --port <PORT> --chip esp32 --baud 921600 write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 extras/Attenuator-ESP32-Bootloader.bin 0x8000 extras/Attenuator-ESP32-Partitions.bin 0xe000 extras/boot_app0.bin 0x10000 Attenuator-ESP32.bin \ud83d\udcdd NOTE: If your device still cannot be found automatically you may need to view the \" USB Troubleshooting \" section at the bottom of this guide.","title":"ESP32: First-Time Upload (via USB)"},{"location":"ATTENUATOR_FLASHING/#esp32-standard-updates-via-wifi","text":"This applies to all updates you will perform AFTER the first-time upload of the firmware for the device, when the private WiFi network for the Proton Pack is available via the custom firmware. Power up your Proton Pack and ESP32 device (whether standalone or as part of the Attenuator hardware). Open the WiFi preferences on your computer/device and look for the SSID which begins \"ProtonPack_\" . If this is your first connection to this access point, use the default password \"555-2368\" . Navigate directly to the URL: http://192.168.1.2/update Use the \"Select File\" button and select the Attenuator-ESP32.bin file from the /binaries/attenuator directory. The upload will begin immediately. Once at 100% the device will reboot. Navigate to http://192.168.1.2 or http://protonpack_####.local to confirm that the device is able to communicate with the Proton Pack PCB. Note: If the upload fails, this is not uncommon. Simply attempt the upload again using the OTA updater.","title":"ESP32: Standard Updates (via WiFi)"},{"location":"ATTENUATOR_FLASHING/#wifi-security","text":"While every device gets a unique SSID for the wireless network, the password is always the same default of \"555-2368\". Therefore, to keep your device private and out of reach of others you are strongly encouraged to change this password.","title":"WiFi Security"},{"location":"ATTENUATOR_FLASHING/#setting-a-wifi-password","text":"Since this device will make use of a private WiFi network with a default password, it is STRONGLY encouraged that you take a moment to change the password to something you prefer to avoid unauthorized access of your equipment. Once you are able to reach the web UI at http://192.168.1.2 or http://protonpack_####.local scroll to the bottom of the page to find the \"Secure Device WiFi\" link. Follow the instructions on the page to set a new password for your device. This will be unique to the ESP32 controller and will persist as the new default even if the device is power-cycled. Passwords must only be at least 8 characters and you will be required to enter a matching password as confirmation to ensure you entered the expected string of characters. The password you choose will be stored in an area of the device's flash memory that is unaffected by future firmware updates. Therefore, if you forget your password you may need to load a special version of the firmware which can bypass that stored value and allow you to use the default password again. This process is covered in the next section.","title":"Setting a WiFi Password"},{"location":"ATTENUATOR_FLASHING/#forgot-your-wifi-password","text":"The following is only applicable to users on firmware PRIOR to the v5.2.2 release. As of that release the ability to boot up with the default password was introduced by pressing down on the center dial when power is applied to the device. If you have forgotten the password to the private WiFi network, you will need to load a special firmware to allow you to access the device and reset the password. Though if you have opted to connect your device to a preferred WiFi network using the built-in WiFi settings, simply return to your device's IP address on that network and change the password for the private WiFi network as desired. In the case where you do not have access to your device via an external WiFi network, you will need to follow a special process using a USB cable and a utility for your OS of choice. This will follow the same process as the \"First-Time Upload\" instructions posted above, though you will instead load the Attenuator-ESP32-Reset.bin file from the /binaries/attenuator directory. Once flashed, this will allow you to get back into the web UI at http://192.168.1.2 or http://protonpack_####.local using the default password (\"555-2368\") and change to your choice of password. Once changed, you will need to re-flash the device using the standard firmware--otherwise, the device will always use the default WiFi password while this firmware is loaded ! The new password will be used automatically to secure the WiFi access point once the regular firmware is in use. \ud83d\udcdd Note: When using this firmware there will be additional debug messages enabled for the device. Therefore, this firmware image may also be used to help debug WiFi issues by checking the output via the Arduino IDE's serial console. Be sure to set the baud rate to 112500 to view the output correctly.","title":"Forgot Your WiFi Password?"},{"location":"ATTENUATOR_FLASHING/#usb-troubleshooting","text":"Before beginning any actions when using a USB cable, be sure to use a high-quality USB cable which supports data transfer. Some cheap cables may only support charging (not data), or not fully support the power requirements of the device. Problem 1: Your ESP32 controller does not appear as a serial device in your operating system (COM# for Windows, /dev/cu.usb* for macOS/Linux). Solution 1: It is necessary to install a driver for the \"CP210x USB to UART Bridge\" onto your computer for some devices. A driver for Windows and macOS is available via Silicon Labs and has proved useful. Problem 2: The ESP32 device can be detected when using the ESPWebTool website but can't connect. Alternatively, you get a notice that the device must be reset. Solution 2: You must put the device into bootloader mode. To help with this, use the SerialTerminal website to connect to your device first: Plug ESP32 into computer Hold down BOOT button While holding BOOT, click EN once Continue holding BOOT until the firmware update tool says \"Connecting...\" then release You should see a message similar to the following which indicates the device is ready to flash: rst:0x1 (POWERON_RESET),boot:0x3 (DOWNLOAD_BOOT(UART0/UART1/SDIO_REI_REO_V2)) waiting for download Without disconnecting the device from your computer, and using the same browser tab, return to the ESPWebTool website](https://esp.huhn.me/) and complete the flashing process as described earlier in this guide as \"Option 2\". Note: If you get garbage on the screen when using the serial terminal, use the gear icon at the top right to make sure the baud rate is set to 115200. Problem 3: The process described in Solution 2 did not work, help! Solution 3: Try using Option 1 instead. For users not on Windows x64 or Mac OSX, use Option 3 to run esptool manually. Problem 4: For Linux users, if you get a \"Permission denied\" error when running esptool you may need to add your user to the dialout group. Solution 4: Run this command, then log out and back in for the changes to take effect: `sudo usermod -aG dialout $USER` \ud83d\udcdd Tip: If you have successfully flashed your ESP32 device and do not see the available WiFi access point, try plugging your USB cable directly into the Talentcell battery or try another USB port on your computer. In rare cases the USB port and/or cable cannot supply enough voltage to run the ESP32's WiFi radio. \ud83d\udcdd Tip: To identify the USB device requires different methods based on the operating system used: For Linux use the lsusb utility (or lsusb -v ) to list attached USB devices. For MacOS run ls /dev/{tty,cu}.* to list available USB devices. For Windows , use the \"Device Manager\" and look at the \"Ports (COM & LPT)\" section. These guides from Espressif may be of some help as a reference: Espressif - esptool Installation Espressif - Flashing Firmware Espressif - Boot Mode Selection","title":"USB Troubleshooting"},{"location":"ATTENUATOR_FLASHING/#software-development-requirements","text":"As of the v5.4.0 release the development platform of choice for this device has been migrated from Arduino IDE to the VSCode with PlatformIO . Please follow the linked guide for installing the core software and plugins required.","title":"Software Development Requirements"},{"location":"AUDIO_FILES/","text":"Loading Audio Files (Effects + Music) This repository (for somewhat obvious reasons) does not provide music tracks for your project other than a single track which was graciously approved by the independent artist for inclusion. You will need to prepare any music tracks for use by exporting MP3 or AAC audio files as uncompressed stereo 44.1kHz 16-bit WAV files. This can be done easily using a program such as Audacity to open the music file and export to WAV format. See the instructions below for how to name your files for loading onto the SD cards. Format your SD Card to FAT32 Please consider high-quality, name-brand SD Cards. We recommend Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. Your SD cards MUST be formatted as FAT32 using 32KB block size. Use a full formatting option for the SD cards not a quick formatting for best results. SD Cards with capacities 32GB or less in FAT32. MAC and Linux Mac and Linux users can format SD Cards with capacities of 32GB OR LESS as FAT32 normally with their standard disk utility software. WINDOWS SD Cards with capacities of 32GB OR LESS can be formatted normally in the Windows Explorer. SD Cards with capacities larger than 32GB For Windows users these will need to be formatted a different way. We recommend the free tool Fat32Format by Tom Thornhill. It can be found in the extras folder of this repository or in the direct download link below (Web Site) Fat 32 Format GUI version (Direct Download link) guiformat.exe Thank you to Tom Thornhill for allowing us to distribute his FAT32 formatter for Windows users. If you find his software useful, you can donate directly to him by clicking on the button below Loading Files to the SD Cards Sound Effects Load all sound files from the \"pack-wand\" subdirectory of the \"sounds\" folder onto both SD cards. The file names must be identical and match between the SD cards so that all effects are synchronized and played by both Proton Pack and Neutrona Wand at the same time. Most effects are played on both the pack and wand while firing, with some minor adjustments to volume or fading to provide the most effective impact. Sound effects are prefixed with numbers 001-499 while music files will be prefixed as 500 and above. DO NOT LEAVE GAPS IN PREFIXES WHEN NUMBERING FILES! The only exception is between the last sound effect and first music track. Music Tracks As of release v5.3 and later it is normal to NOT hear music playback from the Neutrona Wand when connected to a Proton Pack. This change forces music to only be played back through the Proton Pack, meaning it is only necessary to load music onto the SD card for the pack. It is only when using the Neutrona Wand in \"benchtest\" (aka. standalone) mode that music files are expected to be loaded onto the SD card for the wand. To add more music, copy stereo WAV tracks (uncompressed 16-bit 44.1kHz stereo WAV files) onto an SD card. File naming of the music tracks start at 500. So for example, 500_somesong.wav , 501_somesong.wav , 502_somesong.wav , etc. Do not leave any gaps in the number sequencing! (For example of what NOT to do, 500_somesong.wav followed by 502_somesong.wav leaving off 501_somesong.wav on the SD card.) The most and only important part in the naming is the XXX_ prefix for all tracks. \ud83d\udcdd You MUST remove any metadata that may be present in the music WAV files that you add. This can cause problems with loading and playing back your music tracks The below photo is an (outdated) example of the prefixing and music sequencing","title":"Audio Files"},{"location":"AUDIO_FILES/#loading-audio-files-effects-music","text":"This repository (for somewhat obvious reasons) does not provide music tracks for your project other than a single track which was graciously approved by the independent artist for inclusion. You will need to prepare any music tracks for use by exporting MP3 or AAC audio files as uncompressed stereo 44.1kHz 16-bit WAV files. This can be done easily using a program such as Audacity to open the music file and export to WAV format. See the instructions below for how to name your files for loading onto the SD cards.","title":"Loading Audio Files (Effects + Music)"},{"location":"AUDIO_FILES/#format-your-sd-card-to-fat32","text":"Please consider high-quality, name-brand SD Cards. We recommend Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. Your SD cards MUST be formatted as FAT32 using 32KB block size. Use a full formatting option for the SD cards not a quick formatting for best results.","title":"Format your SD Card to FAT32"},{"location":"AUDIO_FILES/#sd-cards-with-capacities-32gb-or-less-in-fat32","text":"","title":"SD Cards with capacities 32GB or less in FAT32."},{"location":"AUDIO_FILES/#mac-and-linux","text":"Mac and Linux users can format SD Cards with capacities of 32GB OR LESS as FAT32 normally with their standard disk utility software.","title":"MAC and Linux"},{"location":"AUDIO_FILES/#windows","text":"SD Cards with capacities of 32GB OR LESS can be formatted normally in the Windows Explorer.","title":"WINDOWS"},{"location":"AUDIO_FILES/#sd-cards-with-capacities-larger-than-32gb","text":"For Windows users these will need to be formatted a different way. We recommend the free tool Fat32Format by Tom Thornhill. It can be found in the extras folder of this repository or in the direct download link below (Web Site) Fat 32 Format GUI version (Direct Download link) guiformat.exe Thank you to Tom Thornhill for allowing us to distribute his FAT32 formatter for Windows users. If you find his software useful, you can donate directly to him by clicking on the button below","title":"SD Cards with capacities larger than 32GB"},{"location":"AUDIO_FILES/#loading-files-to-the-sd-cards","text":"","title":"Loading Files to the SD Cards"},{"location":"AUDIO_FILES/#sound-effects","text":"Load all sound files from the \"pack-wand\" subdirectory of the \"sounds\" folder onto both SD cards. The file names must be identical and match between the SD cards so that all effects are synchronized and played by both Proton Pack and Neutrona Wand at the same time. Most effects are played on both the pack and wand while firing, with some minor adjustments to volume or fading to provide the most effective impact. Sound effects are prefixed with numbers 001-499 while music files will be prefixed as 500 and above. DO NOT LEAVE GAPS IN PREFIXES WHEN NUMBERING FILES! The only exception is between the last sound effect and first music track.","title":"Sound Effects"},{"location":"AUDIO_FILES/#music-tracks","text":"As of release v5.3 and later it is normal to NOT hear music playback from the Neutrona Wand when connected to a Proton Pack. This change forces music to only be played back through the Proton Pack, meaning it is only necessary to load music onto the SD card for the pack. It is only when using the Neutrona Wand in \"benchtest\" (aka. standalone) mode that music files are expected to be loaded onto the SD card for the wand. To add more music, copy stereo WAV tracks (uncompressed 16-bit 44.1kHz stereo WAV files) onto an SD card. File naming of the music tracks start at 500. So for example, 500_somesong.wav , 501_somesong.wav , 502_somesong.wav , etc. Do not leave any gaps in the number sequencing! (For example of what NOT to do, 500_somesong.wav followed by 502_somesong.wav leaving off 501_somesong.wav on the SD card.) The most and only important part in the naming is the XXX_ prefix for all tracks. \ud83d\udcdd You MUST remove any metadata that may be present in the music WAV files that you add. This can cause problems with loading and playing back your music tracks The below photo is an (outdated) example of the prefixing and music sequencing","title":"Music Tracks"},{"location":"BARGRAPH/","text":"Neutrona Wand Bargraph (Optional) This guide outlines the optional upgrade from the 5-LED stock bargraph to a more animated 28-segment bargraph (BL28Z-3005SA04Y) or the 28 Segment Bargraph and Power Cell from Frutto Technology . 28 Segment Bargraph Installation Video Guide 28 Segment Bargraph Installation Video Guide (YouTube) 28 Segment Bargraph and Power Cell Overview and Demo Bargraph and Power Cell Overview and Demo Video (YouTube) Hasbro Bargraph Fitment & Installation The 28-segment bargraph is intended to take the place of the 5-LED + PCB assembly from the stock Hasbro equipment. The only means of accessing this is to remove the barrel release assembly and a portion of the plastic base which sits below the stock controller board. This may require some cutting as the center of that piece is glued directly to the wand handle. Once removed, access to the old bargraph is quite easy and takes removal of 2 screws. The circuit board with the LEDs resides under a small black cover and can be removed from the wand once that cover is removed. To install the bargraph, you will want to remove and cut the clear plastic piece away and the original barrel wire cover plastic. You can fit the bargraph into the 3 piece system available on this repository or purchase from the gpstartechnologies.com There is an alternative mounting solution using the one piece mount. It should fit the bargraph tightly while also slotting into the clear plastic. Also available to download in this repository, or purchase from the gpstartechnologies.com website are 2 versions (short or long depending on how much plastic you remove) of a barrel wire cover, to protect your wires from getting caught on the retractable wand barrel mechanism. This cover screws onto the existing holes that the previous Hasbro board was screwed into, making it easy to remove and to do service inside your wand. DIY 28 Segment Bargraph Additional parts will be required, as well as a more invasive disassembling of the wand. Qty Desc Use Link 1 Barmeter 28 Segment Bargraph Please use the part number BL28Z-3005SA04Y https://www.aliexpress.us/item/3256803648954593.html 1 Adafruit 16x8 LED Matrix Driver Backpack - HT16K33 Breakout This will be the display driver for the bargraph elements using I2C serial communication https://www.adafruit.com/product/1427 BARMETER 28 SEGMENT BARGRAPH You will find the Barmeter pin reference below which will connect the bargraph to the matrix driver board. See the component fitment guide at the bottom of this page for how to mount this Bargraph into your wand body. HT16K33 Board Wand PCB Barmeter Pin VDD +5V GND Ground SDA SDA SCL SCL A0 \u2192 22 (C1) A1 \u2192 1 (C2) A2 \u2192 19 (C3) A3 \u2192 18 (C4) A4 \u2192 7 (C5) A5 \u2192 10 (C6) A6 \u2192 11 (C7) C0 \u2192 21 (L1) C1 \u2192 15 (L2) C2 \u2192 13 (L3) C3 \u2192 16 (L4) Note - If using the all-in-one PCB controller, connect the SDA and SCL pins directly to the expansion port available on that board. Additionally, the VDD and GND pins may make use of the 5V-OUT connection on that controller. BARMETER 28 SEGMENT BARGRAPH - BL28Z-3005SA04Y - Pin Layout Reference The following is Barmeter's internal reference for the numbered pins along the edge of the bargraph packaging and their internal names. This is for technical reference only--the only concern for connections should be from the bargraph to the HT16K33 board. Pin # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 C2 C5 C6 C7 C4 C3 C1 L3 L2 L4 L1 Inverted Bargraph Sequences If your bargraph is inverted or upside down, you can either flip it physically in the wand, or you can invert / de-invert it from within the EEPROM Configuration Menu System. Please see the EEPROM Menu System guide for more information. 30-Segment Bargraph As of firmware 5.4.0, the GPStar Neutrona Wand board will also support a 30-segment bargraph controlled by the same HT16K33 LED multiplexer chip as the 28-segment. This bargraph is in development and is intended to be a drop-in replacement for any wand type that offers a more prop-accurate appearance. This document will be updated as soon as more information is available.","title":"Bargraph"},{"location":"BARGRAPH/#neutrona-wand-bargraph-optional","text":"This guide outlines the optional upgrade from the 5-LED stock bargraph to a more animated 28-segment bargraph (BL28Z-3005SA04Y) or the 28 Segment Bargraph and Power Cell from Frutto Technology .","title":"Neutrona Wand Bargraph (Optional)"},{"location":"BARGRAPH/#28-segment-bargraph-installation-video-guide","text":"28 Segment Bargraph Installation Video Guide (YouTube)","title":"28 Segment Bargraph Installation Video Guide"},{"location":"BARGRAPH/#28-segment-bargraph-and-power-cell-overview-and-demo","text":"Bargraph and Power Cell Overview and Demo Video (YouTube)","title":"28 Segment Bargraph and Power Cell Overview and Demo"},{"location":"BARGRAPH/#hasbro-bargraph-fitment-installation","text":"The 28-segment bargraph is intended to take the place of the 5-LED + PCB assembly from the stock Hasbro equipment. The only means of accessing this is to remove the barrel release assembly and a portion of the plastic base which sits below the stock controller board. This may require some cutting as the center of that piece is glued directly to the wand handle. Once removed, access to the old bargraph is quite easy and takes removal of 2 screws. The circuit board with the LEDs resides under a small black cover and can be removed from the wand once that cover is removed. To install the bargraph, you will want to remove and cut the clear plastic piece away and the original barrel wire cover plastic. You can fit the bargraph into the 3 piece system available on this repository or purchase from the gpstartechnologies.com There is an alternative mounting solution using the one piece mount. It should fit the bargraph tightly while also slotting into the clear plastic. Also available to download in this repository, or purchase from the gpstartechnologies.com website are 2 versions (short or long depending on how much plastic you remove) of a barrel wire cover, to protect your wires from getting caught on the retractable wand barrel mechanism. This cover screws onto the existing holes that the previous Hasbro board was screwed into, making it easy to remove and to do service inside your wand.","title":"Hasbro Bargraph Fitment &amp; Installation"},{"location":"BARGRAPH/#diy-28-segment-bargraph","text":"Additional parts will be required, as well as a more invasive disassembling of the wand. Qty Desc Use Link 1 Barmeter 28 Segment Bargraph Please use the part number BL28Z-3005SA04Y https://www.aliexpress.us/item/3256803648954593.html 1 Adafruit 16x8 LED Matrix Driver Backpack - HT16K33 Breakout This will be the display driver for the bargraph elements using I2C serial communication https://www.adafruit.com/product/1427","title":"DIY 28 Segment Bargraph"},{"location":"BARGRAPH/#barmeter-28-segment-bargraph","text":"You will find the Barmeter pin reference below which will connect the bargraph to the matrix driver board. See the component fitment guide at the bottom of this page for how to mount this Bargraph into your wand body. HT16K33 Board Wand PCB Barmeter Pin VDD +5V GND Ground SDA SDA SCL SCL A0 \u2192 22 (C1) A1 \u2192 1 (C2) A2 \u2192 19 (C3) A3 \u2192 18 (C4) A4 \u2192 7 (C5) A5 \u2192 10 (C6) A6 \u2192 11 (C7) C0 \u2192 21 (L1) C1 \u2192 15 (L2) C2 \u2192 13 (L3) C3 \u2192 16 (L4) Note - If using the all-in-one PCB controller, connect the SDA and SCL pins directly to the expansion port available on that board. Additionally, the VDD and GND pins may make use of the 5V-OUT connection on that controller.","title":"BARMETER 28 SEGMENT BARGRAPH"},{"location":"BARGRAPH/#barmeter-28-segment-bargraph-bl28z-3005sa04y-pin-layout-reference","text":"The following is Barmeter's internal reference for the numbered pins along the edge of the bargraph packaging and their internal names. This is for technical reference only--the only concern for connections should be from the bargraph to the HT16K33 board. Pin # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 C2 C5 C6 C7 C4 C3 C1 L3 L2 L4 L1","title":"BARMETER 28 SEGMENT BARGRAPH - BL28Z-3005SA04Y - Pin Layout Reference"},{"location":"BARGRAPH/#inverted-bargraph-sequences","text":"If your bargraph is inverted or upside down, you can either flip it physically in the wand, or you can invert / de-invert it from within the EEPROM Configuration Menu System. Please see the EEPROM Menu System guide for more information.","title":"Inverted Bargraph Sequences"},{"location":"BARGRAPH/#30-segment-bargraph","text":"As of firmware 5.4.0, the GPStar Neutrona Wand board will also support a 30-segment bargraph controlled by the same HT16K33 LED multiplexer chip as the 28-segment. This bargraph is in development and is intended to be a drop-in replacement for any wand type that offers a more prop-accurate appearance. This document will be updated as soon as more information is available.","title":"30-Segment Bargraph"},{"location":"COMPILING_FLASHING/","text":"Compiling & Flashing via IDE Setup The custom software needed for operation must be compiled and uploaded to your devices which can be accomplished using an interactive development environment (IDE). This guide provides the list of required libraries for compilation and outlines the changes needed to support each board. Supported Devices Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini . Prerequisites Please see our guide on installing VSCode with PlatformIO. This will be used to compile and upload the code to your Proton Pack and Neutrona Wand. VSCode + PlatformIO +++ IMPORTANT WHEN FLASHING UPDATES +++ If you are flashing updates to your existing setup, make sure that both your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository. Connection to your GPStar Proton Pack and Neutrona Wand PCB Use the included FTDI to USB programming cable that comes with your GPStar kit or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! Compiling and Flashing the Software TO BE ADDED Firmware Flashing Instructional Video (YouTube) Advanced User Configurations To modify defaults within the software, please see the Advanced Configuration guide.","title":"Compiling &amp; Flashing via IDE Setup"},{"location":"COMPILING_FLASHING/#compiling-flashing-via-ide-setup","text":"The custom software needed for operation must be compiled and uploaded to your devices which can be accomplished using an interactive development environment (IDE). This guide provides the list of required libraries for compilation and outlines the changes needed to support each board.","title":"Compiling &amp; Flashing via IDE Setup"},{"location":"COMPILING_FLASHING/#supported-devices","text":"Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini .","title":"Supported Devices"},{"location":"COMPILING_FLASHING/#prerequisites","text":"Please see our guide on installing VSCode with PlatformIO. This will be used to compile and upload the code to your Proton Pack and Neutrona Wand. VSCode + PlatformIO","title":"Prerequisites"},{"location":"COMPILING_FLASHING/#important-when-flashing-updates","text":"If you are flashing updates to your existing setup, make sure that both your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository.","title":"+++ IMPORTANT WHEN FLASHING UPDATES +++"},{"location":"COMPILING_FLASHING/#connection-to-your-gpstar-proton-pack-and-neutrona-wand-pcb","text":"Use the included FTDI to USB programming cable that comes with your GPStar kit or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector!","title":"Connection to your GPStar Proton Pack and Neutrona Wand PCB"},{"location":"COMPILING_FLASHING/#compiling-and-flashing-the-software","text":"TO BE ADDED Firmware Flashing Instructional Video (YouTube)","title":"Compiling and Flashing the Software"},{"location":"COMPILING_FLASHING/#advanced-user-configurations","text":"To modify defaults within the software, please see the Advanced Configuration guide.","title":"Advanced User Configurations"},{"location":"CYCLOTRON_BYPASS/","text":"GPStar Cyclotron Bypass (DIY Packs) This device is only necessary for a DIY (non-Haslab) Proton Pack which does not have a removable cyclotron lid. The GPStar Cyclotron Bypass is used to connect your GPStar Cyclotron Lid LEDs (or any addressable LED ring or lights) to the GPStar Proton Pack electronics. As the kit was designed to work with the removable lid features on the Haslab packs, we need a way to make the system think a lid is always attached which is what this bypass board can do. With the removal of the bypass shunt (included with the connectors variant), you can even make use of Proton Pack shells with removable cyclotron lids by breaking the ground connection loop with a simple switch system connected to the included JST-XH connector. Installation Refer to the connection diagram photo below:","title":"Cyclotron Bypass"},{"location":"CYCLOTRON_BYPASS/#gpstar-cyclotron-bypass-diy-packs","text":"This device is only necessary for a DIY (non-Haslab) Proton Pack which does not have a removable cyclotron lid. The GPStar Cyclotron Bypass is used to connect your GPStar Cyclotron Lid LEDs (or any addressable LED ring or lights) to the GPStar Proton Pack electronics. As the kit was designed to work with the removable lid features on the Haslab packs, we need a way to make the system think a lid is always attached which is what this bypass board can do. With the removal of the bypass shunt (included with the connectors variant), you can even make use of Proton Pack shells with removable cyclotron lids by breaking the ground connection loop with a simple switch system connected to the included JST-XH connector.","title":"GPStar Cyclotron Bypass (DIY Packs)"},{"location":"CYCLOTRON_BYPASS/#installation","text":"Refer to the connection diagram photo below:","title":"Installation"},{"location":"CYCLOTRON_INNER/","text":"Inner Panel/Cyclotron Lights (Optional) These are OPTIONAL add-on additions for use within the Proton Pack. Light Switch Panel (Optional) Option 1: Standard LEDs There is a included STL file that you can 3D Print to replace the Cyclotron switch plate. You can add 5mm LEDs into the holes. See reference in the Pack Setup (PCB) for connections or Pack Setup (DIY) for wiring to the Arduino Mega. You can use cliplites to hold the LEDs in place. Refer to the full DIY parts list on where to source them. Option 2: LED Panel Supported as an alternative to regular LEDs is the GPStar Cyclotron LED Panel and or Frutto Technology Cyclotron LED panel. These panels will change colours depending on the state of your Proton Pack system. You will want to substitute 8 clear CLF-280-CTP cliplites . This panel will sit between the pack controller and the inner cyclotron \"cake\" lights. See below for the hookup guide: Pack Controller -> Inner LED Panel PCB -> Inner Cake Ring -> Cavity Lights (Optional) Inner Cyclotron Lights (Optional) You can run a addressable LED ring (24, 25, 35 or 36-Pixel ring recommended) inside a modified Inner Cyclotron or any 3D printable one. See reference in the Pack Setup (PCB) for connections or Pack Setup (DIY) for wiring to the Arduino Mega. NeoPixel ring sizes can be toggled in the user editable variables at the top of the Proton Pack code. A 35-Pixel NeoPixel ring is the default setting. Included is also a set of STL files if you wish to print a new Inner Cyclotron. The lid is held down onto the bottom part of this printable Cyclotron with M3x10 hex screws on the outer ring. The inner ring you can use smaller m3x8 hex screws for decoration. Enlarge or drill any holes for wire decoration or feeding wires into the Cyclotron as necessary. Sparking Cyclotron Lights (Optional) For the effect seen in the Frozen Empire movie, it is possible to extend the LEDs beyond the end of the NeoPixel ring used within the inner cyclotron and run them inside the cavity between the \"cake\" and the copper blocks. These addressable \"fairy lights\" have been used successfully for the effect. They use an enamel-coated copper wire which makes them unobtrusive and they don't stand out like LED strips. Note: This feature is currently only enabled via the web UI of the Attenuator/wireless device as part of the Proton Pack Settings. Motorised Cyclotron Support (Optional) As of firmware 5.4.0, we now support connecting a motor control relay to the GPStar Proton Pack in case a user wishes to either replicate a prop-accurate Afterlife/Frozen Empire outer cyclotron effect or fit a spinning Inner Cyclotron cake. Connect a 5V tolerant relay trigger to Plug M1 (Vibration) on the Proton Pack PCB, then either use the Neutrona Wand menu or web UI Proton Pack Settings to change the Proton Pack Vibration Mode to \"Motorised Cyclotron\". WARNING: Do not attempt to connect a motor directly to Pin M1! This pin was only ever designed to run the small toy vibration motor that came stock in the HasLab Proton Pack. Make sure that you only connect a motor control relay's trigger to Pin M1, and we highly recommend powering the motor with a power source independent of the GPStar kit itself so as not to steal current needed by the Pack and Wand.","title":"Inner Cyclotron"},{"location":"CYCLOTRON_INNER/#inner-panelcyclotron-lights-optional","text":"These are OPTIONAL add-on additions for use within the Proton Pack.","title":"Inner Panel/Cyclotron Lights (Optional)"},{"location":"CYCLOTRON_INNER/#light-switch-panel-optional","text":"","title":"Light Switch Panel (Optional)"},{"location":"CYCLOTRON_INNER/#option-1-standard-leds","text":"There is a included STL file that you can 3D Print to replace the Cyclotron switch plate. You can add 5mm LEDs into the holes. See reference in the Pack Setup (PCB) for connections or Pack Setup (DIY) for wiring to the Arduino Mega. You can use cliplites to hold the LEDs in place. Refer to the full DIY parts list on where to source them.","title":"Option 1: Standard LEDs"},{"location":"CYCLOTRON_INNER/#option-2-led-panel","text":"Supported as an alternative to regular LEDs is the GPStar Cyclotron LED Panel and or Frutto Technology Cyclotron LED panel. These panels will change colours depending on the state of your Proton Pack system. You will want to substitute 8 clear CLF-280-CTP cliplites . This panel will sit between the pack controller and the inner cyclotron \"cake\" lights. See below for the hookup guide: Pack Controller -> Inner LED Panel PCB -> Inner Cake Ring -> Cavity Lights (Optional)","title":"Option 2: LED Panel"},{"location":"CYCLOTRON_INNER/#inner-cyclotron-lights-optional","text":"You can run a addressable LED ring (24, 25, 35 or 36-Pixel ring recommended) inside a modified Inner Cyclotron or any 3D printable one. See reference in the Pack Setup (PCB) for connections or Pack Setup (DIY) for wiring to the Arduino Mega. NeoPixel ring sizes can be toggled in the user editable variables at the top of the Proton Pack code. A 35-Pixel NeoPixel ring is the default setting. Included is also a set of STL files if you wish to print a new Inner Cyclotron. The lid is held down onto the bottom part of this printable Cyclotron with M3x10 hex screws on the outer ring. The inner ring you can use smaller m3x8 hex screws for decoration. Enlarge or drill any holes for wire decoration or feeding wires into the Cyclotron as necessary.","title":"Inner Cyclotron Lights (Optional)"},{"location":"CYCLOTRON_INNER/#sparking-cyclotron-lights-optional","text":"For the effect seen in the Frozen Empire movie, it is possible to extend the LEDs beyond the end of the NeoPixel ring used within the inner cyclotron and run them inside the cavity between the \"cake\" and the copper blocks. These addressable \"fairy lights\" have been used successfully for the effect. They use an enamel-coated copper wire which makes them unobtrusive and they don't stand out like LED strips. Note: This feature is currently only enabled via the web UI of the Attenuator/wireless device as part of the Proton Pack Settings.","title":"Sparking Cyclotron Lights (Optional)"},{"location":"CYCLOTRON_INNER/#motorised-cyclotron-support-optional","text":"As of firmware 5.4.0, we now support connecting a motor control relay to the GPStar Proton Pack in case a user wishes to either replicate a prop-accurate Afterlife/Frozen Empire outer cyclotron effect or fit a spinning Inner Cyclotron cake. Connect a 5V tolerant relay trigger to Plug M1 (Vibration) on the Proton Pack PCB, then either use the Neutrona Wand menu or web UI Proton Pack Settings to change the Proton Pack Vibration Mode to \"Motorised Cyclotron\". WARNING: Do not attempt to connect a motor directly to Pin M1! This pin was only ever designed to run the small toy vibration motor that came stock in the HasLab Proton Pack. Make sure that you only connect a motor control relay's trigger to Pin M1, and we highly recommend powering the motor with a power source independent of the GPStar kit itself so as not to steal current needed by the Pack and Wand.","title":"Motorised Cyclotron Support (Optional)"},{"location":"CYCLOTRON_LID/","text":"Cyclotron Lid Lights (Optional) These are OPTIONAL add-on additions for use within the Proton Pack. Overview The stock lights in the HasLab pack only supplies 12 addressable LEDs which are red-only. If you wish to be able to change the colours of these lights you will need to replace them with an addressable LED ring, GPStar Cyclotron LEDs or those made by Frutto Technology such as the 20-LED (4x 5-LED) or 36-LED (4x 9-LED) option. Regardless of solution you will need to split apart the Cyclotron Lid which is secured at 6 locations around the lid. Gently prying under the plastic near the N-Filter on the inside of the lid will be the first screw posts cold-welded to the lid. A firm but slow twist should break the bond and begin to separate the halves. To re-secure, the best option is to drill through the center of each obvious cold weld on the inner lid and use small screws to attach the halves back together. Haslab Proton Pack Hookup Guide DIY and Spirit Packs Hookup Guide Installation Guide Video GPStar Proton Pack & Neutrona Wand Cyclotron Lights Installation Video (YouTube) The stock LEDs can be removed by prying out the diffuser lenses, then snipping the 3 black plastic welds used to hold the PCBs in place. Whether pre-soldered or not, the new LEDs should be oriented similar to the arcing pattern used by the stock LEDs. Hot glue can be used to keep these in place until the diffusers are put back in place. Note: Installation is the same for the 5-LED or 9-LED replacement kits from Frutto Technology. When replacing the diffuser lenses, keep wires tucked into the available slots to avoid pinching. Secure all wires to avoid them from moving after installation. The new LEDs will need to be selected via the EEPROM setup menu #4. Select the 20-LED option for the correct count and speed defaults. Reassemble the Cyclotron Lid using low-profile machine screws. The new LEDs should not need additional diffusion unless that is your preference. Installation Video (YouTube) 40-LED Neopixel Ring (Deprecated) This approach simply adds the lights atop the old circuit board and LEDs between the outer and inner layers of the Cyclotron Lid. Print the Cyclotron Ring Diffuser to help orient the ring and keep it positioned behind each lens. The pixel opposite the soldered connections should be number 1 and should be made the dead center of the top-right lens. See below for an illustration of this orientation and use of the diffuser ring. For the electrical connections, this reuses 3/4 the available connections on the lid (the pogo pins) for 5V power (red), data (yellow), and ground (black). You will remove those connections and solder new wires to the circuit board on the lid to connect to the ring. It is important to leave the brown wire attached as this triggers the lid removal detection. To improve the fit of the new ring, it is recommended to use a Dremel with a sanding drum to remove any raised plastic bits which are below the ring. Also note that the added materials will not allow the inner and outer shells to fit as tightly. Applying some black foam weatherstripping to the edge of the outer shell will help hide any gaps but also provide some material to push back against the inner shell when screwing the halves together. Demonstration Video by JustinDustin (YouTube) Note: This approach is considered deprecated for the cyclotron lid as the 5-LED lid lights provide the same density, while the new 9-LED lid lights provide a much smoother transition. But for users who have implemented this the solution is still supported in software.","title":"Cyclotron Lid"},{"location":"CYCLOTRON_LID/#cyclotron-lid-lights-optional","text":"These are OPTIONAL add-on additions for use within the Proton Pack.","title":"Cyclotron Lid Lights (Optional)"},{"location":"CYCLOTRON_LID/#overview","text":"The stock lights in the HasLab pack only supplies 12 addressable LEDs which are red-only. If you wish to be able to change the colours of these lights you will need to replace them with an addressable LED ring, GPStar Cyclotron LEDs or those made by Frutto Technology such as the 20-LED (4x 5-LED) or 36-LED (4x 9-LED) option. Regardless of solution you will need to split apart the Cyclotron Lid which is secured at 6 locations around the lid. Gently prying under the plastic near the N-Filter on the inside of the lid will be the first screw posts cold-welded to the lid. A firm but slow twist should break the bond and begin to separate the halves. To re-secure, the best option is to drill through the center of each obvious cold weld on the inner lid and use small screws to attach the halves back together.","title":"Overview"},{"location":"CYCLOTRON_LID/#haslab-proton-pack-hookup-guide","text":"","title":"Haslab Proton Pack Hookup Guide"},{"location":"CYCLOTRON_LID/#diy-and-spirit-packs-hookup-guide","text":"","title":"DIY and Spirit Packs Hookup Guide"},{"location":"CYCLOTRON_LID/#installation-guide-video","text":"GPStar Proton Pack & Neutrona Wand Cyclotron Lights Installation Video (YouTube) The stock LEDs can be removed by prying out the diffuser lenses, then snipping the 3 black plastic welds used to hold the PCBs in place. Whether pre-soldered or not, the new LEDs should be oriented similar to the arcing pattern used by the stock LEDs. Hot glue can be used to keep these in place until the diffusers are put back in place. Note: Installation is the same for the 5-LED or 9-LED replacement kits from Frutto Technology. When replacing the diffuser lenses, keep wires tucked into the available slots to avoid pinching. Secure all wires to avoid them from moving after installation. The new LEDs will need to be selected via the EEPROM setup menu #4. Select the 20-LED option for the correct count and speed defaults. Reassemble the Cyclotron Lid using low-profile machine screws. The new LEDs should not need additional diffusion unless that is your preference. Installation Video (YouTube)","title":"Installation Guide Video"},{"location":"CYCLOTRON_LID/#40-led-neopixel-ring-deprecated","text":"This approach simply adds the lights atop the old circuit board and LEDs between the outer and inner layers of the Cyclotron Lid. Print the Cyclotron Ring Diffuser to help orient the ring and keep it positioned behind each lens. The pixel opposite the soldered connections should be number 1 and should be made the dead center of the top-right lens. See below for an illustration of this orientation and use of the diffuser ring. For the electrical connections, this reuses 3/4 the available connections on the lid (the pogo pins) for 5V power (red), data (yellow), and ground (black). You will remove those connections and solder new wires to the circuit board on the lid to connect to the ring. It is important to leave the brown wire attached as this triggers the lid removal detection. To improve the fit of the new ring, it is recommended to use a Dremel with a sanding drum to remove any raised plastic bits which are below the ring. Also note that the added materials will not allow the inner and outer shells to fit as tightly. Applying some black foam weatherstripping to the edge of the outer shell will help hide any gaps but also provide some material to push back against the inner shell when screwing the halves together. Demonstration Video by JustinDustin (YouTube) Note: This approach is considered deprecated for the cyclotron lid as the 5-LED lid lights provide the same density, while the new 9-LED lid lights provide a much smoother transition. But for users who have implemented this the solution is still supported in software.","title":"40-LED Neopixel Ring (Deprecated)"},{"location":"DIY_BOM/","text":"Bill of Materials This guide should provide a listing of minimal/required components as well as any optional items needed for the conversion. Note that just about everything can be sourced at Mouser or Digi-Key among usual sites such as Amazon or Adafruit . The HasLab equipment makes use of both JST-XH and JST-PH connectors, so buy accordingly for your headers and plugs if you wish to continue using the stock connectors. Tools & Connectors These items are considered optional but useful. If you are using the ready-to-use PCBs you may only be interested in the pin crimping tool and JST connectors. Otherwise, if soldering is in your skillset you may consider the TS101 as a worthwhile upgrade for easier soldering. Desc Use Link Pin Crimping Tool Necessary for crimping wires for additional JST connectors which may be needed for optional components. https://a.co/d/3M5z2kk JST-XH Connector Set Assorted JST-XH connectors for optional components in the Proton Pack. https://a.co/d/7dkYd1O JST-PH Connector Set Pre-crimpted 2-pin connectors for optional components in the Neutrona Wand. https://a.co/d/0ckywqT or https://a.co/d/8fkU1py TS101 Soldering Iron Incredibly good and modern soldering iron. Heats up in seconds and fully customizible with auto-sleep function. Absolutely worth it for tight spaces and ease of use. Mini Electric Soldering Iron Kit TS101 Lead-free Solder You will need good quality solder and Kester makes a narrow diameter which is perfect for small spaces. Kester Lead Free Solder, 0.031\" Diameter, 0.43 oz. Solder Sucker Very helpful to clean up and desolder pins etc https://www.adafruit.com/product/1597 Common Components Qty Desc Use Link 2 Robertsonics WAV Trigger REQUIRED - 1 for the pack and 1 for the wand. You can find these on mouser as well. From SparkFun From Amazon 2 Micro SD Cards. REQUIRED - I recommend Sandisk Extreme A1/A2 U3 V30 32GB Micro SD cards. For windows users, formatting cards as FAT32 that are larger than 32GB need to be formatted from the command prompt https://www.amazon.fr/SanDisk-Extreme-microSDXC-mobile-Performance/dp/B09X7D3Y59/ https://www.amazon.com/SanDisk-Extreme-Mobile-Gaming-microSD/dp/B089DNFTQF/ 1 FTDI Basic (5V) RECOMMENDED - Used to update the WAV Trigger firmware https://www.sparkfun.com/products/9716 1 (Package) 1n4001 Diode (10 Pack) Minimum 2 are REQUIRED, one for each vibration motor (pack and wand). Though it's good to have additional on-hand for other additions. https://www.adafruit.com/product/755 1 (Package) 100uF 16V Electrolytic Capacitors (10 Pack) (or equivalent) Minimum 3 are RECOMMENDED, one for the Power Cell, Cyclotron Lid LEDs and Wand Barrel LEDs. Though it's good to have additional on-hand for other additions. https://www.adafruit.com/product/2193 1 (Package) Resistors (Various) REQUIRED - Various resistors for the project https://www.amazon.fr/gp/product/B08FD1XVL6/ https://www.amazon.com/BOJACK-Values-Resistor-Resistors-Assortment/dp/B08FD1XVL6/ 1 (Package) NPN Bipolar Transistors (PN2222) (10 Pack) Minimum 2 are REQUIRED, one for each vibration motor (pack and wand) https://www.adafruit.com/product/756 1 (Package) Heat Shrink Tubing RECOMMENDED - To protect exposed wire soldering work. https://www.amazon.fr/gp/product/B071D7LJ31/ https://www.amazon.com/560PCS-Heat-Shrink-Tubing-Eventronic/dp/B072PCQ2LW/ - 26-22 AWG Spools of Stranded Wire RECOMMENDED - Good for making connections, extending connectors, building your hose internal wiring, etc. (various colours). Must be stranded wire for flexibility, silicone to resist heat if using heat-shrink tubing. (The 22AWG box from Amazon comes with some heat-shrink tubing and mini zip ties.) Silicone Covered Stranded-Core Wire - Adafruit 22AWG Silicone Hook Up Wire - Amazon Proton Pack Qty Desc Use Link 1 Arduino Mega 2560 Rev 3 REQUIRED - You can find clones without headers, but this is what has been used successfully. From Mouser From DigiKey 1 Mega Protoshield OPTIONAL - If you get a Mega without headers, this is not required. The protoshield goes on top of the Mega and you can solder onto it directly. https://www.adafruit.com/product/192 2 Pump DC Motor OPTIONAL - I am using 2 of these for generating smoke from a vape pen. Tubing can be found on the same link. https://www.adafruit.com/product/4699 2 Vape Pens OPTIONAL - I am using 2 of these for generating smoke with the DC motors mentioned above. https://www.joyetech.com/product/eroll-mac/ 8 5mm LEDs OPTIONAL - I am using 3 greens, 2 reds and 3 yellows for the Cyclotron switch plate https://a.co/d/cxUqcuF https://amzn.eu/d/1bU37Od 8 Cliplites OPTIONAL - 3 greens, 2 reds and 3 yellows to hold the Cyclotron switch plate LEDs into the Cyclotron switch plate. Links to red, green and yellow ones included https://www.mouser.fr/ProductDetail/593-2800G https://www.mouser.fr/ProductDetail/593-2800R https://www.mouser.fr/ProductDetail/593-2800Y 1 NeoPixel Jewel WS2812 5050 RGB OPTIONAL - For the N-Filter light. You can find them anywhere, such as Adafruit, Mouser, etc. https://fr.aliexpress.com/item/32822441734.html 1 35 LED Pixel Ring (96mm OD) OPTIONAL - For the Inner Cyclotron. The Arduino software supports other sizes of rings. 35 pixel ring is the default and recommended to avoid altering the software. Although, configuring an alternative ring size is trivial for this particular item. Single Ring or Multi-Ring Kit 1 40 LED Pixel Ring (132mm OD) OPTIONAL - For the Cyclotron Lid, which MUST be exactly 40 pixels to fit properly behind the lenses. If you wish to purchase 1 kit for multiple uses, this contains a 112mm ring with 32 LEDs which may be a suitable for use with the Inner Cyclotron (will require a small configuration change to the software). Multi-Ring Kit 1 \u00bd Size Proto PCB Board RECOMMENDED - You can use an Adafruit one or similar from any other manufacturer. I am using a some from GeekPi. https://www.adafruit.com/product/1608 Gold Plated PCB Solderable Breadboards 2 SPST Switches OPTIONAL - I just use cheap ones from Amazon. I use these for optional switches such as the Cyclotron direction rotation switch, smoke enable switch, etc. https://www.amazon.fr/gp/product/B07RQ4ZBQJ/ https://www.amazon.com/MTS-101-Position-Miniature-Toggle-Switch/dp/B0799LBFNY/ 1 Rotary Encoder OPTIONAL - I use a standard Rotary Encoder with 24 positions. I use this instead of the HasLab one which is 5 positions I believe. I did not test out the HasLab one with my wiring, though I have no reason to believe it would not work the same. This is for the Volume control in the crank generator. https://www.adafruit.com/product/377 360 Degree Rotary Encoder Neutrona Wand Qty Desc Use Link 1 Mega2560 Pro Mini REQUIRED - Miniaturized Arduino Mega 2560 which will fit within the wand housing. Available from multiple makers, must be a 5V . https://a.co/d/0ct8tX5S https://a.co/d/09aLjFg2 https://a.co/d/0bfvLOwK Note: This component was previously an Arduino Nano but that microcontroller does not have the memory or processing power needed for the most recent software. 1 \u00bc Size Proto PCB board RECOMMENDED - I use one from Adafruit. Can be any other PCB as you see fit. https://www.adafruit.com/product/1608 Gold Plated PCB Solderable Breadboards 1 Barmeter 28 Segment Bargraph OPTIONAL - It is possible to replace the Hasbro 5 LED bargraph with a Barmeter 28 Segment Bargraph. Please note the part number: BL28Z-3005SA04Y https://www.aliexpress.us/item/3256803648954593.html 1 Adafruit 16x8 LED Matrix Driver Backpack - HT16K33 Breakout OPTIONAL - If you intend to replace the stock Hasbro bargraph with a Barmeter 28 Segment Bargraph, you will require this. https://www.adafruit.com/product/1427 2 2.9 x 9.5mm screw OPTIONAL - Used to hold the adafruit \u00bc pcb onto the 3D printed bracket. 1 M3 x 25 allen screw OPTIONAL - Used to hold the entire bracket setup and WAV Trigger onto the screw hole in the wand. 5 3mm LED Diodes OPTIONAL - If you have problems with your Hasbro bargraph LEDs, they are just standard 3mm LED diodes. https://www.amazon.com/Chanzon-100pcs-colors-Emitting-Assorted/dp/B01AUI4W5U 1 5mm Flat-Top LED OPTIONAL - For the wand barrel tip, which has a 160 degree viewing angle and is super bright. https://a.co/d/9g8nXPj 1 7mm SPST Micro Switch OPTIONAL - If you make a new wand barrel button. This can run to the SW6 JST-PH connector on the wand board https://www.amazon.fr/gp/product/B08GP7WNH8/ref=ppx_yo_dt_b_asin_title_o09_s00?ie=UTF8&psc=1 2 5mm Red LED Diodes OPTIONAL - These can be wired directly to the HAT1 and HAT2 connectors on the GPStar Neutrona Wand PCB and can be put into Hat Lights in the wand. https://a.co/d/cxUqcuF https://amzn.eu/d/1bU37Od","title":"Bill of Materials"},{"location":"DIY_BOM/#bill-of-materials","text":"This guide should provide a listing of minimal/required components as well as any optional items needed for the conversion. Note that just about everything can be sourced at Mouser or Digi-Key among usual sites such as Amazon or Adafruit . The HasLab equipment makes use of both JST-XH and JST-PH connectors, so buy accordingly for your headers and plugs if you wish to continue using the stock connectors.","title":"Bill of Materials"},{"location":"DIY_BOM/#tools-connectors","text":"These items are considered optional but useful. If you are using the ready-to-use PCBs you may only be interested in the pin crimping tool and JST connectors. Otherwise, if soldering is in your skillset you may consider the TS101 as a worthwhile upgrade for easier soldering. Desc Use Link Pin Crimping Tool Necessary for crimping wires for additional JST connectors which may be needed for optional components. https://a.co/d/3M5z2kk JST-XH Connector Set Assorted JST-XH connectors for optional components in the Proton Pack. https://a.co/d/7dkYd1O JST-PH Connector Set Pre-crimpted 2-pin connectors for optional components in the Neutrona Wand. https://a.co/d/0ckywqT or https://a.co/d/8fkU1py TS101 Soldering Iron Incredibly good and modern soldering iron. Heats up in seconds and fully customizible with auto-sleep function. Absolutely worth it for tight spaces and ease of use. Mini Electric Soldering Iron Kit TS101 Lead-free Solder You will need good quality solder and Kester makes a narrow diameter which is perfect for small spaces. Kester Lead Free Solder, 0.031\" Diameter, 0.43 oz. Solder Sucker Very helpful to clean up and desolder pins etc https://www.adafruit.com/product/1597","title":"Tools &amp; Connectors"},{"location":"DIY_BOM/#common-components","text":"Qty Desc Use Link 2 Robertsonics WAV Trigger REQUIRED - 1 for the pack and 1 for the wand. You can find these on mouser as well. From SparkFun From Amazon 2 Micro SD Cards. REQUIRED - I recommend Sandisk Extreme A1/A2 U3 V30 32GB Micro SD cards. For windows users, formatting cards as FAT32 that are larger than 32GB need to be formatted from the command prompt https://www.amazon.fr/SanDisk-Extreme-microSDXC-mobile-Performance/dp/B09X7D3Y59/ https://www.amazon.com/SanDisk-Extreme-Mobile-Gaming-microSD/dp/B089DNFTQF/ 1 FTDI Basic (5V) RECOMMENDED - Used to update the WAV Trigger firmware https://www.sparkfun.com/products/9716 1 (Package) 1n4001 Diode (10 Pack) Minimum 2 are REQUIRED, one for each vibration motor (pack and wand). Though it's good to have additional on-hand for other additions. https://www.adafruit.com/product/755 1 (Package) 100uF 16V Electrolytic Capacitors (10 Pack) (or equivalent) Minimum 3 are RECOMMENDED, one for the Power Cell, Cyclotron Lid LEDs and Wand Barrel LEDs. Though it's good to have additional on-hand for other additions. https://www.adafruit.com/product/2193 1 (Package) Resistors (Various) REQUIRED - Various resistors for the project https://www.amazon.fr/gp/product/B08FD1XVL6/ https://www.amazon.com/BOJACK-Values-Resistor-Resistors-Assortment/dp/B08FD1XVL6/ 1 (Package) NPN Bipolar Transistors (PN2222) (10 Pack) Minimum 2 are REQUIRED, one for each vibration motor (pack and wand) https://www.adafruit.com/product/756 1 (Package) Heat Shrink Tubing RECOMMENDED - To protect exposed wire soldering work. https://www.amazon.fr/gp/product/B071D7LJ31/ https://www.amazon.com/560PCS-Heat-Shrink-Tubing-Eventronic/dp/B072PCQ2LW/ - 26-22 AWG Spools of Stranded Wire RECOMMENDED - Good for making connections, extending connectors, building your hose internal wiring, etc. (various colours). Must be stranded wire for flexibility, silicone to resist heat if using heat-shrink tubing. (The 22AWG box from Amazon comes with some heat-shrink tubing and mini zip ties.) Silicone Covered Stranded-Core Wire - Adafruit 22AWG Silicone Hook Up Wire - Amazon","title":"Common Components"},{"location":"DIY_BOM/#proton-pack","text":"Qty Desc Use Link 1 Arduino Mega 2560 Rev 3 REQUIRED - You can find clones without headers, but this is what has been used successfully. From Mouser From DigiKey 1 Mega Protoshield OPTIONAL - If you get a Mega without headers, this is not required. The protoshield goes on top of the Mega and you can solder onto it directly. https://www.adafruit.com/product/192 2 Pump DC Motor OPTIONAL - I am using 2 of these for generating smoke from a vape pen. Tubing can be found on the same link. https://www.adafruit.com/product/4699 2 Vape Pens OPTIONAL - I am using 2 of these for generating smoke with the DC motors mentioned above. https://www.joyetech.com/product/eroll-mac/ 8 5mm LEDs OPTIONAL - I am using 3 greens, 2 reds and 3 yellows for the Cyclotron switch plate https://a.co/d/cxUqcuF https://amzn.eu/d/1bU37Od 8 Cliplites OPTIONAL - 3 greens, 2 reds and 3 yellows to hold the Cyclotron switch plate LEDs into the Cyclotron switch plate. Links to red, green and yellow ones included https://www.mouser.fr/ProductDetail/593-2800G https://www.mouser.fr/ProductDetail/593-2800R https://www.mouser.fr/ProductDetail/593-2800Y 1 NeoPixel Jewel WS2812 5050 RGB OPTIONAL - For the N-Filter light. You can find them anywhere, such as Adafruit, Mouser, etc. https://fr.aliexpress.com/item/32822441734.html 1 35 LED Pixel Ring (96mm OD) OPTIONAL - For the Inner Cyclotron. The Arduino software supports other sizes of rings. 35 pixel ring is the default and recommended to avoid altering the software. Although, configuring an alternative ring size is trivial for this particular item. Single Ring or Multi-Ring Kit 1 40 LED Pixel Ring (132mm OD) OPTIONAL - For the Cyclotron Lid, which MUST be exactly 40 pixels to fit properly behind the lenses. If you wish to purchase 1 kit for multiple uses, this contains a 112mm ring with 32 LEDs which may be a suitable for use with the Inner Cyclotron (will require a small configuration change to the software). Multi-Ring Kit 1 \u00bd Size Proto PCB Board RECOMMENDED - You can use an Adafruit one or similar from any other manufacturer. I am using a some from GeekPi. https://www.adafruit.com/product/1608 Gold Plated PCB Solderable Breadboards 2 SPST Switches OPTIONAL - I just use cheap ones from Amazon. I use these for optional switches such as the Cyclotron direction rotation switch, smoke enable switch, etc. https://www.amazon.fr/gp/product/B07RQ4ZBQJ/ https://www.amazon.com/MTS-101-Position-Miniature-Toggle-Switch/dp/B0799LBFNY/ 1 Rotary Encoder OPTIONAL - I use a standard Rotary Encoder with 24 positions. I use this instead of the HasLab one which is 5 positions I believe. I did not test out the HasLab one with my wiring, though I have no reason to believe it would not work the same. This is for the Volume control in the crank generator. https://www.adafruit.com/product/377 360 Degree Rotary Encoder","title":"Proton Pack"},{"location":"DIY_BOM/#neutrona-wand","text":"Qty Desc Use Link 1 Mega2560 Pro Mini REQUIRED - Miniaturized Arduino Mega 2560 which will fit within the wand housing. Available from multiple makers, must be a 5V . https://a.co/d/0ct8tX5S https://a.co/d/09aLjFg2 https://a.co/d/0bfvLOwK Note: This component was previously an Arduino Nano but that microcontroller does not have the memory or processing power needed for the most recent software. 1 \u00bc Size Proto PCB board RECOMMENDED - I use one from Adafruit. Can be any other PCB as you see fit. https://www.adafruit.com/product/1608 Gold Plated PCB Solderable Breadboards 1 Barmeter 28 Segment Bargraph OPTIONAL - It is possible to replace the Hasbro 5 LED bargraph with a Barmeter 28 Segment Bargraph. Please note the part number: BL28Z-3005SA04Y https://www.aliexpress.us/item/3256803648954593.html 1 Adafruit 16x8 LED Matrix Driver Backpack - HT16K33 Breakout OPTIONAL - If you intend to replace the stock Hasbro bargraph with a Barmeter 28 Segment Bargraph, you will require this. https://www.adafruit.com/product/1427 2 2.9 x 9.5mm screw OPTIONAL - Used to hold the adafruit \u00bc pcb onto the 3D printed bracket. 1 M3 x 25 allen screw OPTIONAL - Used to hold the entire bracket setup and WAV Trigger onto the screw hole in the wand. 5 3mm LED Diodes OPTIONAL - If you have problems with your Hasbro bargraph LEDs, they are just standard 3mm LED diodes. https://www.amazon.com/Chanzon-100pcs-colors-Emitting-Assorted/dp/B01AUI4W5U 1 5mm Flat-Top LED OPTIONAL - For the wand barrel tip, which has a 160 degree viewing angle and is super bright. https://a.co/d/9g8nXPj 1 7mm SPST Micro Switch OPTIONAL - If you make a new wand barrel button. This can run to the SW6 JST-PH connector on the wand board https://www.amazon.fr/gp/product/B08GP7WNH8/ref=ppx_yo_dt_b_asin_title_o09_s00?ie=UTF8&psc=1 2 5mm Red LED Diodes OPTIONAL - These can be wired directly to the HAT1 and HAT2 connectors on the GPStar Neutrona Wand PCB and can be put into Hat Lights in the wand. https://a.co/d/cxUqcuF https://amzn.eu/d/1bU37Od","title":"Neutrona Wand"},{"location":"DIY_FLASHING/","text":"Compiling & Flashing via IDE Setup (DIY) The custom software needed for operation must be compiled and uploaded to your devices. This guide provides the list of required libraries for compilation and outlines the changes needed to support each board. Note: This is a slightly modified version of the standard COMPILING_FLASHING guide. Supported Devices Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini . Prerequisites Download and install the Arduino IDE. This will be used to compile and upload the code to your Proton Pack and Neutrona Wand. Arduino IDE The following libraries are required to be installed. All can be found within the Arduino Library Manager with the app. Go to Sketch -> Include Library -> Manage Libraries... to access the Library Manager. Search for the libraries by name and install the latest version available. ArduinoINA219 by Flavius Bindea (1.1.1+) CRC32 by Christopher Baker (2.0.0+) digitalWriteFast by Watterott and Armin Joachimsmeyer (1.2.1+) ezButton by ArduinoGetStarted.com (1.0.6+) FastLED by Daniel Garcia (3.9.14+) Ramp by Sylvain Garnavault (0.6.3+) SafeString by Matthew Ford (4.1.39+) SerialTransfer by PowerBroker2 (3.1.4+) Simple ht16k33 Library by Ipaseen (1.0.3+) Switch by Albert van Dalen (1.2.8+) GPStar Audio Serial Library by Michael Rajotte (1.2.2+) +++ IMPORTANT WHEN FLASHING UPDATES +++ If you are flashing updates to your existing setup, make sure that both your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository. Important information for older DIY GPStar Proton Pack builds If you are compiling the code to upload to an Arduino Mega with the original GPStar home built instructions, you need to disable GPSTAR_PROTON_PACK_PCB which can be found at the very bottom of the Configuration.h of the Proton Pack. Example: //#define GPSTAR_PROTON_PACK_PCB This is a legacy flag, for people who originally put the Cyclotron Lid detection on pin 51 and not pin 43. If your Cyclotron Lid detection is on pin 51, then comment/disable this define. If your home built GPStar Proton Pack was built with pin 43 for the Cyclotron Lid detection, leave this enabled/uncommented. For compiling code on the Arduino Nano: The final release compatible with the Arduino Nano was v2.2.0 in November of 2023. Releases after this date no longer support that device due primarily to system memory limitations. Please consider migrating to the official GPStar Neutrona Wand PCB to continue to receive additional software updates for your devices. Otherwise, you must replace the Arduino Nano with a Mega 2560 Pro Mini . In other words: since the software for the pack and wand must be updated in tandem, this implies that updates cannot be made to a Proton Pack (whether DIY or PCB) without the accompanying change to the Neutrona Wand hardware. Advanced User Configurations To modify defaults within the software, please see the Advanced Configuration guide.","title":"Compiling &amp; Flashing via IDE Setup (DIY)"},{"location":"DIY_FLASHING/#compiling-flashing-via-ide-setup-diy","text":"The custom software needed for operation must be compiled and uploaded to your devices. This guide provides the list of required libraries for compilation and outlines the changes needed to support each board. Note: This is a slightly modified version of the standard COMPILING_FLASHING guide.","title":"Compiling &amp; Flashing via IDE Setup (DIY)"},{"location":"DIY_FLASHING/#supported-devices","text":"Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini .","title":"Supported Devices"},{"location":"DIY_FLASHING/#prerequisites","text":"Download and install the Arduino IDE. This will be used to compile and upload the code to your Proton Pack and Neutrona Wand. Arduino IDE The following libraries are required to be installed. All can be found within the Arduino Library Manager with the app. Go to Sketch -> Include Library -> Manage Libraries... to access the Library Manager. Search for the libraries by name and install the latest version available. ArduinoINA219 by Flavius Bindea (1.1.1+) CRC32 by Christopher Baker (2.0.0+) digitalWriteFast by Watterott and Armin Joachimsmeyer (1.2.1+) ezButton by ArduinoGetStarted.com (1.0.6+) FastLED by Daniel Garcia (3.9.14+) Ramp by Sylvain Garnavault (0.6.3+) SafeString by Matthew Ford (4.1.39+) SerialTransfer by PowerBroker2 (3.1.4+) Simple ht16k33 Library by Ipaseen (1.0.3+) Switch by Albert van Dalen (1.2.8+) GPStar Audio Serial Library by Michael Rajotte (1.2.2+)","title":"Prerequisites"},{"location":"DIY_FLASHING/#important-when-flashing-updates","text":"If you are flashing updates to your existing setup, make sure that both your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository.","title":"+++ IMPORTANT WHEN FLASHING UPDATES +++"},{"location":"DIY_FLASHING/#important-information-for-older-diy-gpstar-proton-pack-builds","text":"If you are compiling the code to upload to an Arduino Mega with the original GPStar home built instructions, you need to disable GPSTAR_PROTON_PACK_PCB which can be found at the very bottom of the Configuration.h of the Proton Pack. Example: //#define GPSTAR_PROTON_PACK_PCB This is a legacy flag, for people who originally put the Cyclotron Lid detection on pin 51 and not pin 43. If your Cyclotron Lid detection is on pin 51, then comment/disable this define. If your home built GPStar Proton Pack was built with pin 43 for the Cyclotron Lid detection, leave this enabled/uncommented.","title":"Important information for older DIY GPStar Proton Pack builds"},{"location":"DIY_FLASHING/#for-compiling-code-on-the-arduino-nano","text":"The final release compatible with the Arduino Nano was v2.2.0 in November of 2023. Releases after this date no longer support that device due primarily to system memory limitations. Please consider migrating to the official GPStar Neutrona Wand PCB to continue to receive additional software updates for your devices. Otherwise, you must replace the Arduino Nano with a Mega 2560 Pro Mini . In other words: since the software for the pack and wand must be updated in tandem, this implies that updates cannot be made to a Proton Pack (whether DIY or PCB) without the accompanying change to the Neutrona Wand hardware.","title":"For compiling code on the Arduino Nano:"},{"location":"DIY_FLASHING/#advanced-user-configurations","text":"To modify defaults within the software, please see the Advanced Configuration guide.","title":"Advanced User Configurations"},{"location":"DIY_LEGACY/","text":"GPStar DIY Arduino Build Guides Considered the \"legacy\" guide to building your own solution using the Arduino platform. Please note that the original Neutrona Wand guide used an Arduino Nano which is no longer capable of providing the storage space required by the full range of features supported and that hardware has been deprecated. In order to continue with these guides, please note that a replacement board (Mega 2560 Pro Mini) has been identified for the Neutrona Wand and MUST be used with the latest software release. This is an advanced build-out which requires opening all devices and performing a significant amount of soldering. Proceed with caution, regardless of your skillset or abilities. Bill of Materials Power Requirements Compiling and Uploading the Code GPStar Audio PCB or WAV Trigger Configuration Loading The Audio Files Audio Output Guide DIY Pack Setup - Arduino Mega 2560 R3 DIY Wand Setup - Mega 2560 Pro Mini Hose Connections","title":"Legacy DIY"},{"location":"DIY_PACK/","text":"Proton Pack Setup This guide begins with some explanations for common items you will encounter during the upgrade process. Note that if the wand electronics will be replaced it will be necessary to upgrade the hose and conductors between the pack and wand. This exercise is left to individual preferences on connectors and style of replacement, though you will need 4 conductors at a minimum (+5V, Ground, and TX/RX for communications). Component Reference A Note on Transistors Transistors will be used to allow switching high-current elements on or off. This is because the Arduino hardware recommends less than 20mA draw per pin (40mA maximum), so for items which may require more power the transistor acts as a switch to allow more current to flow through the transistor instead of the Arduino hardware. The most-used component for this build will be the 2N2222/PN2222 or NPN Bipolar Transistor (BJT). The NPN type allows the flow of power from the Collector to Emitter pin, dictated by applying power (VCC) to the Base pin. Pin Description NPN E Emitter NPN B Base NPN C Collector A Note on the Rotary Encoder Rotary encoder pin layout reference to be used for volume control. Contains pins 1-2-3 (viewed facing you, see below). HasLab Legacy Connections This chart lists only the components in the stock pack which will be reused, while others will be replaced (such as the speaker output and rotary encoder which are both soldered to the stock controller). There are several new and optional components which can be added as part of this guide. These items are expected to be implemented at a minimum for basic operation. Connector Label Header Color Wire Color Purpose Notes M1 Green Red VCC Pack vibration motor; cannot be turned on or off when pack is \"active\", only when in \"powered down\" state. (This is the only stock item which may be considered optional.) Black GND JP3 White Green B0 Power, ground, and data (DI) for Power Cell LEDs; Contains LEDs D1-D13 and returns data signal back to board via the B0 pin. Black GND Yellow DI Data input; Cyclotron LEDs continue from B0 as data on RI (unplugging JP3 will stop cycling of Cyclotron LEDs). Red VCC JP4 Red Red VCC Power, ground, and data (RI) for Cyclotron; Each \"lens\" contains 3 LEDs for a total of 12. Yellow RI Data input; starts on JP3-DI pin and continues from JP3-B0 Black GND Brown GND Used for detection of the Cyclotron Lid SW1 White Red VCC Main \"power\" switch under the Ion Arm, enables all pack operations. Black GND SW3 Blue Green SPDT Toggle Left toggle switch inside the Cyclotron: Turns rumble motor on (up) or off (down) Blue SW4 Green SPDT Toggle Right toggle switch inside the Cyclotron: Change sound theme between Afterlife (up) or 1984 (down) Red SW6 Red Red VCC Sensor on the Cyclotron cable, triggers alarm beeps when disconnected Black GND Circuit Schematic You may choose one of two routes for implementing the new Proton Pack controller: A minimal approach which only focuses on reusing the stock connections and hardware (switches, LEDs, motor). It is possible to forego replacing the microcontroller in the Hasbro wand and simply use a stock wand. This approach will provide power to the wand but no interactivity between the wand and the pack. Using all stock hardware as above, but with room for additional features, each of which is considered optional. This will provide full interaction with the new controller for the Neutrona Wand. Prototyping and Connections Use a half size protoboard like ( 1609 Adafruit ) or by any other brand. These work similar to a breadboard, where LETTERED columns run horizontal and are connected as a group, and each side contains 2 rails for (+) and (-) connections and run vertically along the board, also connected together. Connections from stock JST-XH connectors may be split to maximize use of the smallest protoboard possible. This is a non-reversible change and removes the ability to swap components without de-soldering wires. This is your last caution before proceeding! Special Component Naming Conventions Name Description 1N4001 (Diode) Use of (s) denotes the striped end (cathode) NPN [EBC] Standard PN2222 Transistor [Denotes Pin] CAP ###uf Denotes an electrolytic capacitor with given microfarad rating R ### \u03a9 Denotes a resistor with given Ohms rating SW-CYC Cyclotron Spin Direction Switch SW-SMOKE Smoke Switch (enable or disable smoke) LED-R# 2x Red LED for Cyclotron switch plate (OPTIONAL) LED-Y# 2x Yellow LED for Cyclotron switch plate (OPTIONAL) LED-G# 2x Green LED for Cyclotron switch plate (OPTIONAL) LED-MSW 1x Green LED for mode year switch (OPTIONAL) LED-VSW 1x Yellow LED for vibration switch (OPTIONAL) NEO-CYC 8 NeoPixel jewels chained together (OPTIONAL) (56 LEDs total) See Cyclotron Lights SMOKE1 This is a standard 5V Air/Vacuum pump motor I use. (see below for more info) SMOKE2 This is a standard 5V Air/Vacuum pump motor I use. (see below for more info) Regarding the smoke effects, I am using eroll mac joytech vape pen . I hook up with tubing the mini pump which is linked in the parts list . One end of the pump creates suction and sucks the smoke in, and the other end of the pump pushes the smoke out. The vape pen itself is activating when suction is applied by the motor. The vape pens are battery powered but come with a USB cable for charging, so I can feed it 5V with a USB cable directly to the pen and not have to rely on the battery it has in it. View the Smoke Kit Guide for more information on optional smoke effects. When the pump is controlled with the transistor/diode setup as in the diagrams, it is the only device which draws power from the 5V rail. CAUTION: If you implement your own smoke solution using a different design, test your setup independent of the described circuit and with adequate measurement tools to ensure you will not draw power through the Arduino! Most designs which use a vape pen (cartomizer) and mini air pump require ~3.6V to run correctly, and while less than the 5V supplied to the circuit below some solutions can require nearly 1 Amp of current to run these devices together. This can also overwhelm the 2N2222 transistor used in this schematic. By comparison, the current required for a small fan or the vibration motor are perfectly fine for the transistors as described, while the diodes prevent any backflow of current when those devices power down (but may still spin briefly). Power Connections Description BAT (+) Positive 5V from your power source. BAT (-) Ground from your 5V power source. WAND (+) Runs to your wand (5V) + power rail on the \u00bc board (see DIY Wand Guide ) WAND (-) Runs to your wand ground rail on the \u00bc board (see DIY Wand Guide ) Protoboard Layout Some connections to components will be made directly to the Arduino Mega. Please see the section below for these additional items not addressed in the layout here. An explanation of this layout can be found just below the protoboard sample photo. + - A B C D E F G H I J + - 1 Z+ Y- Z+ WAND (+) BAT (+) X+ Y- BAT (-) WAND (-) W- X+ W- 2 WavTrig (+) WavTrig (\u2010) 3 V- V- SW1 (Black) SW3 (Green) SW4 (Red) SW6 (Black) SW1 (Red) PIN 31 4 U- U- SW-CYC (Black) SW-SMOKE (Black) ROT (2) SW3 (Blue) PIN 27 5 T- T- LED-R1 (-) LED-R2 (-) LED-Y1 (-) LED-Y2 (-) SW4 (Green) PIN 25 6 S- S- LED-G1 (-) LED-G2 (-) LED-MSW (-) LED-VSW (-) SW6 (Red) PIN 23 7 Mega (+) Mega (\u2010) ROT (1) PIN 3 ROT (3) PIN 2 8 JP3 (Red) JP3 (Black) JP3 (Yellow) R 470 \u03a9 \u2194 R 470 \u03a9 PIN 53 9 JP4 (Red) JP4 (Black) JP3 (Green) JP4 (Yellow) JP4 (Brown) PIN 43 10 11 NEO-CYC (+) NEO-CYC (-) NEO-CYC (Data) R 470 \u03a9 \u2194 R 470 \u03a9 PIN 13 12 R+ 13 1N4001 (s) FAN-1 (+) R+ 1N4001 (s) M1 (Red) Q+ Q+ 14 \u2195 \u2195 15 \u2195 \u2195 16 NPN C 1N4001 FAN-1 (-) NPN C 1N4001 M1 (Black) 17 NPN B R 330 \u03a9 NPN B R 330 \u03a9 18 NPN E \u2195 P- NPN E \u2195 O- O- 19 \u2195 \u2195 P- 20 R 330 \u03a9 PIN 33 R 330 \u03a9 PIN 45 21 N+ 22 1N4001 (s) SMOKE2 (+) N+ 1N4001 (s) SMOKE1 (+) M+ M+ 23 \u2195 \u2195 24 \u2195 \u2195 25 NPN C 1N4001 SMOKE2 (-) NPN C 1N4001 SMOKE1 (-) 26 NPN B R 330 \u03a9 NPN B R 330 \u03a9 27 NPN E \u2195 L- NPN E \u2195 K- K- 28 \u2195 \u2195 L- 29 R 330 \u03a9 PIN 35 R 330 \u03a9 PIN 39 30 Recommended: Capacitors for LED \"Pixels\" To provide smooth power to certain components, it is recommended to place a small electrolytic capacitor across the positive and negative terminals for the following addressable LEDs. It is better to place this as close as possible to the component rather than on PCB when possible. Positive Capacitor Negative JP3 ( Red ) CAP 100uf JP3 (Black) JP4 ( Red ) CAP 100uf JP4 (Black) NEO-CYC (+) CAP 100uf NEO-CYC (-) Protoboard Diagram Reference and Interpretations: When you see a letter or code in a cells above, it references where component needs to be inserted or what needs to be connected there. Reference the photos below for more information. Letters should be connected together by a length of wire. These are jumper wires to provide power or ground connections to a specific row of connections on the board. They do not indicate a specific space to make the connection. Each letter should have a (+) or (-) designation to help identify it as +5V or Ground. Example #1: You see \"Z+\" in space \"+1\" (Column \"+\", Row 1) on the breadboard and again on \"B1\" (Column \"B\", Row 1). You need to connect a wire to these 2 points. In this case, the result is positive power on the \"+\" rail being delivered into all of row 1 for any connections in columns A through E. Example #2: In space \"-1\" you have a connection \"Y-\" and you need to run a wire from \"-1\" to \"F1\" on the right side of the breadboard. This will deliver ground from the \"-\" rail to columns F through J on row 1. Components will be connected in multiple adjacent spaces. Components will span rows or across the mid-gap in the board to allow one or more connections at each end. Note the arrows which will indicate the orientation (vertical or horizontal) for these items and which spaces they will span. Connections to the board will only be noted in designated spots. Example #1: In E8 is one end of a 470ohm resistor. You need to put the other end of this resistor onto F8 on the board. Resistors do not have polarity and so either end can be placed into either of the marked spaces. Example #2: In H16 is one end of a 1N4001 diode. You need to then put the STRIPED end of the diode to H13 on the board as indicated with the (s). Diodes have a polarity which affects the flow of current, so pay close attention to these markings. Example #3: In C29 is one end of a 330ohm resistor, and the other end runs vertically to C26. This is indicated by the \u2195 which shows the direction of the component. The symbol \u2194 here is used to show an item is oriented horizontally. Spaces leading with \"PIN\" indicates an Arduino connection. A length of wire (to be determined by the placement of the final switch, LED, or other component) must be soldered to the board at the designated spot and connected to the Arduino Mega at the noted pin. Example #1: G8 says PIN 53. You need to run a wire from this point to PIN 53 to the Arduino Mega. (See chart below protoboard photo.) Additional Connections to the Arduino MEGA These are connections which are not covered in the diagram above and can connect directly to the Arduino board. For the WAV Trigger these are the same connections which are used for the FTDI breakout board to program the WAV Trigger. Use pins and sockets for an easy connection to that device should a firmware upgrade be required in the future. Connection \u2192 Pin Notes MEGA TX3 \u2192 WAV Trigger RX Required for sound MEGA RX3 \u2192 WAV Trigger TX Required for sound MEGA TX2 \u2192 Wand Nano RX Optional if not replacing wand controller MEGA RX2 \u2192 Wand Nano TX Optional if not replacing wand controller SW-CYC (Red) \u2192 Pin 29 Optional, switch for Cyclotron direction SW-SMOKE (Red) \u2192 Pin 37 Optional, switch to enable smoke effects FAN-1 \u2192 Pin 33 Optional Feature Goes 5V high, is timed to go off during over heat sequence. You can hook up any device to this. I used a fan for testing purposes. What you put in this section depends on what device you hook up to the Mega if anything at all. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. SMOKE-2 \u2192 Pin 35 Optional Feature Goes 5V high, is timed to go off occasionally during the wand firing sequences. You can hook up any device to this. I used DC pump motor for drawing smoke from a e-vape pen and push it out of the booster tube. It is referenced as the smoke_booster in the pack code. See matching colour section in chart above. What you hook up here depends on what device you intend to run. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. SMOKE-1 \u2192 Pin 39 Optional Feature Goes 5V high, is timed to go off during over heat sequence and occasionally during the wand firing sequences. You can hook up any device to this. I used DC pump motor for drawing smoke from a e-vape pen and run it to the N-Filter. This is referenced as smoke_pin in the pack code. See matching colour section in chart above. What you hook up here depends on what device you intend to run. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. FAN-2 \u2192 Pin 38 Optional Feature (not shown in schematic) Goes 5V high, is timed to go off at the same time as SMOKE-2. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. N-Filter LED \u2192 Pin 46 Optional Feature (not shown in schematic) Goes 5V high, is timed to go off at the same time as SMOKE-1 and SMOKE-2. This can be used for another optional LED for the N-Filter during overheat or continuous firing. If you attach a LED to this pin, use the appropriate resistor required for the LED. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. Cyclotron Panel LEDs NOTE: If you change LED colours, use an appropriate resistor based on the forward voltage stated for the LED. The resistors referenced here are the minimum required for these particular 5mm LED diodes. You can always go up to the nearest resistor value if you do not have the specified value. For example you may use 150 if do not have any 140\u2019s in your resistor kit, and 100 instead of 90s. Most resistors are expected to be within 5% of their stated value. Connection \u2192 Pin Notes LED-R1 (+) soldered to R 140 \u03a9 \u2192 Pin 4 Optional Cyclotron panel light LED-R2 (+) soldered to R 140 \u03a9 \u2192 Pin 5 Optional Cyclotron panel light LED-Y1 (+) soldered to R 140 \u03a9 \u2192 Pin 6 Optional Cyclotron panel light LED-Y2 (+) soldered to R 140 \u03a9 \u2192 Pin 7 Optional Cyclotron panel light LED-G1 (+) soldered to R 90 \u03a9 \u2192 Pin 8 Optional Cyclotron panel light LED-G2 (+) soldered to R 90 \u03a9 \u2192 Pin 9 Optional Cyclotron panel light LED-MSW (+) soldered to R 90 \u03a9 \u2192 Pin 10 (Resistor set for Green LED) Optional mode indicator LED-VSW (+) soldered to R 140 \u03a9 \u2192 Pin 11 (Resistor set for Yellow LED) Optional vibration enabled indicator Optional Pack Upgrades The following are OPTIONAL builds for use within the Proton Pack. Cyclotron Lights N-Filter Vent Light Component Fitment Given the large spaces and \"compartments\" within the pack, finding a place for the protoboard, Arduino, WAV Trigger, audio amplifier, and battery should be no problem. Reusing the space from the old controller is ideal for the protoboard and Arduino. Most modders have found that the removal of the case for a Talencell battery allows it to fit under the original battery compartment--just use care that the sides of the batteries are covered with electrical tape and nothing can accidentally damage or short the components which may be exposed. Additionally, it's worth covering the bottom contacts on any circuit boards which are in close proximity to each other just in case shifting occurs while wearing the pack. Arduino Mega Pinout Reference","title":"Proton Pack Setup"},{"location":"DIY_PACK/#proton-pack-setup","text":"This guide begins with some explanations for common items you will encounter during the upgrade process. Note that if the wand electronics will be replaced it will be necessary to upgrade the hose and conductors between the pack and wand. This exercise is left to individual preferences on connectors and style of replacement, though you will need 4 conductors at a minimum (+5V, Ground, and TX/RX for communications).","title":"Proton Pack Setup"},{"location":"DIY_PACK/#component-reference","text":"A Note on Transistors Transistors will be used to allow switching high-current elements on or off. This is because the Arduino hardware recommends less than 20mA draw per pin (40mA maximum), so for items which may require more power the transistor acts as a switch to allow more current to flow through the transistor instead of the Arduino hardware. The most-used component for this build will be the 2N2222/PN2222 or NPN Bipolar Transistor (BJT). The NPN type allows the flow of power from the Collector to Emitter pin, dictated by applying power (VCC) to the Base pin. Pin Description NPN E Emitter NPN B Base NPN C Collector A Note on the Rotary Encoder Rotary encoder pin layout reference to be used for volume control. Contains pins 1-2-3 (viewed facing you, see below). HasLab Legacy Connections This chart lists only the components in the stock pack which will be reused, while others will be replaced (such as the speaker output and rotary encoder which are both soldered to the stock controller). There are several new and optional components which can be added as part of this guide. These items are expected to be implemented at a minimum for basic operation. Connector Label Header Color Wire Color Purpose Notes M1 Green Red VCC Pack vibration motor; cannot be turned on or off when pack is \"active\", only when in \"powered down\" state. (This is the only stock item which may be considered optional.) Black GND JP3 White Green B0 Power, ground, and data (DI) for Power Cell LEDs; Contains LEDs D1-D13 and returns data signal back to board via the B0 pin. Black GND Yellow DI Data input; Cyclotron LEDs continue from B0 as data on RI (unplugging JP3 will stop cycling of Cyclotron LEDs). Red VCC JP4 Red Red VCC Power, ground, and data (RI) for Cyclotron; Each \"lens\" contains 3 LEDs for a total of 12. Yellow RI Data input; starts on JP3-DI pin and continues from JP3-B0 Black GND Brown GND Used for detection of the Cyclotron Lid SW1 White Red VCC Main \"power\" switch under the Ion Arm, enables all pack operations. Black GND SW3 Blue Green SPDT Toggle Left toggle switch inside the Cyclotron: Turns rumble motor on (up) or off (down) Blue SW4 Green SPDT Toggle Right toggle switch inside the Cyclotron: Change sound theme between Afterlife (up) or 1984 (down) Red SW6 Red Red VCC Sensor on the Cyclotron cable, triggers alarm beeps when disconnected Black GND","title":"Component Reference"},{"location":"DIY_PACK/#circuit-schematic","text":"You may choose one of two routes for implementing the new Proton Pack controller: A minimal approach which only focuses on reusing the stock connections and hardware (switches, LEDs, motor). It is possible to forego replacing the microcontroller in the Hasbro wand and simply use a stock wand. This approach will provide power to the wand but no interactivity between the wand and the pack. Using all stock hardware as above, but with room for additional features, each of which is considered optional. This will provide full interaction with the new controller for the Neutrona Wand. Prototyping and Connections Use a half size protoboard like ( 1609 Adafruit ) or by any other brand. These work similar to a breadboard, where LETTERED columns run horizontal and are connected as a group, and each side contains 2 rails for (+) and (-) connections and run vertically along the board, also connected together. Connections from stock JST-XH connectors may be split to maximize use of the smallest protoboard possible. This is a non-reversible change and removes the ability to swap components without de-soldering wires. This is your last caution before proceeding! Special Component Naming Conventions Name Description 1N4001 (Diode) Use of (s) denotes the striped end (cathode) NPN [EBC] Standard PN2222 Transistor [Denotes Pin] CAP ###uf Denotes an electrolytic capacitor with given microfarad rating R ### \u03a9 Denotes a resistor with given Ohms rating SW-CYC Cyclotron Spin Direction Switch SW-SMOKE Smoke Switch (enable or disable smoke) LED-R# 2x Red LED for Cyclotron switch plate (OPTIONAL) LED-Y# 2x Yellow LED for Cyclotron switch plate (OPTIONAL) LED-G# 2x Green LED for Cyclotron switch plate (OPTIONAL) LED-MSW 1x Green LED for mode year switch (OPTIONAL) LED-VSW 1x Yellow LED for vibration switch (OPTIONAL) NEO-CYC 8 NeoPixel jewels chained together (OPTIONAL) (56 LEDs total) See Cyclotron Lights SMOKE1 This is a standard 5V Air/Vacuum pump motor I use. (see below for more info) SMOKE2 This is a standard 5V Air/Vacuum pump motor I use. (see below for more info) Regarding the smoke effects, I am using eroll mac joytech vape pen . I hook up with tubing the mini pump which is linked in the parts list . One end of the pump creates suction and sucks the smoke in, and the other end of the pump pushes the smoke out. The vape pen itself is activating when suction is applied by the motor. The vape pens are battery powered but come with a USB cable for charging, so I can feed it 5V with a USB cable directly to the pen and not have to rely on the battery it has in it. View the Smoke Kit Guide for more information on optional smoke effects. When the pump is controlled with the transistor/diode setup as in the diagrams, it is the only device which draws power from the 5V rail. CAUTION: If you implement your own smoke solution using a different design, test your setup independent of the described circuit and with adequate measurement tools to ensure you will not draw power through the Arduino! Most designs which use a vape pen (cartomizer) and mini air pump require ~3.6V to run correctly, and while less than the 5V supplied to the circuit below some solutions can require nearly 1 Amp of current to run these devices together. This can also overwhelm the 2N2222 transistor used in this schematic. By comparison, the current required for a small fan or the vibration motor are perfectly fine for the transistors as described, while the diodes prevent any backflow of current when those devices power down (but may still spin briefly). Power Connections Description BAT (+) Positive 5V from your power source. BAT (-) Ground from your 5V power source. WAND (+) Runs to your wand (5V) + power rail on the \u00bc board (see DIY Wand Guide ) WAND (-) Runs to your wand ground rail on the \u00bc board (see DIY Wand Guide )","title":"Circuit Schematic"},{"location":"DIY_PACK/#protoboard-layout","text":"Some connections to components will be made directly to the Arduino Mega. Please see the section below for these additional items not addressed in the layout here. An explanation of this layout can be found just below the protoboard sample photo. + - A B C D E F G H I J + - 1 Z+ Y- Z+ WAND (+) BAT (+) X+ Y- BAT (-) WAND (-) W- X+ W- 2 WavTrig (+) WavTrig (\u2010) 3 V- V- SW1 (Black) SW3 (Green) SW4 (Red) SW6 (Black) SW1 (Red) PIN 31 4 U- U- SW-CYC (Black) SW-SMOKE (Black) ROT (2) SW3 (Blue) PIN 27 5 T- T- LED-R1 (-) LED-R2 (-) LED-Y1 (-) LED-Y2 (-) SW4 (Green) PIN 25 6 S- S- LED-G1 (-) LED-G2 (-) LED-MSW (-) LED-VSW (-) SW6 (Red) PIN 23 7 Mega (+) Mega (\u2010) ROT (1) PIN 3 ROT (3) PIN 2 8 JP3 (Red) JP3 (Black) JP3 (Yellow) R 470 \u03a9 \u2194 R 470 \u03a9 PIN 53 9 JP4 (Red) JP4 (Black) JP3 (Green) JP4 (Yellow) JP4 (Brown) PIN 43 10 11 NEO-CYC (+) NEO-CYC (-) NEO-CYC (Data) R 470 \u03a9 \u2194 R 470 \u03a9 PIN 13 12 R+ 13 1N4001 (s) FAN-1 (+) R+ 1N4001 (s) M1 (Red) Q+ Q+ 14 \u2195 \u2195 15 \u2195 \u2195 16 NPN C 1N4001 FAN-1 (-) NPN C 1N4001 M1 (Black) 17 NPN B R 330 \u03a9 NPN B R 330 \u03a9 18 NPN E \u2195 P- NPN E \u2195 O- O- 19 \u2195 \u2195 P- 20 R 330 \u03a9 PIN 33 R 330 \u03a9 PIN 45 21 N+ 22 1N4001 (s) SMOKE2 (+) N+ 1N4001 (s) SMOKE1 (+) M+ M+ 23 \u2195 \u2195 24 \u2195 \u2195 25 NPN C 1N4001 SMOKE2 (-) NPN C 1N4001 SMOKE1 (-) 26 NPN B R 330 \u03a9 NPN B R 330 \u03a9 27 NPN E \u2195 L- NPN E \u2195 K- K- 28 \u2195 \u2195 L- 29 R 330 \u03a9 PIN 35 R 330 \u03a9 PIN 39 30 Recommended: Capacitors for LED \"Pixels\" To provide smooth power to certain components, it is recommended to place a small electrolytic capacitor across the positive and negative terminals for the following addressable LEDs. It is better to place this as close as possible to the component rather than on PCB when possible. Positive Capacitor Negative JP3 ( Red ) CAP 100uf JP3 (Black) JP4 ( Red ) CAP 100uf JP4 (Black) NEO-CYC (+) CAP 100uf NEO-CYC (-) Protoboard Diagram Reference and Interpretations: When you see a letter or code in a cells above, it references where component needs to be inserted or what needs to be connected there. Reference the photos below for more information. Letters should be connected together by a length of wire. These are jumper wires to provide power or ground connections to a specific row of connections on the board. They do not indicate a specific space to make the connection. Each letter should have a (+) or (-) designation to help identify it as +5V or Ground. Example #1: You see \"Z+\" in space \"+1\" (Column \"+\", Row 1) on the breadboard and again on \"B1\" (Column \"B\", Row 1). You need to connect a wire to these 2 points. In this case, the result is positive power on the \"+\" rail being delivered into all of row 1 for any connections in columns A through E. Example #2: In space \"-1\" you have a connection \"Y-\" and you need to run a wire from \"-1\" to \"F1\" on the right side of the breadboard. This will deliver ground from the \"-\" rail to columns F through J on row 1. Components will be connected in multiple adjacent spaces. Components will span rows or across the mid-gap in the board to allow one or more connections at each end. Note the arrows which will indicate the orientation (vertical or horizontal) for these items and which spaces they will span. Connections to the board will only be noted in designated spots. Example #1: In E8 is one end of a 470ohm resistor. You need to put the other end of this resistor onto F8 on the board. Resistors do not have polarity and so either end can be placed into either of the marked spaces. Example #2: In H16 is one end of a 1N4001 diode. You need to then put the STRIPED end of the diode to H13 on the board as indicated with the (s). Diodes have a polarity which affects the flow of current, so pay close attention to these markings. Example #3: In C29 is one end of a 330ohm resistor, and the other end runs vertically to C26. This is indicated by the \u2195 which shows the direction of the component. The symbol \u2194 here is used to show an item is oriented horizontally. Spaces leading with \"PIN\" indicates an Arduino connection. A length of wire (to be determined by the placement of the final switch, LED, or other component) must be soldered to the board at the designated spot and connected to the Arduino Mega at the noted pin. Example #1: G8 says PIN 53. You need to run a wire from this point to PIN 53 to the Arduino Mega. (See chart below protoboard photo.)","title":"Protoboard Layout"},{"location":"DIY_PACK/#additional-connections-to-the-arduino-mega","text":"These are connections which are not covered in the diagram above and can connect directly to the Arduino board. For the WAV Trigger these are the same connections which are used for the FTDI breakout board to program the WAV Trigger. Use pins and sockets for an easy connection to that device should a firmware upgrade be required in the future. Connection \u2192 Pin Notes MEGA TX3 \u2192 WAV Trigger RX Required for sound MEGA RX3 \u2192 WAV Trigger TX Required for sound MEGA TX2 \u2192 Wand Nano RX Optional if not replacing wand controller MEGA RX2 \u2192 Wand Nano TX Optional if not replacing wand controller SW-CYC (Red) \u2192 Pin 29 Optional, switch for Cyclotron direction SW-SMOKE (Red) \u2192 Pin 37 Optional, switch to enable smoke effects FAN-1 \u2192 Pin 33 Optional Feature Goes 5V high, is timed to go off during over heat sequence. You can hook up any device to this. I used a fan for testing purposes. What you put in this section depends on what device you hook up to the Mega if anything at all. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. SMOKE-2 \u2192 Pin 35 Optional Feature Goes 5V high, is timed to go off occasionally during the wand firing sequences. You can hook up any device to this. I used DC pump motor for drawing smoke from a e-vape pen and push it out of the booster tube. It is referenced as the smoke_booster in the pack code. See matching colour section in chart above. What you hook up here depends on what device you intend to run. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. SMOKE-1 \u2192 Pin 39 Optional Feature Goes 5V high, is timed to go off during over heat sequence and occasionally during the wand firing sequences. You can hook up any device to this. I used DC pump motor for drawing smoke from a e-vape pen and run it to the N-Filter. This is referenced as smoke_pin in the pack code. See matching colour section in chart above. What you hook up here depends on what device you intend to run. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. FAN-2 \u2192 Pin 38 Optional Feature (not shown in schematic) Goes 5V high, is timed to go off at the same time as SMOKE-2. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power. N-Filter LED \u2192 Pin 46 Optional Feature (not shown in schematic) Goes 5V high, is timed to go off at the same time as SMOKE-1 and SMOKE-2. This can be used for another optional LED for the N-Filter during overheat or continuous firing. If you attach a LED to this pin, use the appropriate resistor required for the LED. WARNING: DO NOT DRAW MORE THAN 40ma FROM A PIN. Use a transistor setup if you need more power.","title":"Additional Connections to the Arduino MEGA"},{"location":"DIY_PACK/#cyclotron-panel-leds","text":"NOTE: If you change LED colours, use an appropriate resistor based on the forward voltage stated for the LED. The resistors referenced here are the minimum required for these particular 5mm LED diodes. You can always go up to the nearest resistor value if you do not have the specified value. For example you may use 150 if do not have any 140\u2019s in your resistor kit, and 100 instead of 90s. Most resistors are expected to be within 5% of their stated value. Connection \u2192 Pin Notes LED-R1 (+) soldered to R 140 \u03a9 \u2192 Pin 4 Optional Cyclotron panel light LED-R2 (+) soldered to R 140 \u03a9 \u2192 Pin 5 Optional Cyclotron panel light LED-Y1 (+) soldered to R 140 \u03a9 \u2192 Pin 6 Optional Cyclotron panel light LED-Y2 (+) soldered to R 140 \u03a9 \u2192 Pin 7 Optional Cyclotron panel light LED-G1 (+) soldered to R 90 \u03a9 \u2192 Pin 8 Optional Cyclotron panel light LED-G2 (+) soldered to R 90 \u03a9 \u2192 Pin 9 Optional Cyclotron panel light LED-MSW (+) soldered to R 90 \u03a9 \u2192 Pin 10 (Resistor set for Green LED) Optional mode indicator LED-VSW (+) soldered to R 140 \u03a9 \u2192 Pin 11 (Resistor set for Yellow LED) Optional vibration enabled indicator","title":"Cyclotron Panel LEDs"},{"location":"DIY_PACK/#optional-pack-upgrades","text":"The following are OPTIONAL builds for use within the Proton Pack. Cyclotron Lights N-Filter Vent Light","title":"Optional Pack Upgrades"},{"location":"DIY_PACK/#component-fitment","text":"Given the large spaces and \"compartments\" within the pack, finding a place for the protoboard, Arduino, WAV Trigger, audio amplifier, and battery should be no problem. Reusing the space from the old controller is ideal for the protoboard and Arduino. Most modders have found that the removal of the case for a Talencell battery allows it to fit under the original battery compartment--just use care that the sides of the batteries are covered with electrical tape and nothing can accidentally damage or short the components which may be exposed. Additionally, it's worth covering the bottom contacts on any circuit boards which are in close proximity to each other just in case shifting occurs while wearing the pack.","title":"Component Fitment"},{"location":"DIY_PACK/#arduino-mega-pinout-reference","text":"","title":"Arduino Mega Pinout Reference"},{"location":"DIY_WAND/","text":"Neutrona Wand Setup As of November 2023 the last release to support software builds for the Arduino Nano was v2.2.0. Due to memory limitations of this device no further software updates are possible. In order to make use of this guide you will need to upgrade to either an official GPStar Neutrona Wand controller PCB or use a Mega2560 Pro Mini as linked in the DIY_BOM document. This guide begins with some explanations for common items you will encounter during the upgrade process. Note that it will be necessary to upgrade the hose and conductors between the pack and wand. This exercise is left to individual preferences on connectors and style of replacement, though you will need 4 conductors at a minimum (+5V, Ground, and TX/RX for communications). The space within the Neutrona Wand is extremely limited, though multiple components must be fit into this space. To maximize what is available, some wires from the original controller (PCB) can be directly soldered onto the microcontroller. Where resistors or inline components are required, these may be soldered between the wire and microcontroller to reduce need for an additional protoboard. If needed, a a \u00bc protoboard from Adafruit or any similar size from another manufacturer will be used. Special Cautions and Warnings You will find that the wand poses some challenges due to confined spaces and fragile wires to all the stock components. The following are suggestions to help you minimize damage to existing wiring, unless you plan to remove all the stock components and connect new wires. Remove what you can of any plastic covers over the switches internally, and use a hot glue gun to carefully drip glue over the soldered ends of the toggles, rotary encoder, and any other wire connections to reinforce them as they stand. Gently separate any wires that are bonded together, allowing about 1\" of excess for stripping. Use a mechanical wire stripper to ensure you quickly strip back the sheathing for each wire. Use silicone-coated stranded wiring (22AWG down to 26AWG) to allow for maximum flexibility. Solder on extensions to every wire in the wand and use heat-shrink tubing to reinforce extended connections to make a better bond with the stock wire to prevent breakage. Continue the extended wire to either a PCB or the microcontroller for soldering, making sure that ALL of the strands of wire make it through the holes. Twist your bare wires tightly, and you can pre-tin the ends with a bit of solder to keep everything together as you fit the wire through any PCB holes (this also works well for making breadboard connections). Optionally, this is where you may consider a full replacement of some wires if they break off at the component you are connecting. It's too easy to have some strands that get missed which could cause a short--check your connections after soldering. A magnifying glass and good lighting is your friend! Original Connection References You may wish to refer to this PCB drawing and the following table to help identify the original components in the Neutrona Wand. Wand Reference Diagrams by Tomdf Name Socket Color Hasbro Pin Notes J3 Brown D2 Bar Graph LEDs (5) Red D3 Orange D4 Yellow D5 Green D6 Blue VDD P6 Red V4.5 4.5V connection from battery compartment GND Black GND Main power ground M1 Red VCC Wand vibration motor Black GND SW1 Brown SPDT Toggle Lower Right Toggle (Main Power) Brown SW2 Red SPDT Toggle Upper Right Toggle (Bargraph Power) Red SW3 Brown V+ Rotary encoder (intensity) on top of wand Red A Orange B SW7 Orange SPST Switch Wand tip retraction/extension sensor Orange SW4 JST-PH Red SPDT Toggle Activate toggle on left control box Red SW5 JST-PH White SPST Button Intensify button on left control box White SW6 JST-PH White SPST Button Orange button at end of wand, changes modes White D1 Red VCC SLO-BLO LED Black GND NA Red VDD Power to D7 & D8 D7 White GND Top Right LED D8 Black GND Top Vent LED D9 Red VCC Clippard LED (Top Left) Yellow GND LS1 Yellow Speaker + Wire closest to barrel LED connector is Speaker + Yellow Speaker - Wire furthest from barrel LED connector is Speaker - (Important) Neutrona Wand Barrel LEDs wire colour differences. It appears some of the silver tip generation 1 Neutrona Wands and orange tip generation 2 Neutrona Wands may have different wire colour combinations for the barrel LED lights: Generation 1 (Silver tip Neutrona Wands) Name Socket Color Hasbro Pin Notes Q2 JST-PH Yellow VCC Addressable LEDs for wand tip effects (5 total) Red Data Brown GND Generation 2 (Orange tip Neutrona Wands) Name Socket Color Hasbro Pin Notes Q2 JST-PH Blue VCC Addressable LEDs for wand tip effects (5 total) Yellow Data Red GND WAV Trigger Connections These are the same connections which are used for the FTDI breakout board to program the WAV Trigger. Use pins and sockets for an easy connection should a firmware upgrade be required in the future. WAV Trigger Connection 5Vin +5V GND Ground RX PIN D14 TX PIN D15 SPKR+ Speaker + SPKR- Speaker - Mega2560 Pro Mini - Pin Reference vs. Hasbro Controller The following is a diagram of the Mega2560 Pro Mini pins from left and right, when oriented with the USB connection facing up (north). As this board has 2 rows of pins on each side it is crucial to re-check labels before connection. Please see the diagram at the bottom of the page if necessary. Please note that the Mega2560 Pro Mini uses a completely different pinout from the old Arduino Nano DIY build! Mega (L1) Mega (L2) USB Mega (R1) Mega (R2) VIN \u2192 +5V (Pack) VIN GND \u2192 Ground (Pack) GND 5V 5V 3.3V 3.3V RST AREF TX0 \u2192 RX (to Pack) RX0 \u2192 TX (to Pack) A1 \u2192 D2 (Brown) A0 \u2192 SW2 (Red) D3 \u2192 SW4 (Red) D2 \u2192 SW45 (White) A3 \u2192 D4 (Orange) A2 \u2192 D3 (Red) D5 D4 \u2192 SW1 (Brown) A5 \u2192 D6 (Green) A4 \u2192 D5 (Yellow) D7 \u2192 ROT (Yellow) D6 \u2192 ROT (Red) A7 \u2192 SW7 (Orange) A6 \u2192 SW6 (White) D9 \u2192 D9 (Red) D8 \u2192 D1 (Red) A9 A8 D11 \u2192 Motor-NPN D10 \u2192 Q2 ! (Yellow) or (Red) A11 A10 D13 \u2192 D8 (Red) D12 \u2192 D7 (Red) A13 A12 D15 \u2192 WAV Trigger TX D14 \u2192 WAV Trigger RX A15 A14 D17 D16 D33 D32 D19 D18 D35 D34 D21 D20 D37 D36 D23 D22 D39 D38 D25 D24 D41 D40 D27 D26 D43 D42 D29 D28 D45 D44 D31 D30 D47 D46 ! See note above about Barrel LED wire colour differences: Generation 1 Neutrona Wands (silver tip) data line is (Red) while generation 2 Neutrona Wands (orange tip) data line is (Yellow) Connections by Component Toggles and Buttons LOWER RIGHT TOGGLE \u2192 SW1 Mega Pin Hasbro Ref Notes Brown \u2192 Ground SW1 Shouldn\u2019t matter which wire goes where Brown \u2192 \u2192 \u2192 Pin D4 SW1 Shouldn\u2019t matter which wire goes where UPPER RIGHT TOGGLE \u2192 SW2 Mega Pin Hasbro Ref Notes Red \u2192 Ground SW2 Shouldn\u2019t matter which wire goes where Red \u2192 \u2192 \u2192 Pin A0 SW2 Shouldn\u2019t matter which wire goes where SW45/SW4 Connector: SW45 = Intensify / SW4 = Activate Mega Pin Hasbro Ref White \u2192 Ground SW45 White \u2192 \u2192 \u2192 Pin D2 SW45 Red \u2192 Ground SW4 Red \u2192 \u2192 \u2192 Pin D3 SW4 MODE SWITCH \u2192 SW6 Mega Pin Hasbro Ref White \u2192 Ground SW6 Shouldn\u2019t matter which wire goes where White \u2192 \u2192 \u2192 Pin A6 SW6 Shouldn\u2019t matter which wire goes where BARREL EXTENSION SWITCH \u2192 SW7 Mega Pin Hasbro Ref Orange \u2192 Ground SW7 Shouldn\u2019t matter which wire goes where Orange \u2192 \u2192 \u2192 Pin A7 SW7 Shouldn\u2019t matter which wire goes where The rotary encoder is similar to that used on the Proton Pack. It requires a common ground connection and sends data via the A/B signal wires to indicate which direction it was turned. ROTARY ENCODER (ROT) \u2192 SW3 Mega Pin Hasbro Ref Brown \u2192 Ground V+ Red \u2192 \u2192 \u2192 Pin D6 SW3 Orange \u2192 \u2192 \u2192 Pin D7 SW3 Motors Considered optional as this can be left out if desired, and without impact to normal operation. VIBRATION MOTOR Motor Wire Mega Pin Notes 1N4001 (s) Red +5V 1N4001 diode (s = striped end of the diode) NPN C \u2192 1N4001 Black NPN* = PN2222 NPN B \u2192 330 \u03a9 \u2192 Pin D11 NPN E \u2192 \u2192 \u2192 Ground *NPN Bipolar Transistor. Reference Pack page for more info. Hasbro Bargraph BARGRAPH \u2192 J3 Mega Pin Hasbro Ref Blue \u2192 +5V VDD Green \u2192 140 \u03a9 \u2192 Pin A5 D6 Yellow \u2192 140 \u03a9 \u2192 Pin A4 D5 Orange \u2192 140 \u03a9 \u2192 Pin A3 D4 Red \u2192 140 \u03a9 \u2192 Pin A2 D3 Brown \u2192 140 \u03a9 \u2192 Pin A1 D2 Note for Bargraph: If you want to replace LEDs, the bargraph uses 3mm LED diodes. Use the appropriate resistor for your replacement LEDs based on their forward voltage given a 5V source! Wand LEDs VENT LIGHT LED BOARD \u2192 D7 & D8 Mega Pin Hasbro Ref Red \u2192 +5V VDD White \u2192 90 \u03a9 \u2192 Pin D12 D7 Blinking white LED on top of the wand Black \u2192 90 \u03a9 \u2192 Pin D13 D8 White LED inside the wand (vent light) SLO-BLO \u2192 D1 Mega Pin Hasbro Ref Notes Red \u2192 140 \u03a9 \u2192 Pin D8 D1 Black \u2192 \u2192 \u2192 Ground D1 FRONT LEFT LED \u2192 D9 Mega Pin Hasbro Ref Notes Red \u2192 140 \u03a9 \u2192 Pin D9 D9 Yellow \u2192 \u2192 \u2192 Ground D9 Wand Barrel LEDs *See note near the top of this page about the Neutrona Wand barrel LED wire colours differences between the silver tip and orange tip Neutrona Wands* Generation 1 (Silver Tip Wands) WAND-TUBE \u2192 Q2 Mega Pin Hasbro Ref Notes Yellow \u2192 +5V Q2 Power to 5 wand LEDs \u2195 CAP 100uf Capacitor across the +/- power wires Brown \u2192 Ground Q2 Ground to 5 wand LEDs Red \u2192 470\u03a9 \u2192 Pin D10 Q2 Data input for addressing LEDs Generation 2 (Orange Tip Wands) WAND-TUBE \u2192 Q2 Mega Pin Hasbro Ref Notes Blue \u2192 +5V Q2 Power to 5 wand LEDs \u2195 CAP 100uf Capacitor across the +/- power wires Red \u2192 Ground Q2 Ground to 5 wand LEDs Yellow \u2192 470\u03a9 \u2192 Pin D10 Q2 Data input for addressing LEDs Component Fitment As noted at the start of this guide the space inside of the gun box for the wand is extremely limited. Creative placement of any protoboards, the Arduino, WAV Trigger, and speaker (if upgraded) will be left to each individual. As a matter of advice, placing the WAV Trigger under the wand barrel is an advised option with other items \"stacked\" above and beside the spring-loaded mechanism. (See the alternate component fitment section below for more information on the stacking option) For another fitment option, the WAV Trigger can also fit in the opposite half of the gun box if the barrel jack is removed--this is to avoid the spring which attaches to the wand barrel. (See the Audio Output addendum for more information on the opposite half gun box mounting solution) Audio Output Addendum Below is a view of the wand internals showing the microcontroller, a PCB for connections, and many of the wires which extend the stock wiring. This solution is using several of the included STL files: a small spacer is meant to fit under the barrel if you removed some of the plastic from the old controller mount; another 3D printed part is meant to protect the wiring from intruding on the barrel latching mechanism while still allowing the wires to connect to the barrel. And lastly, a mini USB cable has been routed through the casing to allow updating of the Arduino without removing the cover--in this case the vibration motor had already been removed to save space and make this area more accessible. Alternate component fitment This solution requires removing plastic within the wand, and printing some of the included STL mount files and stacking the PCB board then microcontroller on top of the WAV Trigger. Everything is then screwed into one of the remaining holes in the wand body. Mega2560 Pro Mini Pinout Reference","title":"Neutrona Wand Setup"},{"location":"DIY_WAND/#neutrona-wand-setup","text":"As of November 2023 the last release to support software builds for the Arduino Nano was v2.2.0. Due to memory limitations of this device no further software updates are possible. In order to make use of this guide you will need to upgrade to either an official GPStar Neutrona Wand controller PCB or use a Mega2560 Pro Mini as linked in the DIY_BOM document. This guide begins with some explanations for common items you will encounter during the upgrade process. Note that it will be necessary to upgrade the hose and conductors between the pack and wand. This exercise is left to individual preferences on connectors and style of replacement, though you will need 4 conductors at a minimum (+5V, Ground, and TX/RX for communications). The space within the Neutrona Wand is extremely limited, though multiple components must be fit into this space. To maximize what is available, some wires from the original controller (PCB) can be directly soldered onto the microcontroller. Where resistors or inline components are required, these may be soldered between the wire and microcontroller to reduce need for an additional protoboard. If needed, a a \u00bc protoboard from Adafruit or any similar size from another manufacturer will be used.","title":"Neutrona Wand Setup"},{"location":"DIY_WAND/#special-cautions-and-warnings","text":"You will find that the wand poses some challenges due to confined spaces and fragile wires to all the stock components. The following are suggestions to help you minimize damage to existing wiring, unless you plan to remove all the stock components and connect new wires. Remove what you can of any plastic covers over the switches internally, and use a hot glue gun to carefully drip glue over the soldered ends of the toggles, rotary encoder, and any other wire connections to reinforce them as they stand. Gently separate any wires that are bonded together, allowing about 1\" of excess for stripping. Use a mechanical wire stripper to ensure you quickly strip back the sheathing for each wire. Use silicone-coated stranded wiring (22AWG down to 26AWG) to allow for maximum flexibility. Solder on extensions to every wire in the wand and use heat-shrink tubing to reinforce extended connections to make a better bond with the stock wire to prevent breakage. Continue the extended wire to either a PCB or the microcontroller for soldering, making sure that ALL of the strands of wire make it through the holes. Twist your bare wires tightly, and you can pre-tin the ends with a bit of solder to keep everything together as you fit the wire through any PCB holes (this also works well for making breadboard connections). Optionally, this is where you may consider a full replacement of some wires if they break off at the component you are connecting. It's too easy to have some strands that get missed which could cause a short--check your connections after soldering. A magnifying glass and good lighting is your friend!","title":"Special Cautions and Warnings"},{"location":"DIY_WAND/#original-connection-references","text":"You may wish to refer to this PCB drawing and the following table to help identify the original components in the Neutrona Wand. Wand Reference Diagrams by Tomdf Name Socket Color Hasbro Pin Notes J3 Brown D2 Bar Graph LEDs (5) Red D3 Orange D4 Yellow D5 Green D6 Blue VDD P6 Red V4.5 4.5V connection from battery compartment GND Black GND Main power ground M1 Red VCC Wand vibration motor Black GND SW1 Brown SPDT Toggle Lower Right Toggle (Main Power) Brown SW2 Red SPDT Toggle Upper Right Toggle (Bargraph Power) Red SW3 Brown V+ Rotary encoder (intensity) on top of wand Red A Orange B SW7 Orange SPST Switch Wand tip retraction/extension sensor Orange SW4 JST-PH Red SPDT Toggle Activate toggle on left control box Red SW5 JST-PH White SPST Button Intensify button on left control box White SW6 JST-PH White SPST Button Orange button at end of wand, changes modes White D1 Red VCC SLO-BLO LED Black GND NA Red VDD Power to D7 & D8 D7 White GND Top Right LED D8 Black GND Top Vent LED D9 Red VCC Clippard LED (Top Left) Yellow GND LS1 Yellow Speaker + Wire closest to barrel LED connector is Speaker + Yellow Speaker - Wire furthest from barrel LED connector is Speaker -","title":"Original Connection References"},{"location":"DIY_WAND/#important-neutrona-wand-barrel-leds-wire-colour-differences","text":"It appears some of the silver tip generation 1 Neutrona Wands and orange tip generation 2 Neutrona Wands may have different wire colour combinations for the barrel LED lights:","title":"(Important) Neutrona Wand Barrel LEDs wire colour differences."},{"location":"DIY_WAND/#generation-1-silver-tip-neutrona-wands","text":"Name Socket Color Hasbro Pin Notes Q2 JST-PH Yellow VCC Addressable LEDs for wand tip effects (5 total) Red Data Brown GND","title":"Generation 1 (Silver tip Neutrona Wands)"},{"location":"DIY_WAND/#generation-2-orange-tip-neutrona-wands","text":"Name Socket Color Hasbro Pin Notes Q2 JST-PH Blue VCC Addressable LEDs for wand tip effects (5 total) Yellow Data Red GND","title":"Generation 2 (Orange tip Neutrona Wands)"},{"location":"DIY_WAND/#wav-trigger-connections","text":"These are the same connections which are used for the FTDI breakout board to program the WAV Trigger. Use pins and sockets for an easy connection should a firmware upgrade be required in the future. WAV Trigger Connection 5Vin +5V GND Ground RX PIN D14 TX PIN D15 SPKR+ Speaker + SPKR- Speaker -","title":"WAV Trigger Connections"},{"location":"DIY_WAND/#mega2560-pro-mini-pin-reference-vs-hasbro-controller","text":"The following is a diagram of the Mega2560 Pro Mini pins from left and right, when oriented with the USB connection facing up (north). As this board has 2 rows of pins on each side it is crucial to re-check labels before connection. Please see the diagram at the bottom of the page if necessary. Please note that the Mega2560 Pro Mini uses a completely different pinout from the old Arduino Nano DIY build! Mega (L1) Mega (L2) USB Mega (R1) Mega (R2) VIN \u2192 +5V (Pack) VIN GND \u2192 Ground (Pack) GND 5V 5V 3.3V 3.3V RST AREF TX0 \u2192 RX (to Pack) RX0 \u2192 TX (to Pack) A1 \u2192 D2 (Brown) A0 \u2192 SW2 (Red) D3 \u2192 SW4 (Red) D2 \u2192 SW45 (White) A3 \u2192 D4 (Orange) A2 \u2192 D3 (Red) D5 D4 \u2192 SW1 (Brown) A5 \u2192 D6 (Green) A4 \u2192 D5 (Yellow) D7 \u2192 ROT (Yellow) D6 \u2192 ROT (Red) A7 \u2192 SW7 (Orange) A6 \u2192 SW6 (White) D9 \u2192 D9 (Red) D8 \u2192 D1 (Red) A9 A8 D11 \u2192 Motor-NPN D10 \u2192 Q2 ! (Yellow) or (Red) A11 A10 D13 \u2192 D8 (Red) D12 \u2192 D7 (Red) A13 A12 D15 \u2192 WAV Trigger TX D14 \u2192 WAV Trigger RX A15 A14 D17 D16 D33 D32 D19 D18 D35 D34 D21 D20 D37 D36 D23 D22 D39 D38 D25 D24 D41 D40 D27 D26 D43 D42 D29 D28 D45 D44 D31 D30 D47 D46 ! See note above about Barrel LED wire colour differences: Generation 1 Neutrona Wands (silver tip) data line is (Red) while generation 2 Neutrona Wands (orange tip) data line is (Yellow)","title":"Mega2560 Pro Mini - Pin Reference vs. Hasbro Controller"},{"location":"DIY_WAND/#connections-by-component","text":"Toggles and Buttons LOWER RIGHT TOGGLE \u2192 SW1 Mega Pin Hasbro Ref Notes Brown \u2192 Ground SW1 Shouldn\u2019t matter which wire goes where Brown \u2192 \u2192 \u2192 Pin D4 SW1 Shouldn\u2019t matter which wire goes where UPPER RIGHT TOGGLE \u2192 SW2 Mega Pin Hasbro Ref Notes Red \u2192 Ground SW2 Shouldn\u2019t matter which wire goes where Red \u2192 \u2192 \u2192 Pin A0 SW2 Shouldn\u2019t matter which wire goes where SW45/SW4 Connector: SW45 = Intensify / SW4 = Activate Mega Pin Hasbro Ref White \u2192 Ground SW45 White \u2192 \u2192 \u2192 Pin D2 SW45 Red \u2192 Ground SW4 Red \u2192 \u2192 \u2192 Pin D3 SW4 MODE SWITCH \u2192 SW6 Mega Pin Hasbro Ref White \u2192 Ground SW6 Shouldn\u2019t matter which wire goes where White \u2192 \u2192 \u2192 Pin A6 SW6 Shouldn\u2019t matter which wire goes where BARREL EXTENSION SWITCH \u2192 SW7 Mega Pin Hasbro Ref Orange \u2192 Ground SW7 Shouldn\u2019t matter which wire goes where Orange \u2192 \u2192 \u2192 Pin A7 SW7 Shouldn\u2019t matter which wire goes where The rotary encoder is similar to that used on the Proton Pack. It requires a common ground connection and sends data via the A/B signal wires to indicate which direction it was turned. ROTARY ENCODER (ROT) \u2192 SW3 Mega Pin Hasbro Ref Brown \u2192 Ground V+ Red \u2192 \u2192 \u2192 Pin D6 SW3 Orange \u2192 \u2192 \u2192 Pin D7 SW3 Motors Considered optional as this can be left out if desired, and without impact to normal operation. VIBRATION MOTOR Motor Wire Mega Pin Notes 1N4001 (s) Red +5V 1N4001 diode (s = striped end of the diode) NPN C \u2192 1N4001 Black NPN* = PN2222 NPN B \u2192 330 \u03a9 \u2192 Pin D11 NPN E \u2192 \u2192 \u2192 Ground *NPN Bipolar Transistor. Reference Pack page for more info.","title":"Connections by Component"},{"location":"DIY_WAND/#hasbro-bargraph","text":"BARGRAPH \u2192 J3 Mega Pin Hasbro Ref Blue \u2192 +5V VDD Green \u2192 140 \u03a9 \u2192 Pin A5 D6 Yellow \u2192 140 \u03a9 \u2192 Pin A4 D5 Orange \u2192 140 \u03a9 \u2192 Pin A3 D4 Red \u2192 140 \u03a9 \u2192 Pin A2 D3 Brown \u2192 140 \u03a9 \u2192 Pin A1 D2 Note for Bargraph: If you want to replace LEDs, the bargraph uses 3mm LED diodes. Use the appropriate resistor for your replacement LEDs based on their forward voltage given a 5V source!","title":"Hasbro Bargraph"},{"location":"DIY_WAND/#wand-leds","text":"VENT LIGHT LED BOARD \u2192 D7 & D8 Mega Pin Hasbro Ref Red \u2192 +5V VDD White \u2192 90 \u03a9 \u2192 Pin D12 D7 Blinking white LED on top of the wand Black \u2192 90 \u03a9 \u2192 Pin D13 D8 White LED inside the wand (vent light) SLO-BLO \u2192 D1 Mega Pin Hasbro Ref Notes Red \u2192 140 \u03a9 \u2192 Pin D8 D1 Black \u2192 \u2192 \u2192 Ground D1 FRONT LEFT LED \u2192 D9 Mega Pin Hasbro Ref Notes Red \u2192 140 \u03a9 \u2192 Pin D9 D9 Yellow \u2192 \u2192 \u2192 Ground D9","title":"Wand LEDs"},{"location":"DIY_WAND/#wand-barrel-leds","text":"*See note near the top of this page about the Neutrona Wand barrel LED wire colours differences between the silver tip and orange tip Neutrona Wands* Generation 1 (Silver Tip Wands) WAND-TUBE \u2192 Q2 Mega Pin Hasbro Ref Notes Yellow \u2192 +5V Q2 Power to 5 wand LEDs \u2195 CAP 100uf Capacitor across the +/- power wires Brown \u2192 Ground Q2 Ground to 5 wand LEDs Red \u2192 470\u03a9 \u2192 Pin D10 Q2 Data input for addressing LEDs Generation 2 (Orange Tip Wands) WAND-TUBE \u2192 Q2 Mega Pin Hasbro Ref Notes Blue \u2192 +5V Q2 Power to 5 wand LEDs \u2195 CAP 100uf Capacitor across the +/- power wires Red \u2192 Ground Q2 Ground to 5 wand LEDs Yellow \u2192 470\u03a9 \u2192 Pin D10 Q2 Data input for addressing LEDs","title":"Wand Barrel LEDs"},{"location":"DIY_WAND/#component-fitment","text":"As noted at the start of this guide the space inside of the gun box for the wand is extremely limited. Creative placement of any protoboards, the Arduino, WAV Trigger, and speaker (if upgraded) will be left to each individual. As a matter of advice, placing the WAV Trigger under the wand barrel is an advised option with other items \"stacked\" above and beside the spring-loaded mechanism.","title":"Component Fitment"},{"location":"DIY_WAND/#see-the-alternate-component-fitment-section-below-for-more-information-on-the-stacking-option","text":"For another fitment option, the WAV Trigger can also fit in the opposite half of the gun box if the barrel jack is removed--this is to avoid the spring which attaches to the wand barrel.","title":"(See the alternate component fitment section below for more information on the stacking option)"},{"location":"DIY_WAND/#see-the-audio-output-addendum-for-more-information-on-the-opposite-half-gun-box-mounting-solution","text":"Audio Output Addendum Below is a view of the wand internals showing the microcontroller, a PCB for connections, and many of the wires which extend the stock wiring. This solution is using several of the included STL files: a small spacer is meant to fit under the barrel if you removed some of the plastic from the old controller mount; another 3D printed part is meant to protect the wiring from intruding on the barrel latching mechanism while still allowing the wires to connect to the barrel. And lastly, a mini USB cable has been routed through the casing to allow updating of the Arduino without removing the cover--in this case the vibration motor had already been removed to save space and make this area more accessible.","title":"(See the Audio Output addendum for more information on the opposite half gun box mounting solution)"},{"location":"DIY_WAND/#alternate-component-fitment","text":"This solution requires removing plastic within the wand, and printing some of the included STL mount files and stacking the PCB board then microcontroller on top of the WAV Trigger. Everything is then screwed into one of the remaining holes in the wand body.","title":"Alternate component fitment"},{"location":"DIY_WAND/#mega2560-pro-mini-pinout-reference","text":"","title":"Mega2560 Pro Mini Pinout Reference"},{"location":"FAQ/","text":"Frequently Asked Questions Q: Can I send you my Proton Pack and Neutrona Wand so you can modify it for me? A: Sorry, no. However, premodified wands are available every so often via the GPStar web store . Q: Can I help others install kit components or add-ons? A: Yes, if you are willing to offer your skills whether free or at-cost to assist others that is acceptable. Buyers: Please be aware that anyone performing installation work on behalf of this project is doing so as a free agent and is not associated with GPStar Technologies. This project does not warranty work performed by a 3rd party, only parts produced and shipped via agents of GPStar Technologies or Frutto Technology are warrantied in the case of manufacturing defects. Q: Does this replace everything in the pack/wand? A: This solution focuses on replacement of the microcontrollers which run the pack and wand only. It is not necessary to replace all of the switches and lights unless you truly desire to do so. Although in the case of the wand the toggle switches and every other component are attached with very thin wires, so it may be worth considering temporarily removing some items to solder better (thicker) wires to avoid breakage later. Q: What are the power requirements? A: For most every component 5V is required. We DO NOT recommend voltage higher than 5V into the VIN or barrel connector jacks on the Arduino Mega or WAV Trigger devices as they can generate quite some heat with their onboard regulators for prolonged use. A pre-regulated 5V is recommended. Total draw (amperage) depends on how many optional devices you add, but 5V at 2amps is more than enough to run various pumps, lights, etc. Please view the POWER.md guide for additional info and recommendations. Q: Is a Proton Pack required? A: No, a pack is not required for a wand-only conversion. However, please note that to run a GPStar wand board off of the Hasbro battery sled, you will need to provide your own 5V DC converter to supply regulated 5VDC to the GPStar components (see above FAQ answer). Also note that the Neutrona Wand board you receive will have the standard \"full kit\" firmware loaded. For a standalone wand build, please flash the NeutronaWand-BenchTest firmware found in the \"Extras\" folder for the wand binaries. Please see the FLASHING.md guide for information on how to flash your board. Q: Is a GPStar Neutrona Wand required? A: For a pack-only conversion a wand with a GPStar Neutrona Wand board is not required. However, a modified wand is required if you want full control of the pack from the wand. We now offer a \"Lite\" kit through Frutto Technologies which will allow an unmodified Hasbro wand to turn the Pack on and off and have the Pack respond to firing, similar to the original behavior of the stock Haslab equipment. Q: How many wires / pins are required for the connection between the Proton Pack and Neutrona Wand? A: 4 wires / pins are required (Positive, Negative, TX and RX). See the Hose Examples page for more information. Q: Running my vibration motors or any other DC motor is giving me noise on my sound output. A: It is recommended as per the schematics to move all your DC motors onto the right hand +/- rail on the 1/2 breadboard in the pack. You can also add 0.1uf ceramic capacitors across your DC motor terminals, however during testing this was not required as keeping the DC motors on a separate power rail away from the Arduino and WAV Trigger boards was more than enough to avoid any motor noise. More information can be found here if you want to learn more: Dealing with Motor Noise Q: Can this electronics setup run in any Proton Pack shell? A: In theory yes, with some minor modifications to the code depending on what type of LED setup you are using. This solution was designed primarily with the stock lights and switches in use by the Hasbro products. Q: Can I produce and sell kits for others for commercial purposes? A: Yes, the code is released under a GPLv3 License. Modifications or enhancements which may be useful to the community are encouraged to be contributed back to the original repository . Q: I have some cool ideas, can you add some custom bits in the code for me? A: Feel free to use the discussion section of the GitHub repository to talk about them. Anybody can contribute modifications or enhancements back to the repository (by use of a branch or fork) for review and final acceptance into the main branch. Q: Help, I fried my stock equipment or components! A: OK, not really a question but a common occurrence. Electrical mistakes can happen, and unfortunately there's no warranty or guarantee that this won't happen to you. The best advice is to start small and slow, checking your components work before you connect them to a soldered protoboard by use of a breadboard, first. If everything works or there are mistakes, you can hopefully catch those issues quickly before they become permanently installed. ALWAYS check your input voltages with a multimeter, and verify that you've connected any power sources to the correct device pins BEFORE you apply power. Reversing polarity is a common mistake, so use consistent colors for your positive and negative wires. It is also easy to over-power an LED, so check your resistors using a multimeter and if in doubt or short on parts use the next higher resistance than the recommended value--at the worst your LEDs will just be slightly dimmer but won't burn out. Much of this advice comes from hard-learned personal experiences--we've all been there, done that.","title":"FAQ"},{"location":"FAQ/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"FAQ/#q-can-i-send-you-my-proton-pack-and-neutrona-wand-so-you-can-modify-it-for-me","text":"A: Sorry, no. However, premodified wands are available every so often via the GPStar web store .","title":"Q: Can I send you my Proton Pack and Neutrona Wand so you can modify it for me?"},{"location":"FAQ/#q-can-i-help-others-install-kit-components-or-add-ons","text":"A: Yes, if you are willing to offer your skills whether free or at-cost to assist others that is acceptable. Buyers: Please be aware that anyone performing installation work on behalf of this project is doing so as a free agent and is not associated with GPStar Technologies. This project does not warranty work performed by a 3rd party, only parts produced and shipped via agents of GPStar Technologies or Frutto Technology are warrantied in the case of manufacturing defects.","title":"Q: Can I help others install kit components or add-ons?"},{"location":"FAQ/#q-does-this-replace-everything-in-the-packwand","text":"A: This solution focuses on replacement of the microcontrollers which run the pack and wand only. It is not necessary to replace all of the switches and lights unless you truly desire to do so. Although in the case of the wand the toggle switches and every other component are attached with very thin wires, so it may be worth considering temporarily removing some items to solder better (thicker) wires to avoid breakage later.","title":"Q: Does this replace everything in the pack/wand?"},{"location":"FAQ/#q-what-are-the-power-requirements","text":"A: For most every component 5V is required. We DO NOT recommend voltage higher than 5V into the VIN or barrel connector jacks on the Arduino Mega or WAV Trigger devices as they can generate quite some heat with their onboard regulators for prolonged use. A pre-regulated 5V is recommended. Total draw (amperage) depends on how many optional devices you add, but 5V at 2amps is more than enough to run various pumps, lights, etc. Please view the POWER.md guide for additional info and recommendations.","title":"Q: What are the power requirements?"},{"location":"FAQ/#q-is-a-proton-pack-required","text":"A: No, a pack is not required for a wand-only conversion. However, please note that to run a GPStar wand board off of the Hasbro battery sled, you will need to provide your own 5V DC converter to supply regulated 5VDC to the GPStar components (see above FAQ answer). Also note that the Neutrona Wand board you receive will have the standard \"full kit\" firmware loaded. For a standalone wand build, please flash the NeutronaWand-BenchTest firmware found in the \"Extras\" folder for the wand binaries. Please see the FLASHING.md guide for information on how to flash your board.","title":"Q: Is a Proton Pack required?"},{"location":"FAQ/#q-is-a-gpstar-neutrona-wand-required","text":"A: For a pack-only conversion a wand with a GPStar Neutrona Wand board is not required. However, a modified wand is required if you want full control of the pack from the wand. We now offer a \"Lite\" kit through Frutto Technologies which will allow an unmodified Hasbro wand to turn the Pack on and off and have the Pack respond to firing, similar to the original behavior of the stock Haslab equipment.","title":"Q: Is a GPStar Neutrona Wand required?"},{"location":"FAQ/#q-how-many-wires-pins-are-required-for-the-connection-between-the-proton-pack-and-neutrona-wand","text":"A: 4 wires / pins are required (Positive, Negative, TX and RX). See the Hose Examples page for more information.","title":"Q: How many wires / pins are required for the connection between the Proton Pack and Neutrona Wand?"},{"location":"FAQ/#q-running-my-vibration-motors-or-any-other-dc-motor-is-giving-me-noise-on-my-sound-output","text":"A: It is recommended as per the schematics to move all your DC motors onto the right hand +/- rail on the 1/2 breadboard in the pack. You can also add 0.1uf ceramic capacitors across your DC motor terminals, however during testing this was not required as keeping the DC motors on a separate power rail away from the Arduino and WAV Trigger boards was more than enough to avoid any motor noise. More information can be found here if you want to learn more: Dealing with Motor Noise","title":"Q: Running my vibration motors or any other DC motor is giving me noise on my sound output."},{"location":"FAQ/#q-can-this-electronics-setup-run-in-any-proton-pack-shell","text":"A: In theory yes, with some minor modifications to the code depending on what type of LED setup you are using. This solution was designed primarily with the stock lights and switches in use by the Hasbro products.","title":"Q: Can this electronics setup run in any Proton Pack shell?"},{"location":"FAQ/#q-can-i-produce-and-sell-kits-for-others-for-commercial-purposes","text":"A: Yes, the code is released under a GPLv3 License. Modifications or enhancements which may be useful to the community are encouraged to be contributed back to the original repository .","title":"Q: Can I produce and sell kits for others for commercial purposes?"},{"location":"FAQ/#q-i-have-some-cool-ideas-can-you-add-some-custom-bits-in-the-code-for-me","text":"A: Feel free to use the discussion section of the GitHub repository to talk about them. Anybody can contribute modifications or enhancements back to the repository (by use of a branch or fork) for review and final acceptance into the main branch.","title":"Q: I have some cool ideas, can you add some custom bits in the code for me?"},{"location":"FAQ/#q-help-i-fried-my-stock-equipment-or-components","text":"A: OK, not really a question but a common occurrence. Electrical mistakes can happen, and unfortunately there's no warranty or guarantee that this won't happen to you. The best advice is to start small and slow, checking your components work before you connect them to a soldered protoboard by use of a breadboard, first. If everything works or there are mistakes, you can hopefully catch those issues quickly before they become permanently installed. ALWAYS check your input voltages with a multimeter, and verify that you've connected any power sources to the correct device pins BEFORE you apply power. Reversing polarity is a common mistake, so use consistent colors for your positive and negative wires. It is also easy to over-power an LED, so check your resistors using a multimeter and if in doubt or short on parts use the next higher resistance than the recommended value--at the worst your LEDs will just be slightly dimmer but won't burn out. Much of this advice comes from hard-learned personal experiences--we've all been there, done that.","title":"Q: Help, I fried my stock equipment or components!"},{"location":"FLASHING/","text":"Software Flashing Guide Each supported device in the GPStar system (Proton Pack, Neutrona Wand, Attenuator, Single-shot Blaster) are separate devices and must be updated individually when software updates are available. The following guide focuses on the core system: the Proton Pack and Neutrona Wand. For updating the Attenuator (aka. Wireless Adapter) or the Single-Shot Blaster , please see their respective guides. Note that the GPStar Audio may also require updates to firmware, though this will be rare. See the SOUND guide for more information. Supported Devices Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 s1 Attenuator (Arduino Nano) Yes Yes Yes Yes Yes No 4 s1 Attenuator (ESP32) N/A N/A Yes Yes Yes Yes s1 Wireless Adapter (ESP32) N/A N/A Yes Yes Yes Yes d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). s1 These are referred to as \"Serial1\" devices as they attach to the GPStar Proton Pack PCB though they are considered separate devices and will be flashed independently. Please see the ATTENUATOR_FLASHING guide for those instructions. 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini . 4 Support for the Arduino Nano as an Attenuator controller ended as of the v6.0.0 release. That device must be replaced with an ESP-WROOM-32 module to support the later software releases. \ud83d\udcdd IMPORTANT NOTES FOR FLASHING UPDATES The same software version should be updated to ALL available devices, even if the changelog does not advertise modifications for a certain component. This ensures proper serial communication between devices. If you are flashing updates to your existing setup, make sure that BOTH your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository as found in the sounds directory. Flashing Updates After connecting your GPStar Proton Pack or Neutrona Wand board to your computer with the included FTDI to USB programming cable, download the GPStar firmware flasher from the extras folder and run the program. As of the v5.4.4 release, new versions of the flasher utilities are available and are encouraged to be used instead of any older copies. These provide more integity/size checks for selected files, ensuring you have selected a true binary file. GPStar Pack/Wand Firmware Flasher Windows (x86/x64) MacOS Intel/M1 GPStar Audio Firmware Flasher Windows (x64 only) MacOS Intel (Must enable Rosetta for Apple Silicon CPUs) GPStar ESP32 Firmware Flasher Windows (x64 only) MacOS Intel/M1 The latest pre-compiled firmware binaries can be found in the binaries folder of this repository.\\ Binaries Folder The GPStar Audio firmware binary can be found in the extras/sound/GPStar Audio folder.\\ GPStar Audio Folder When downloading the binaries via GitHub, click on the file then on the Download raw file button. It is recommended to have both the Proton Pack and Neutrona Wand on the same, latest version of their respective firmware. You can also find the latest stable versions of the Firmware and Flashing software at: https://gpstartechnologies.com/pages/support-downloads Connection to your GPStar Proton Pack and Neutrona Wand PCBs Use the included FTDI to USB programming cable that comes with the GPStar kits or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! \ud83d\udcdd Note: For the Neutrona Wand, some users have adopted use of the Hasbro Plasma Series Spengler's Neutrona Wand: Data Port Front Tube as offered by RADIsLAB, which includes a parts list for a dedicated programming cable which stay mounted inside of the device. Connection to your GPStar Audio Use the included FTDI to USB programming cable that comes with the GPStar kits or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: IMPORTANT: Beside the connection on the GPStar Audio board, there is a small black switch, move it to the LOAD position before connecting the cable. After flashing, please move the switch back to the BOOT position. Using the Flashing Software Windows Open the firmware flasher, then select the firmware from the firmware selection box then select the firmware from the firmware selection box for the GPStar board you wish to flash. Then select the PORT for the connection to your GPStar Board. Microsoft Windows users: The Default baud rate of 115200 should already be automatically selected. The PORT will be different for every user and may not look like what you see in the screenshot image. If you attempt to flash and your GPStar board can not be found, please select another PORT from the drop down menu and try again. Click on the UPLOAD button and wait for it to complete. Note: If connecting the programming cable for the first time to your computer, it may take Windows a few minutes to setup the USB/TTL drivers automatically before it start working. macOS Open the firmware flasher by double-clicking the .DMG file. This will mount a new drive for the application. Go to the mounted drive \"GPSTAR-FIRMWARE-FLASHER\" and double-click on the GPStar-Firmware-Flasher.app to start the program. Select the firmware from the firmware selection box for the GPStar board you wish to flash. Then select the PORT for the connection to your gpstar Board after connecting the gpstar board to your computer with the programming cable. The PORT will be different for every user and may not look like what you see in the screenshot image. Click on the UPLOAD button and wait for it to complete. Flashing Update Instruction Video Firmware Update Instruction Video (YouTube) (Optional) Compiling Source Code and Manually Flashing If you prefer to make adjustments to the source code configuration options instead of flashing pre-compiled binaries, refer to the Compiling and Flashing link below. Compiling and Flashing","title":"Flashing Pack/Wand Firmware"},{"location":"FLASHING/#software-flashing-guide","text":"Each supported device in the GPStar system (Proton Pack, Neutrona Wand, Attenuator, Single-shot Blaster) are separate devices and must be updated individually when software updates are available. The following guide focuses on the core system: the Proton Pack and Neutrona Wand. For updating the Attenuator (aka. Wireless Adapter) or the Single-Shot Blaster , please see their respective guides. Note that the GPStar Audio may also require updates to firmware, though this will be rare. See the SOUND guide for more information.","title":"Software Flashing Guide"},{"location":"FLASHING/#supported-devices","text":"Please refer to the table below for a list of devices and their supported software release. Controller Device v1.x v2.x v3.x v4.x v5.x v6.x GPStar Proton Pack PCB Yes Yes Yes Yes Yes Yes GPStar Neutrona Wand PCB Yes Yes Yes Yes Yes Yes d1 DIY Arduino Mega Proton Pack Yes Yes 2 Yes 3 Yes 3 Yes 3 Yes 3 d1 DIY Arduino Mega Neutrona Wand Yes Yes 2 Yes 2 Yes 2 Yes 2 Yes 2 s1 Attenuator (Arduino Nano) Yes Yes Yes Yes Yes No 4 s1 Attenuator (ESP32) N/A N/A Yes Yes Yes Yes s1 Wireless Adapter (ESP32) N/A N/A Yes Yes Yes Yes d1 These are now considered as \"legacy\" devices and have distinct end-of-life notes in later versions (see additional superscript notations). s1 These are referred to as \"Serial1\" devices as they attach to the GPStar Proton Pack PCB though they are considered separate devices and will be flashed independently. Please see the ATTENUATOR_FLASHING guide for those instructions. 2 Support for the Arduino Nano as a wand controller ended after the release of v2.2.0. That device must be replaced with a Mega 2560 Pro Mini to support the later software releases. 3 If paired with an Arduino Nano for the Neutrona Wand, this arrangement is deprecated. To continue using the DIY Arduino Mega you will need to upgrade the Neutrona Wand to use the GPStar Neutrona Wand PCB or a Mega 2560 Pro Mini . 4 Support for the Arduino Nano as an Attenuator controller ended as of the v6.0.0 release. That device must be replaced with an ESP-WROOM-32 module to support the later software releases.","title":"Supported Devices"},{"location":"FLASHING/#important-notes-for-flashing-updates","text":"The same software version should be updated to ALL available devices, even if the changelog does not advertise modifications for a certain component. This ensures proper serial communication between devices. If you are flashing updates to your existing setup, make sure that BOTH your Proton Pack and Neutrona Wand Micro SD Cards have all the latest sound effects from this repository as found in the sounds directory.","title":"\ud83d\udcdd IMPORTANT NOTES FOR FLASHING UPDATES"},{"location":"FLASHING/#flashing-updates","text":"After connecting your GPStar Proton Pack or Neutrona Wand board to your computer with the included FTDI to USB programming cable, download the GPStar firmware flasher from the extras folder and run the program. As of the v5.4.4 release, new versions of the flasher utilities are available and are encouraged to be used instead of any older copies. These provide more integity/size checks for selected files, ensuring you have selected a true binary file.","title":"Flashing Updates"},{"location":"FLASHING/#gpstar-packwand-firmware-flasher","text":"Windows (x86/x64) MacOS Intel/M1","title":"GPStar Pack/Wand Firmware Flasher"},{"location":"FLASHING/#gpstar-audio-firmware-flasher","text":"Windows (x64 only) MacOS Intel (Must enable Rosetta for Apple Silicon CPUs)","title":"GPStar Audio Firmware Flasher"},{"location":"FLASHING/#gpstar-esp32-firmware-flasher","text":"Windows (x64 only) MacOS Intel/M1 The latest pre-compiled firmware binaries can be found in the binaries folder of this repository.\\ Binaries Folder The GPStar Audio firmware binary can be found in the extras/sound/GPStar Audio folder.\\ GPStar Audio Folder When downloading the binaries via GitHub, click on the file then on the Download raw file button. It is recommended to have both the Proton Pack and Neutrona Wand on the same, latest version of their respective firmware. You can also find the latest stable versions of the Firmware and Flashing software at: https://gpstartechnologies.com/pages/support-downloads","title":"GPStar ESP32 Firmware Flasher"},{"location":"FLASHING/#connection-to-your-gpstar-proton-pack-and-neutrona-wand-pcbs","text":"Use the included FTDI to USB programming cable that comes with the GPStar kits or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! \ud83d\udcdd Note: For the Neutrona Wand, some users have adopted use of the Hasbro Plasma Series Spengler's Neutrona Wand: Data Port Front Tube as offered by RADIsLAB, which includes a parts list for a dedicated programming cable which stay mounted inside of the device.","title":"Connection to your GPStar Proton Pack and Neutrona Wand PCBs"},{"location":"FLASHING/#connection-to-your-gpstar-audio","text":"Use the included FTDI to USB programming cable that comes with the GPStar kits or use any other suitable FTDI 5V basic serial connector. The UART Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colours and notes to ensure proper orientation: IMPORTANT: Beside the connection on the GPStar Audio board, there is a small black switch, move it to the LOAD position before connecting the cable. After flashing, please move the switch back to the BOOT position.","title":"Connection to your GPStar Audio"},{"location":"FLASHING/#using-the-flashing-software","text":"","title":"Using the Flashing Software"},{"location":"FLASHING/#windows","text":"Open the firmware flasher, then select the firmware from the firmware selection box then select the firmware from the firmware selection box for the GPStar board you wish to flash. Then select the PORT for the connection to your GPStar Board. Microsoft Windows users: The Default baud rate of 115200 should already be automatically selected. The PORT will be different for every user and may not look like what you see in the screenshot image. If you attempt to flash and your GPStar board can not be found, please select another PORT from the drop down menu and try again. Click on the UPLOAD button and wait for it to complete. Note: If connecting the programming cable for the first time to your computer, it may take Windows a few minutes to setup the USB/TTL drivers automatically before it start working.","title":"Windows"},{"location":"FLASHING/#macos","text":"Open the firmware flasher by double-clicking the .DMG file. This will mount a new drive for the application. Go to the mounted drive \"GPSTAR-FIRMWARE-FLASHER\" and double-click on the GPStar-Firmware-Flasher.app to start the program. Select the firmware from the firmware selection box for the GPStar board you wish to flash. Then select the PORT for the connection to your gpstar Board after connecting the gpstar board to your computer with the programming cable. The PORT will be different for every user and may not look like what you see in the screenshot image. Click on the UPLOAD button and wait for it to complete.","title":"macOS"},{"location":"FLASHING/#flashing-update-instruction-video","text":"Firmware Update Instruction Video (YouTube)","title":"Flashing Update Instruction Video"},{"location":"FLASHING/#optional-compiling-source-code-and-manually-flashing","text":"If you prefer to make adjustments to the source code configuration options instead of flashing pre-compiled binaries, refer to the Compiling and Flashing link below. Compiling and Flashing","title":"(Optional) Compiling Source Code and Manually Flashing"},{"location":"GPSTAR_AUDIO_PCB/","text":"GPStar Audio Connection Details GPStar Audio is a polyphonic audio player capable of playing and mixing together multiple audio tracks at the same time to create a smooth, rich and fluid audio experience. Support for GPStar Audio was introduced in GPStar Proton Pack and Neutrona Wand firmware versions V5.0.0 and later. Additional information regarding firmware, speakers, amplifiers, and installation may be found on the SOUND guide . Standard Connection UART (JST-XH 6-pin) Pins Notes DTR/TX/RX/5V/GND/GND *See Below * This connection serves as the main power source and communication but it also serves as a UART programming header for software updates (optional). Connector type: 6pin JST-XH For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Proton Pack or Neutrona Wand. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! Special Connectors & Switches Label Notes BOOT/LOAD A slide switch button located next to the JST-XH 6 pin UART connector. When set to BOOT, the system will operate, however when set to LOAD, then the system enters a programming mode and allows you to flash updated firmware over the UART connection. Make sure it is set to BOOT afterwards for it to operate. SPKR-R Right Speaker output from the on-board stereo amplifier. Capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V. *See Below * Connector type: 2pin Terminal Block SPKR-L Left Speaker output from the on-board stereo amplifier. Capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V. *See Below * Connector type: 2pin Terminal Block AUX *Not labelled * The on-board stereo auxiliary headphone jack outputs stereo sound and can be fed to any type of amplifier or audio device with a 3.5mm auxiliary input port. When a cable is inserted, the system will turn off the on-board stereo amplifier and output sound from this port instead. If you are using the on-board stereo amplifier with only one speaker for a mono output setup, then connect the single speaker to either SPKR-R or to SPKR-L only. The on-board stereo amplifier is capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V from each channel. Optional Connectors Label Pins Notes ST-LINK GND/3.3V/SWCLK/SWDIO *Not Labelled * These 4 pins grouped together can be connected to a ST-LINK for debugging or as a alternative way to flash updated firmware. TX2/RX2 TX2/RX2 Alternative serial communication port used for debugging. TEST A button located on the lower right corner of the board. Pressing this button will play the first track on the Micro SD Card.","title":"GPStar Audio"},{"location":"GPSTAR_AUDIO_PCB/#standard-connection-uart-jst-xh-6-pin","text":"Pins Notes DTR/TX/RX/5V/GND/GND *See Below * This connection serves as the main power source and communication but it also serves as a UART programming header for software updates (optional). Connector type: 6pin JST-XH For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Proton Pack or Neutrona Wand. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector!","title":"Standard Connection UART (JST-XH 6-pin)"},{"location":"GPSTAR_AUDIO_PCB/#special-connectors-switches","text":"Label Notes BOOT/LOAD A slide switch button located next to the JST-XH 6 pin UART connector. When set to BOOT, the system will operate, however when set to LOAD, then the system enters a programming mode and allows you to flash updated firmware over the UART connection. Make sure it is set to BOOT afterwards for it to operate. SPKR-R Right Speaker output from the on-board stereo amplifier. Capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V. *See Below * Connector type: 2pin Terminal Block SPKR-L Left Speaker output from the on-board stereo amplifier. Capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V. *See Below * Connector type: 2pin Terminal Block AUX *Not labelled * The on-board stereo auxiliary headphone jack outputs stereo sound and can be fed to any type of amplifier or audio device with a 3.5mm auxiliary input port. When a cable is inserted, the system will turn off the on-board stereo amplifier and output sound from this port instead.","title":"Special Connectors &amp; Switches"},{"location":"GPSTAR_AUDIO_PCB/#if-you-are-using-the-on-board-stereo-amplifier-with-only-one-speaker-for-a-mono-output-setup-then-connect-the-single-speaker-to-either-spkr-r-or-to-spkr-l-only","text":"","title":"If you are using the on-board stereo amplifier with only one speaker for a mono output setup, then connect the single speaker to either SPKR-R or to SPKR-L only."},{"location":"GPSTAR_AUDIO_PCB/#the-on-board-stereo-amplifier-is-capable-of-powering-either-a-4-25w-or-8-125w-speaker-at-5v-from-each-channel","text":"","title":"The on-board stereo amplifier is capable of powering either a 4\u03a9 2.5W or 8\u03a9 1.25W speaker at 5V from each channel."},{"location":"GPSTAR_AUDIO_PCB/#optional-connectors","text":"Label Pins Notes ST-LINK GND/3.3V/SWCLK/SWDIO *Not Labelled * These 4 pins grouped together can be connected to a ST-LINK for debugging or as a alternative way to flash updated firmware. TX2/RX2 TX2/RX2 Alternative serial communication port used for debugging. TEST A button located on the lower right corner of the board. Pressing this button will play the first track on the Micro SD Card.","title":"Optional Connectors"},{"location":"GUIDE_LISTING/","text":"GPStar System Guides Introduction These are the most important guides which will get you familiar with the major components and how to update them with the latest capabilities offered by software and sound effects. This includes guides to aid you in completing the connections and installation for the GPStar Proton Pack and Neutrona Wand PCB boards. Installation Pack PCB Wand PCB Pack-Wand Hose GPStar Audio PCB Installation Videos Troubleshooting A full installation guide is available as a PDF here: GPStar Proton Pack Kit Installation Manual Maintenance These guides will help you update the software and audio files as new releases become available. Flashing Firmware Updates Loading The Audio Files By-Component Guides This section is presented in a way to offer a more complete view of what components are available (by major equipment areas), whether those components are Required R or Optional O , if choices are offerred at a specific component level. Where possible, each option will link to a related guide for more details and/or installation instructions. Proton Pack Component Option w/ Guide Power Source R TalentCell 3000mAh or 6000mAh Controller R GPStar Pack Controller or Arduino 2560 Software R Flashing the Latest Firmware Audio Board R GPStar Audio or Robertsonics WAV Trigger Speakers/Amp R Audio Output Guide Sound Effects R Loading The Audio Files Cyclotron Lid O 12/20/36-LED options Inner Cyclotron O Cake and Panel Lights N-Filter O 7-LED Vent Light Power Cell O 13 and 15-LED options Smoke Effects O Various Solutions Supported Cyclotron Bypass R* & O Bypass board for non Haslab Proton Packs Connectivity Component Option w/ Guide Wired R Pack-Wand Hose Connections Wireless O Pack Attenuator or Wireless Adapter Neutrona Wand Component Option w/ Guide Power Source R Dedicated Wand Power Source (Guide TBD) Controller R GPStar Wand Controller Software R Flashing the Latest Firmware Audio Board R GPStar Audio or Robertsonics WAV Trigger Speakers R Audio Output Guide Sound Effects O Loading The Audio Files Hat Lights O Kit option by Jonogunn Bargraph O 28-Segment or 30-Segment Vent Light O GPStar RGB Vent Lights or High Intensity option by Frutto Technology Wand Barrel O 2, 5, 49 and 50 LED options (Guide TBD) Installation, Operation, and Troubleshooting Task Guide Initial Assembly Installation Videos & Installation Guide (PDF) System Operation Equipment Operation Manual Configuration EEPROM LED/Config Menus I Need Help! Troubleshooting and Frequently Asked Questions Software Development (Advanced Topics) Task Guide Compile Software VSCode + PlatformIO Modify Software Advanced Software Configuration Upload Software Pack/Wand Flashing or Attenuator/Wireless Flashing Special/Standalone Devices Devices Guide Single-Shot Blaster Build and Operation Guide Belt Gizmo Build Guide TBD Stream Effects Build Guide TBD","title":"Introduction"},{"location":"GUIDE_LISTING/#introduction","text":"These are the most important guides which will get you familiar with the major components and how to update them with the latest capabilities offered by software and sound effects. This includes guides to aid you in completing the connections and installation for the GPStar Proton Pack and Neutrona Wand PCB boards.","title":"Introduction"},{"location":"GUIDE_LISTING/#installation","text":"Pack PCB Wand PCB Pack-Wand Hose GPStar Audio PCB Installation Videos Troubleshooting A full installation guide is available as a PDF here: GPStar Proton Pack Kit Installation Manual","title":"Installation"},{"location":"GUIDE_LISTING/#maintenance","text":"These guides will help you update the software and audio files as new releases become available. Flashing Firmware Updates Loading The Audio Files","title":"Maintenance"},{"location":"GUIDE_LISTING/#by-component-guides","text":"This section is presented in a way to offer a more complete view of what components are available (by major equipment areas), whether those components are Required R or Optional O , if choices are offerred at a specific component level. Where possible, each option will link to a related guide for more details and/or installation instructions. Proton Pack Component Option w/ Guide Power Source R TalentCell 3000mAh or 6000mAh Controller R GPStar Pack Controller or Arduino 2560 Software R Flashing the Latest Firmware Audio Board R GPStar Audio or Robertsonics WAV Trigger Speakers/Amp R Audio Output Guide Sound Effects R Loading The Audio Files Cyclotron Lid O 12/20/36-LED options Inner Cyclotron O Cake and Panel Lights N-Filter O 7-LED Vent Light Power Cell O 13 and 15-LED options Smoke Effects O Various Solutions Supported Cyclotron Bypass R* & O Bypass board for non Haslab Proton Packs Connectivity Component Option w/ Guide Wired R Pack-Wand Hose Connections Wireless O Pack Attenuator or Wireless Adapter Neutrona Wand Component Option w/ Guide Power Source R Dedicated Wand Power Source (Guide TBD) Controller R GPStar Wand Controller Software R Flashing the Latest Firmware Audio Board R GPStar Audio or Robertsonics WAV Trigger Speakers R Audio Output Guide Sound Effects O Loading The Audio Files Hat Lights O Kit option by Jonogunn Bargraph O 28-Segment or 30-Segment Vent Light O GPStar RGB Vent Lights or High Intensity option by Frutto Technology Wand Barrel O 2, 5, 49 and 50 LED options (Guide TBD) Installation, Operation, and Troubleshooting Task Guide Initial Assembly Installation Videos & Installation Guide (PDF) System Operation Equipment Operation Manual Configuration EEPROM LED/Config Menus I Need Help! Troubleshooting and Frequently Asked Questions Software Development (Advanced Topics) Task Guide Compile Software VSCode + PlatformIO Modify Software Advanced Software Configuration Upload Software Pack/Wand Flashing or Attenuator/Wireless Flashing Special/Standalone Devices Devices Guide Single-Shot Blaster Build and Operation Guide Belt Gizmo Build Guide TBD Stream Effects Build Guide TBD","title":"By-Component Guides"},{"location":"HATS/","text":"Hat Lights (Optional) The hat lights are a special add-on which replace the solid orange plastic dome on the top of the wand gun box and the orange selector switch at the end of the wand barrel. Support for both lights exists as part of the Wand PCB kit. Hatlight Kit Installation Video Hatlight Kit Installation Video (YouTube) Gun Box Hat This is the easiest of the 2 modifications to make. The orange dome (fake light) can be sanded down with a dremel, then drilled out to accommodate an orange lens. This will drill through the black plastic exterior and a portion of the clear plastic which is part of the vent light and bargraph assembly. Secure the lens using any supplied washer/nut combination. An LED can be hot-glued into the lens socket and attached to the HAT2 socket (JST-PH) on the Wand PCB. Use of a red LED with 2VDC forward voltage and 20mA current is expected. Barrel Wing Hat (+Selector Button) This is the more complex assembly as it requires replacing the stock selection switch with a new momentary pushbutton type , along with drilling out a significant portion of the barrel wing. This solution is suggested to be undertaken if also considering adding the wand-tip strobe LED as the barrel must be significantly disassembled. Removal of the inner barrel with the LEDs for the wand is crucial, as well as a black plastic sleeve which protects the wiring from the button at the end. Remove the tape from the white wires inside the barrel before beginning this work as you'll need to remove that later! Preparation begins with cutting off the top of the fake pushbutton, and removing the barrel wing screws. We won't be able to completely separate it, but we can split it apart just enough to pull out the old circuit board for the selector switch. Both of these spots can be drilled out using no more than a 1/4\" (6mm) bit. Just drill through both sides, and it's expected to drill right through the old orange button. You may have to hold the button still with some pliers while you drill. Once the holes are drilled, you can widen the holes on the underside to fit the nuts for your orange lens and new momentery pushbutton. This will also allow more access to remove debris from inside the barrel and pull the thin white wires. Insert your orange lens and pushbutton from the top, and secure using their respective washer/nut combo as needed from below. It is necessary to solder on the wires for the pushbutton before installation! A drop of CA glue can help hold items in place while you add the securing nut. Once installed, it is suggested to test that you have continuity from the pushbutton wires when the button is depressed, and connect your LED and check that it both fits and illuminates from the wand PCB. Fill the orange lens with hot glue and press the LED into the socket to hold it. This will be permanent once the glue hardens, so adjustment is key! Back-fill with hot glue to keep wiring in place and secured to the back of the barrel wing. You will need to drill a small hole for the wires to enter the gun barrel just where the grip meets the wand end. To run the wires back to the gun box you can use the internal space under the existing grip, inside the barrel which will be protected by the inner sleeve. Removing the fake rubber wires will give you a location for the wires to exit the grip and re-enter the gun box. To match the original Afterlife aesthetic, wrapping in black electrical tape will complete the look and keep the wiring protected. The wiring in the gun box will need to cross from one side to the other. Making a small notch in the plastic in what would be above the barrel, the wiring can be run in that space to reach the PCB. Connect to the HAT1 and SW6 sockets using JST-PH connectors. To finish off the barrel wing look and hide the wiring, use of 1.5\" marine-grade heatshrink tubing can be used to cover the entire plastic assembly. This is similar in appearance to the Afterlife wand serving both aesthetic and functional uses.","title":"Hatlights"},{"location":"HATS/#hat-lights-optional","text":"The hat lights are a special add-on which replace the solid orange plastic dome on the top of the wand gun box and the orange selector switch at the end of the wand barrel. Support for both lights exists as part of the Wand PCB kit.","title":"Hat Lights (Optional)"},{"location":"HATS/#hatlight-kit-installation-video","text":"Hatlight Kit Installation Video (YouTube)","title":"Hatlight Kit Installation Video"},{"location":"HATS/#gun-box-hat","text":"This is the easiest of the 2 modifications to make. The orange dome (fake light) can be sanded down with a dremel, then drilled out to accommodate an orange lens. This will drill through the black plastic exterior and a portion of the clear plastic which is part of the vent light and bargraph assembly. Secure the lens using any supplied washer/nut combination. An LED can be hot-glued into the lens socket and attached to the HAT2 socket (JST-PH) on the Wand PCB. Use of a red LED with 2VDC forward voltage and 20mA current is expected.","title":"Gun Box Hat"},{"location":"HATS/#barrel-wing-hat-selector-button","text":"This is the more complex assembly as it requires replacing the stock selection switch with a new momentary pushbutton type , along with drilling out a significant portion of the barrel wing. This solution is suggested to be undertaken if also considering adding the wand-tip strobe LED as the barrel must be significantly disassembled. Removal of the inner barrel with the LEDs for the wand is crucial, as well as a black plastic sleeve which protects the wiring from the button at the end. Remove the tape from the white wires inside the barrel before beginning this work as you'll need to remove that later! Preparation begins with cutting off the top of the fake pushbutton, and removing the barrel wing screws. We won't be able to completely separate it, but we can split it apart just enough to pull out the old circuit board for the selector switch. Both of these spots can be drilled out using no more than a 1/4\" (6mm) bit. Just drill through both sides, and it's expected to drill right through the old orange button. You may have to hold the button still with some pliers while you drill. Once the holes are drilled, you can widen the holes on the underside to fit the nuts for your orange lens and new momentery pushbutton. This will also allow more access to remove debris from inside the barrel and pull the thin white wires. Insert your orange lens and pushbutton from the top, and secure using their respective washer/nut combo as needed from below. It is necessary to solder on the wires for the pushbutton before installation! A drop of CA glue can help hold items in place while you add the securing nut. Once installed, it is suggested to test that you have continuity from the pushbutton wires when the button is depressed, and connect your LED and check that it both fits and illuminates from the wand PCB. Fill the orange lens with hot glue and press the LED into the socket to hold it. This will be permanent once the glue hardens, so adjustment is key! Back-fill with hot glue to keep wiring in place and secured to the back of the barrel wing. You will need to drill a small hole for the wires to enter the gun barrel just where the grip meets the wand end. To run the wires back to the gun box you can use the internal space under the existing grip, inside the barrel which will be protected by the inner sleeve. Removing the fake rubber wires will give you a location for the wires to exit the grip and re-enter the gun box. To match the original Afterlife aesthetic, wrapping in black electrical tape will complete the look and keep the wiring protected. The wiring in the gun box will need to cross from one side to the other. Making a small notch in the plastic in what would be above the barrel, the wiring can be run in that space to reach the PCB. Connect to the HAT1 and SW6 sockets using JST-PH connectors. To finish off the barrel wing look and hide the wiring, use of 1.5\" marine-grade heatshrink tubing can be used to cover the entire plastic assembly. This is similar in appearance to the Afterlife wand serving both aesthetic and functional uses.","title":"Barrel Wing Hat (+Selector Button)"},{"location":"HOSE/","text":"Pack-Wand Hose Replacement In order to deliver both power and data signals to the wand, a new set of cabling is required. As wiring is typically desired to remain internal to the hose the following approaches have been used to replace the stock 2-wire (power-only) hose with a new 4-wire solution. The existing wire loom (black hose) can be reused if desired, or replaced with a more flexible brand. DIY Hose Example #1 The following parts are utilized: 1 - CNLINKO 4-Pin Connector - Connector for the pack which uses a square connector roughly the size of the stock connection 1 - Neutrik NL4FX 4-Pole Locking speakON Cable Connector - This is the connector at the wand end of the hose 1 - Neutrik NL4MP 4-Pole speakON Panel Mount - This is the socket for the wand itself Installation For the CNLINKO, the receptacle on the pack uses soldered ports for a secure connection. To attach the panel connector to the pack you may need to start with the screws fully inserted into the socket holes along the outside and angled into the existing pack holes. Begin tightening in increments around the connector and it will be held fast to the pack. These connectors have numbered sockets which must follow a certain pattern. The exact color used here doesn't matter so much as the order on each side, and where those pins connect internally: 1 -> 5V Positive 2 -> Connects to Pack RX 3 -> Connects to Pack TX 4 -> Ground The Neutrik connectors have # markings on them and must be matched on each side. Whatever color is used for the corresponding connection to the CNLINKO should be carried forward to the speakON cable connector. +1 -> 5V Positive -1 -> Ground +2 -> Wand RX (from Pack TX) -2 -> Wand TX (from Pack RX) The socket for the wand is a panel connector which has 4 screw holes which must be sanded off. This can be done with a belt sander or hand sander. A 3D printed adapter is furnished with kits to allow the socket to be secured using the existing screw base for the original battery pack. The speakON connector uses a twist-lock mechanism for a secure fit to the panel socket and 3D printed adapter. This can be painted a color of your choice (eg. silver) prior to installation. The speakON panel connector, like the pack connection, uses a soldered connection to secure the wires. Both connections at each end of the wand will use screw terminals to attach the wiring. DIY Hose Example #2 This approach uses parts which are slightly more accurate to the movie pack, though they may be more difficult to obtain. More work is needed to convert these to HasLab use. 1 - Amphenol MS3106A14S-2P (4 pin) 1 - Amphenol MS3102A14S-2S (4 pin) 3/4 inch splitless loom (you can find this at almost any hardware store) Black electrical tape 1 - Neutrik NAC3FX-W (discontinued, see below) 1 - Neutrik NL4FC 1 - Neutrik NL4MP-ST In this example, I use 4 pin Amphenol connectors. The 4 pin version is slightly smaller than the 16s versions, however it does still work. You will need to enlarge the holes on the pack side Amphenol connector. I used the reamer on a swiss knife and slowly enlarged it until all 4 screws can bolt onto the pack. Take your time and go slow. You also need to remove some plastic in the center of the pack hole for the connector to slide on. After feeding the 4 wires running from the wand to the pack connector through both ends of the 3/4 inch splitless loom, solder the wires onto the appropriate ends on the connector. On the wand side, this uses a modified Neutrik NAC3FX-W connector. This is a 3 pin connector, but you can take it apart and use the 4 pin internals of the NL4FC which is a 4 pin connector. The NAC3FX-W is discontinued, so if you cannot find one, you can just use the NL4FC instead and not have to modify anything. I use black electrical tape to secure the 3/4 splitless wire loom to the Neutrik connector on the Neutrona Wand side and the Amphenol connector on the Proton Pack side. Provided in the wand STL folder is a printable connector which threads into the handle of the Hasbro Neutrona Wand. With this connector, you can shave down the square corners of the 4 pin Neutrik NL4MP-ST connector so it is round, and it can slide into the 3D printable connector. I then screw the 3D printable connector into the wand handle and make a mark on the bottom side of it. I remove the connector and make a hole in it. I then use a M3x5 hex socket screw (or which ever set screw you want to use) to secure the Neutrik NL4MP-ST connector into the Neutrona Wand handle. READ BELOW IF USING A MODIFIED NAC3FX-W with a NL4FC. If you are using the NAC3FX-W with the NL4FC internals, you will need to slightly modify it. In the photo below, the 3-pin NAC3FX-W internal piece is on the left. On the right is the NL4FC 4-pin internal piece that needs to be modified to work correctly inside the NAC3FX-W shell. You have to grind off some of the indicated plastic on the NL4FC internal piece on the right. Compared to the NAC3FX-W on the left, the tab sits too high, which blocks it from going all the way into the NAC3FX-W shell. A small plastic tab needs to be removed. If you are using the NL4FC shell and not the NAC3FX-W, then you can ignore this. Quick Tip For any case where the bare wires cannot be clamped down into the screw terminals tightly, it will be necessary to use Wire Ferrules on the ends of the wires to increase the surface area to clamp. Many users of the GPStar kits have reported improved success in keeping their electrical connections stable once they crimped on ferrules to their power and serial data wires. Crimping kits can be found on Amazon for $25-40, though as an alternative you can fold over the wire and apply solder to help bulk up the connection. As of May 2024 all kits will come pre-crimped for the hose connections.","title":"Pack-Wand Hose"},{"location":"HOSE/#pack-wand-hose-replacement","text":"In order to deliver both power and data signals to the wand, a new set of cabling is required. As wiring is typically desired to remain internal to the hose the following approaches have been used to replace the stock 2-wire (power-only) hose with a new 4-wire solution. The existing wire loom (black hose) can be reused if desired, or replaced with a more flexible brand.","title":"Pack-Wand Hose Replacement"},{"location":"HOSE/#diy-hose-example-1","text":"The following parts are utilized: 1 - CNLINKO 4-Pin Connector - Connector for the pack which uses a square connector roughly the size of the stock connection 1 - Neutrik NL4FX 4-Pole Locking speakON Cable Connector - This is the connector at the wand end of the hose 1 - Neutrik NL4MP 4-Pole speakON Panel Mount - This is the socket for the wand itself","title":"DIY Hose Example #1"},{"location":"HOSE/#installation","text":"For the CNLINKO, the receptacle on the pack uses soldered ports for a secure connection. To attach the panel connector to the pack you may need to start with the screws fully inserted into the socket holes along the outside and angled into the existing pack holes. Begin tightening in increments around the connector and it will be held fast to the pack. These connectors have numbered sockets which must follow a certain pattern. The exact color used here doesn't matter so much as the order on each side, and where those pins connect internally: 1 -> 5V Positive 2 -> Connects to Pack RX 3 -> Connects to Pack TX 4 -> Ground The Neutrik connectors have # markings on them and must be matched on each side. Whatever color is used for the corresponding connection to the CNLINKO should be carried forward to the speakON cable connector. +1 -> 5V Positive -1 -> Ground +2 -> Wand RX (from Pack TX) -2 -> Wand TX (from Pack RX) The socket for the wand is a panel connector which has 4 screw holes which must be sanded off. This can be done with a belt sander or hand sander. A 3D printed adapter is furnished with kits to allow the socket to be secured using the existing screw base for the original battery pack. The speakON connector uses a twist-lock mechanism for a secure fit to the panel socket and 3D printed adapter. This can be painted a color of your choice (eg. silver) prior to installation. The speakON panel connector, like the pack connection, uses a soldered connection to secure the wires. Both connections at each end of the wand will use screw terminals to attach the wiring.","title":"Installation"},{"location":"HOSE/#diy-hose-example-2","text":"This approach uses parts which are slightly more accurate to the movie pack, though they may be more difficult to obtain. More work is needed to convert these to HasLab use. 1 - Amphenol MS3106A14S-2P (4 pin) 1 - Amphenol MS3102A14S-2S (4 pin) 3/4 inch splitless loom (you can find this at almost any hardware store) Black electrical tape 1 - Neutrik NAC3FX-W (discontinued, see below) 1 - Neutrik NL4FC 1 - Neutrik NL4MP-ST In this example, I use 4 pin Amphenol connectors. The 4 pin version is slightly smaller than the 16s versions, however it does still work. You will need to enlarge the holes on the pack side Amphenol connector. I used the reamer on a swiss knife and slowly enlarged it until all 4 screws can bolt onto the pack. Take your time and go slow. You also need to remove some plastic in the center of the pack hole for the connector to slide on. After feeding the 4 wires running from the wand to the pack connector through both ends of the 3/4 inch splitless loom, solder the wires onto the appropriate ends on the connector. On the wand side, this uses a modified Neutrik NAC3FX-W connector. This is a 3 pin connector, but you can take it apart and use the 4 pin internals of the NL4FC which is a 4 pin connector. The NAC3FX-W is discontinued, so if you cannot find one, you can just use the NL4FC instead and not have to modify anything. I use black electrical tape to secure the 3/4 splitless wire loom to the Neutrik connector on the Neutrona Wand side and the Amphenol connector on the Proton Pack side. Provided in the wand STL folder is a printable connector which threads into the handle of the Hasbro Neutrona Wand. With this connector, you can shave down the square corners of the 4 pin Neutrik NL4MP-ST connector so it is round, and it can slide into the 3D printable connector. I then screw the 3D printable connector into the wand handle and make a mark on the bottom side of it. I remove the connector and make a hole in it. I then use a M3x5 hex socket screw (or which ever set screw you want to use) to secure the Neutrik NL4MP-ST connector into the Neutrona Wand handle. READ BELOW IF USING A MODIFIED NAC3FX-W with a NL4FC. If you are using the NAC3FX-W with the NL4FC internals, you will need to slightly modify it. In the photo below, the 3-pin NAC3FX-W internal piece is on the left. On the right is the NL4FC 4-pin internal piece that needs to be modified to work correctly inside the NAC3FX-W shell. You have to grind off some of the indicated plastic on the NL4FC internal piece on the right. Compared to the NAC3FX-W on the left, the tab sits too high, which blocks it from going all the way into the NAC3FX-W shell. A small plastic tab needs to be removed. If you are using the NL4FC shell and not the NAC3FX-W, then you can ignore this.","title":"DIY Hose Example #2"},{"location":"HOSE/#quick-tip","text":"For any case where the bare wires cannot be clamped down into the screw terminals tightly, it will be necessary to use Wire Ferrules on the ends of the wires to increase the surface area to clamp. Many users of the GPStar kits have reported improved success in keeping their electrical connections stable once they crimped on ferrules to their power and serial data wires. Crimping kits can be found on Amazon for $25-40, though as an alternative you can fold over the wire and apply solder to help bulk up the connection. As of May 2024 all kits will come pre-crimped for the hose connections.","title":"Quick Tip"},{"location":"INSTALL_VIDEOS_JONOGUNN/","text":"GPStar Install Videos These videos have been created by community members to help you better install your equipment through visual instruction. We love the dedication and effort from our users so we have curated them here for easy access. Please consider a like and subscription if you enjoy their content! Jonathan Gunn GPStar Proton Pack & Neutrona Wand Installation Guide Video (Jul 13, 2024) Updated: GPStar Essential Kit Wand Install Video (May 30, 2025) Updated: GPStar Supreme Kit Wand Install Video (May 30, 2025)","title":"Jonogunn"},{"location":"INSTALL_VIDEOS_JONOGUNN/#jonathan-gunn","text":"GPStar Proton Pack & Neutrona Wand Installation Guide Video (Jul 13, 2024) Updated: GPStar Essential Kit Wand Install Video (May 30, 2025) Updated: GPStar Supreme Kit Wand Install Video (May 30, 2025)","title":"Jonathan Gunn"},{"location":"INSTALL_VIDEOS_NORCALGB/","text":"GPStar Install Videos These videos have been created by community members to help you better install your equipment through visual instruction. We love the dedication and effort from our users so we have curated them here for easy access. Please consider a like and subscription if you enjoy their content! North California Ghostbusters (Chris and Greg) How To Install GPStar's Haslab Proton Pack Kit - Part 1 (Feb 7, 2025) How To Install GPStar's Hasbro Neutrona Wand Kit - Part 2 (Feb 14, 2025) How To Install GPStar's Haslab Proton Pack 1984 Power Cell & Lens - Part 3 (Feb 21, 2025) How To Install GPStar's Haslab Proton Pack Cyclotron LED Lights - Part 4 (Feb 28, 2025) How To Install GPStar's Haslab Proton Pack Inner Cyclotron LED + Panel Lights - Part 5 (Mar 14, 2025) How To Install GPStar's Proton Pack Wireless Kit (Apr 18, 2025)","title":"Nor-Cal GB"},{"location":"INSTALL_VIDEOS_NORCALGB/#north-california-ghostbusters-chris-and-greg","text":"How To Install GPStar's Haslab Proton Pack Kit - Part 1 (Feb 7, 2025) How To Install GPStar's Hasbro Neutrona Wand Kit - Part 2 (Feb 14, 2025) How To Install GPStar's Haslab Proton Pack 1984 Power Cell & Lens - Part 3 (Feb 21, 2025) How To Install GPStar's Haslab Proton Pack Cyclotron LED Lights - Part 4 (Feb 28, 2025) How To Install GPStar's Haslab Proton Pack Inner Cyclotron LED + Panel Lights - Part 5 (Mar 14, 2025) How To Install GPStar's Proton Pack Wireless Kit (Apr 18, 2025)","title":"North California Ghostbusters (Chris and Greg)"},{"location":"NFILTER/","text":"N-Filter Vent Light (Optional) Written in the code is support for chaining 1 NeoPixel Jewel off the last LED in the Cyclotron Lid (see photos below) ( NOTE: This can be chained off any addressable LEDs, for example if you add a NeoPixel ring in your Cyclotron Lid ). This NeoPixel jewel is timed to go off during overheating or anytime the pack is activating the smoke pins. To access the Cyclotron LED, you will have to take apart the Cyclotron Lid. There are several plastic tabs that are glued. When taking apart the lid, you will end up either breaking the tabs or the glue bonds. KEEP THIS IN MIND IF YOU DO THIS MOD. The trick to taking apart the lid to break the tabs or glue bonds is using 2 flathead screw drivers, work your way around the lid seam, until you reach a pin, then slightly force it up/pry slightly to break the pin or glue bond. You only want to pry/lift up when you get to a pin. Take your time and go easy. When you eventually access LED #4 (see photos below), you want to solder wires from the 5V out, GND Out and OUT pin onto the 5V IN, GND IN and IN pin on the NeoPixel Jewel. In the photos below, my red wire is GROUND, middle yellow wire is the OUT signal wire, and the outer yellow wire is 5V out. (Cyclotron Lid LED I wire into to connect to the NeoPixel jewel) Note that the lid can be pressed fit back together and stay in place, no glue required as the N-Filter keeps/holds it together. If you replace the Cyclotron LEDs with for example a NeoPixel ring, you can chain the N-Filter NeoPixel jewel from that. N-Filter Disassembly (Optional) You can run the wires from this jewel around the lid and into the N-Filter. I used velcro to hold the jewel inside the N-Filter. The N-Filter cap can be removed, there is 1 screw on the backside holding the cap together plus lots of glue around the outside seam of the cap on the N-Filter. I used a shaving razor blade and worked it around the seam of the N-Filter cap, scraping all the glue off. Take your time, this is a lengthy process. Finally there is glue in the inner post where the screw for the N-Filter screws into. You have to twist and pull gently on the N-Filter cap to break this bond. Take your time. I found taking the lid apart to remove the N-Filter unit made it easier to to remove the glue on the N-Filter cap. NOTE: The single screw holding the N-Filter together keeps the cap from coming off when you re-assemble it, however the glue bonds that you remove keep the cap from wiggling/moving. The screw alone does not keep it tight together. If you wand a clean tight fit again, you will need to re-glue the cap back on the N-Filter. KEEP THIS IN MIND IF YOU DO THIS MOD.","title":"N-Filter"},{"location":"NFILTER/#n-filter-vent-light-optional","text":"Written in the code is support for chaining 1 NeoPixel Jewel off the last LED in the Cyclotron Lid (see photos below) ( NOTE: This can be chained off any addressable LEDs, for example if you add a NeoPixel ring in your Cyclotron Lid ). This NeoPixel jewel is timed to go off during overheating or anytime the pack is activating the smoke pins. To access the Cyclotron LED, you will have to take apart the Cyclotron Lid. There are several plastic tabs that are glued. When taking apart the lid, you will end up either breaking the tabs or the glue bonds. KEEP THIS IN MIND IF YOU DO THIS MOD. The trick to taking apart the lid to break the tabs or glue bonds is using 2 flathead screw drivers, work your way around the lid seam, until you reach a pin, then slightly force it up/pry slightly to break the pin or glue bond. You only want to pry/lift up when you get to a pin. Take your time and go easy. When you eventually access LED #4 (see photos below), you want to solder wires from the 5V out, GND Out and OUT pin onto the 5V IN, GND IN and IN pin on the NeoPixel Jewel. In the photos below, my red wire is GROUND, middle yellow wire is the OUT signal wire, and the outer yellow wire is 5V out. (Cyclotron Lid LED I wire into to connect to the NeoPixel jewel) Note that the lid can be pressed fit back together and stay in place, no glue required as the N-Filter keeps/holds it together. If you replace the Cyclotron LEDs with for example a NeoPixel ring, you can chain the N-Filter NeoPixel jewel from that.","title":"N-Filter Vent Light (Optional)"},{"location":"NFILTER/#n-filter-disassembly-optional","text":"You can run the wires from this jewel around the lid and into the N-Filter. I used velcro to hold the jewel inside the N-Filter. The N-Filter cap can be removed, there is 1 screw on the backside holding the cap together plus lots of glue around the outside seam of the cap on the N-Filter. I used a shaving razor blade and worked it around the seam of the N-Filter cap, scraping all the glue off. Take your time, this is a lengthy process. Finally there is glue in the inner post where the screw for the N-Filter screws into. You have to twist and pull gently on the N-Filter cap to break this bond. Take your time. I found taking the lid apart to remove the N-Filter unit made it easier to to remove the glue on the N-Filter cap. NOTE: The single screw holding the N-Filter together keeps the cap from coming off when you re-assemble it, however the glue bonds that you remove keep the cap from wiggling/moving. The screw alone does not keep it tight together. If you wand a clean tight fit again, you will need to re-glue the cap back on the N-Filter. KEEP THIS IN MIND IF YOU DO THIS MOD.","title":"N-Filter Disassembly (Optional)"},{"location":"OPERATION_EEPROM/","text":"GPStar Proton Pack & Neutrona Wand EEPROM System EEPROM Menus There are two EEPROM menus available which can be accessed to adjust and save configurations onto either the Proton Pack and Neutrona Wand EEPROM memory. These are the EEPROM LED Menu and the EEPROM Configuration Menu . \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. Refer to the Advanced User Configurations below for more information. LEDs - Top Menu The EEPOM LED Menu can be used to configure different LED setups for your Proton Pack. All changes can be saved directly to the Proton Pack EEPROM and will be loaded automatically even if you turn off the power to your devices. To access the EEPROM LED Menu System, hold down the Intensify Button and toggle the right hand Top Toggle button 5 times (up and down). You will then hear a beep noise and your bargraph will light up to indicate you are in the EEPROM LED Menu System. The Neutrona Wand barrel and all the Proton Pack LEDs will light up to the default Spectral Custom colours when you enter the EEPROM LED Menu. Use the Top Dial on the top of the Neutrona Wand to navigate the menu system and options. When you reach a different menu level, the Slo-Blo LED and other lights on the Neutrona Wand will illuminate to indicate these menu levels, along with audio cues from the system. Menu Level 1 -> No additional wand lights will be illuminated Menu Level 2 -> Slo-Blo illuminated \ud83d\udcdd Note: EEPROM menus can only be reached while both the Neutrona Wand and Proton Pack are powered down. LED Menu - Level 1 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Save or Clear the EEPROM settings Clear all the LED settings in the Proton Pack and Neutrona Wand EEPROMs. The Proton Pack and Neutrona Wand will instead load the software defined defaults the next time you power-cycle from the battery. Save the current settings to the Proton Pack and Neutrona Wand EEPROMs. 4\ufe0f\u20e3 Neutrona Wand Barrel LED Count Toggle / Spectral Custom (Barrel) Colour Toggle between 2, 5, 48 or 50 LEDs for your Neutrona Wand barrel. (Barrel Wing Button + Top Dial) Changes the colour hue of the Neutrona Wand barrel for the Spectral Custom mode. 3\ufe0f\u20e3 Power Cell LED Count Toggle / Spectral Custom (Power Cell) Colour Toggle between 13 or 15 LEDs for your Power Cell. (Barrel Wing Button + Top Dial) Changes the colour hue of the Power Cell for the Spectral Custom mode. 2\ufe0f\u20e3 Cyclotron LED Count Toggle / Spectral Custom (Cyclotron) Colour Toggle between 12, 20, 36 or 40 LEDs for your Cyclotron Lid. (Barrel Wing Button + Top Dial) Changes the colour hue of the Cyclotron for the Spectral Custom mode. 1\ufe0f\u20e3 Inner Cyclotron LED Count Toggle / Spectral Custom (Inner Cyclotron) Colour Toggle Between 12, 23, 24, 26, 35, or 36 LEDs for your Inner Cyclotron. (Barrel Wing Button + Top Dial) Changes the colour hue of the Inner Cyclotron for the Spectral Custom mode. LED Menu - Level 2 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 1984/1989 Cyclotron Fade Toggle / Pack LED Brightness Adjustment Toggle whether the outer cyclotron LEDs have a fade effect or not in 1984 and 1989 year modes. (Barrel Wing Button) Toggles between Power Cell, Cyclotron, Inner Cyclotron, or Inner Cyclotron Switch Panel devices (Barrel Wing Button + Top Dial) Increases/Decreases the selected device's LED brightness 4\ufe0f\u20e3 Bargraph Segment Count Toggle / RGB Vent Light Toggle Toggle between 28 segments or 30 segments for the optional bargraph. 1 Enable/Disable the optional addressable RGB LED vent/top light board. 3\ufe0f\u20e3 Power Cell Invert Change the direction of the Power Cell animation. unused 2\ufe0f\u20e3 Inner Cyclotron LED Panel Toggle Toggle the optional Inner Cyclotron LED Panel between disabled (individual LEDs), static colours (for prop-accurate coloured cliplite covers), and dynamic colours (for the LED panel with clear cliplite covers). unused 1\ufe0f\u20e3 Inner Cyclotron GRB Toggle Toggle your Inner Cyclotron from RGB or GRB LEDs. unused 1 This setting will only take effect if you have an optional bargraph plugged into the i2c data port when the wand is first started. Configuration - Bottom Menu The EEPROM Configuration Menu can be used to save certain behaviours of your Neutrona Wand and Proton Pack as the standard settings. To access the EEPROM Configuration Menu, hold down the Intensify Button and toggle the right hand Bottom Toggle button 5 times (up and down). You will then hear a beep noise and your bargraph will light up to indicate you are in the EEPROM Configuration Menu System. To access the EEPROM Configuration menus, use the Top Dial on the top of the wand. When you reach a different menu level, the Slo-Blo LED and other lights on the Neutrona Wand will illuminate to indicate these menu levels, along with audio cues from the system. Menu Level 1 -> No additional wand lights will be illuminated Menu Level 2 -> Slo-Blo illuminated Menu Level 3 -> Slo-Blo and vent light illuminated Menu Level 4 -> Slo-Blo, vent light, and top gun box light illuminated Menu Level 5 -> Slo-Blo; vent light, top gun box light, and front gun box light illuminated \ud83d\udcdd Note: EEPROM menus can only be reached while both the Neutrona Wand and Proton Pack are powered down. Please note whatever settings you have temporarily changed in the regular menus and sub menus will be applied automatically and saved if you exit the EEPROM menu by saving the settings. Configuration Menu - Level 1 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Save or Clear the EEPROM settings Clear all the configuration only settings in the Proton Pack and Neutrona Wand EEPROMs. The Proton Pack and Neutrona Wand will instead load the software defined defaults the next time you power-cycle from the battery. Save the current settings to the Proton Pack and Neutrona Wand EEPROMs. It is advised to power-cycle your equipment after saving settings to ensure the proper defaults/values are loaded, such as the case of changing the System Mode. 4\ufe0f\u20e3 Firing Mode Selection / Spectral Modes Cycle through VG/CTS operation modes to set as your default. 1 Enable/Disable the Spectral Modes. 3\ufe0f\u20e3 Overheating / Smoke Enable/Disable Overheating Ability Enable/Disable Smoke Effects 2\ufe0f\u20e3 Cyclotron LED Control Cyclotron rotation direction. Clockwise or counter clockwise. Enable/Disable the Cyclotron Lid Ring Simulation in Afterlife and Frozen Empire mode. ONLY applies to use of the 12, 20, or 36 LED hardware options. 1\ufe0f\u20e3 Sound Effects Enable/Disable extra Neutrona Wand sound effects to be played by the Proton Pack. Enable/Disable the proton stream impact sound effects. 1 Choose between Video Game and Cross the Streams (CTS) operation modes. The Cross The Streams modes are closer to what is seen in the films, while Video Game mode imitates behaviour seen in the 2009 Ghostbusters: The Video Game. Note that Video Game mode is only available in Super Hero mode. Configuration Menu - Level 2 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Quick Vent / Wand Boot Errors Enable/Disable the Quick Venting feature. When enabled, you can manually vent your Proton Pack by pressing the Intensify button while the top right toggle switch is switched down. \ud83d\udcdd Super Hero mode only Enable to disable the Wand boot error mode. When enabled, if you turn on the Neutrona Wand while the top right toggle is up and activated, the Neutrona Wand enters an error mode and remains locked out until the switches are all turned off. \ud83d\udcdd Super Hero mode only 4\ufe0f\u20e3 Vibration Settings Cycle through Proton Pack vibration options 2 Cycle through Neutrona Wand vibration options 3\ufe0f\u20e3 Wand Beep Loop / VGA Colour Mode Toggles Enable/Disable the looping beep sound effect in Afterlife and Frozen Empire Mode. Cycle through VG colour modes. 3 2\ufe0f\u20e3 Overheat Lights Enable/Disable the N-Filter LEDs from strobing during overheating. Enable/Disable the Proton Pack lights to turn off during overheating. When disabled, after ramping down to a slower pace, the lights stay on. 1\ufe0f\u20e3 Default Year Mode / Overheat Sync to Fan Set your default year mode between 1984/1989/Afterlife/Frozen Empire/Default. When set, the system will ignore the year mode toggle switch during bootup. However the toggle switch can still be used while the Proton Pack is on. If set to Default, the system picks the year mode based on the position of the year mode toggle switch in the Proton Pack. 4 Enable/Disable the overheat sync to fan. When enabled, the fan connections in the Proton Pack will only activate at the same time as the smoke connections. When disabled, the fan connections activate slightly after the smoke connections which allows some build of smoke before the fans activate. 2 See Inner Cyclotron for more information on the motorised cyclotron modification for the Proton Pack. 3 Enables/disables the video game colour modes for the Proton Pack's Power Cell and Cyclotron lights. This only affects the pack when in Video Game mode, not for CTS modes, and offers the following states: Disable all the video game colours (Power Cell remains blue, Cyclotron remains red). Enable only the Power Cell LEDs to change colours (requires RGB Power Cell). Enable only the Cyclotron LEDs to change colours (requires RGB replacement such as a Neopixel ring). Enable both the Power Cell and Cyclotron to use video game colours. 4 If the Neutrona Wand is in standalone mode, this does nothing. To change the default year for a standalone Neutrona Wand, please see Menu Level 3 below. Configuration Menu - Level 3 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 System Default Volume / Neutrona Wand Year Mode (Intensify + Top Dial) Adjusts the default volume for the system. (Uses audio beeps for indication of volume.) Set the year mode your Neutrona Wand operates in. Options are: 1984/1989/Afterlife/Frozen Empire and System Default. When set to System Default, the Neutrona Wand matches the same year mode as that the Proton Pack is in. 4\ufe0f\u20e3 Invert Bargraph / Bargraph Overheat Blinking Toggles inverting of the bargraph in the Neutrona Wand (depending on installation orientation). Enable/Disable the bargraph blink sequence during overheat. When enabled, the bargraph will blink and an error sound will play while overheating. When disabled, the bargraph will ramp down to off without error sounds while overheating. 3\ufe0f\u20e3 Bargraph Animations / Bargraph Firing Animations Toggle between animation modes as default for the idle bargraph: Super Hero , Bargraph Original , or System Default System Default chooses the default animation based on the year mode and system mode. Toggle between animation modes as default for the bargraph when firing: Super Hero , Bargraph Original , or System Default System Default chooses the default animation based on the year mode and system mode. 2\ufe0f\u20e3 Demo Light Mode / Cyclotron 3 LED Toggle Enable/Disable the Demo Light mode. When enabled, the Proton Pack will automatically boot up as soon as the system has power. Toggle between 1 LED or 3 LEDs in each cyclotron lens in 1984/1989 year mode. 1\ufe0f\u20e3 System Mode / CTS Override Toggle between the available system operation modes: Super Hero or Mode Original Toggle between options for default CTS mode: 1984 , Afterlife , or System Default System Default automatically chooses the CTS mode based on the current year mode of your system. Configuration Menu - Level 4 Adjust the vent smoke duration during overheat events and overheat start delay for each wand power level. Option Purpose Intensify Button + Top Dial Barrel Wing Button + Top Dial 5\ufe0f\u20e3 Power Level 5 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 6 seconds Overheat start delay Range: 2 to 60 seconds Default: 30 seconds 4\ufe0f\u20e3 Power Level 4 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 5 seconds Overheat start delay Range: 2 to 60 seconds Default: 35 seconds 3\ufe0f\u20e3 Power Level 3 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 4 seconds Overheat start delay Range: 2 to 60 seconds Default: 40 seconds 2\ufe0f\u20e3 Power Level 2 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 3 seconds Overheat start delay Range: 2 to 60 seconds Default: 50 seconds 1\ufe0f\u20e3 Power Level 1 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 2 seconds Overheat start delay Range: 2 to 60 seconds Default: 60 seconds Configuration Menu - Level 5 Toggles overheating ability and continuous smoke effects during firing for each wand power level. The continuous smoke effects will randomly activate for very short bursts while continuously firing for long periods. \u26a0\ufe0f WARNING Running your smoke devices for long periods can potentially damage them, and/or reduce battery life. Adjust these settings with caution and use at your own risk! Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Power Level 5 Enable/Disable Overheating Default: enabled Enable/Disable continuous firing smoke effects Default: enabled 4\ufe0f\u20e3 Power Level 4 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 3\ufe0f\u20e3 Power Level 3 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 2\ufe0f\u20e3 Power Level 2 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 1\ufe0f\u20e3 Power Level 1 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled Advanced User Configurations To modify defaults within the software rather than the EEPROM menus, please see the Advanced Configuration guide.","title":"EEPROM Menus"},{"location":"OPERATION_EEPROM/#eeprom-menus","text":"There are two EEPROM menus available which can be accessed to adjust and save configurations onto either the Proton Pack and Neutrona Wand EEPROM memory. These are the EEPROM LED Menu and the EEPROM Configuration Menu . \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, but if you did, it can be disabled to bypass it. Refer to the Advanced User Configurations below for more information.","title":"EEPROM Menus"},{"location":"OPERATION_EEPROM/#leds-top-menu","text":"The EEPOM LED Menu can be used to configure different LED setups for your Proton Pack. All changes can be saved directly to the Proton Pack EEPROM and will be loaded automatically even if you turn off the power to your devices. To access the EEPROM LED Menu System, hold down the Intensify Button and toggle the right hand Top Toggle button 5 times (up and down). You will then hear a beep noise and your bargraph will light up to indicate you are in the EEPROM LED Menu System. The Neutrona Wand barrel and all the Proton Pack LEDs will light up to the default Spectral Custom colours when you enter the EEPROM LED Menu. Use the Top Dial on the top of the Neutrona Wand to navigate the menu system and options. When you reach a different menu level, the Slo-Blo LED and other lights on the Neutrona Wand will illuminate to indicate these menu levels, along with audio cues from the system. Menu Level 1 -> No additional wand lights will be illuminated Menu Level 2 -> Slo-Blo illuminated \ud83d\udcdd Note: EEPROM menus can only be reached while both the Neutrona Wand and Proton Pack are powered down.","title":"LEDs - Top Menu"},{"location":"OPERATION_EEPROM/#led-menu-level-1","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Save or Clear the EEPROM settings Clear all the LED settings in the Proton Pack and Neutrona Wand EEPROMs. The Proton Pack and Neutrona Wand will instead load the software defined defaults the next time you power-cycle from the battery. Save the current settings to the Proton Pack and Neutrona Wand EEPROMs. 4\ufe0f\u20e3 Neutrona Wand Barrel LED Count Toggle / Spectral Custom (Barrel) Colour Toggle between 2, 5, 48 or 50 LEDs for your Neutrona Wand barrel. (Barrel Wing Button + Top Dial) Changes the colour hue of the Neutrona Wand barrel for the Spectral Custom mode. 3\ufe0f\u20e3 Power Cell LED Count Toggle / Spectral Custom (Power Cell) Colour Toggle between 13 or 15 LEDs for your Power Cell. (Barrel Wing Button + Top Dial) Changes the colour hue of the Power Cell for the Spectral Custom mode. 2\ufe0f\u20e3 Cyclotron LED Count Toggle / Spectral Custom (Cyclotron) Colour Toggle between 12, 20, 36 or 40 LEDs for your Cyclotron Lid. (Barrel Wing Button + Top Dial) Changes the colour hue of the Cyclotron for the Spectral Custom mode. 1\ufe0f\u20e3 Inner Cyclotron LED Count Toggle / Spectral Custom (Inner Cyclotron) Colour Toggle Between 12, 23, 24, 26, 35, or 36 LEDs for your Inner Cyclotron. (Barrel Wing Button + Top Dial) Changes the colour hue of the Inner Cyclotron for the Spectral Custom mode.","title":"LED Menu - Level 1"},{"location":"OPERATION_EEPROM/#led-menu-level-2","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 1984/1989 Cyclotron Fade Toggle / Pack LED Brightness Adjustment Toggle whether the outer cyclotron LEDs have a fade effect or not in 1984 and 1989 year modes. (Barrel Wing Button) Toggles between Power Cell, Cyclotron, Inner Cyclotron, or Inner Cyclotron Switch Panel devices (Barrel Wing Button + Top Dial) Increases/Decreases the selected device's LED brightness 4\ufe0f\u20e3 Bargraph Segment Count Toggle / RGB Vent Light Toggle Toggle between 28 segments or 30 segments for the optional bargraph. 1 Enable/Disable the optional addressable RGB LED vent/top light board. 3\ufe0f\u20e3 Power Cell Invert Change the direction of the Power Cell animation. unused 2\ufe0f\u20e3 Inner Cyclotron LED Panel Toggle Toggle the optional Inner Cyclotron LED Panel between disabled (individual LEDs), static colours (for prop-accurate coloured cliplite covers), and dynamic colours (for the LED panel with clear cliplite covers). unused 1\ufe0f\u20e3 Inner Cyclotron GRB Toggle Toggle your Inner Cyclotron from RGB or GRB LEDs. unused 1 This setting will only take effect if you have an optional bargraph plugged into the i2c data port when the wand is first started.","title":"LED Menu - Level 2"},{"location":"OPERATION_EEPROM/#configuration-bottom-menu","text":"The EEPROM Configuration Menu can be used to save certain behaviours of your Neutrona Wand and Proton Pack as the standard settings. To access the EEPROM Configuration Menu, hold down the Intensify Button and toggle the right hand Bottom Toggle button 5 times (up and down). You will then hear a beep noise and your bargraph will light up to indicate you are in the EEPROM Configuration Menu System. To access the EEPROM Configuration menus, use the Top Dial on the top of the wand. When you reach a different menu level, the Slo-Blo LED and other lights on the Neutrona Wand will illuminate to indicate these menu levels, along with audio cues from the system. Menu Level 1 -> No additional wand lights will be illuminated Menu Level 2 -> Slo-Blo illuminated Menu Level 3 -> Slo-Blo and vent light illuminated Menu Level 4 -> Slo-Blo, vent light, and top gun box light illuminated Menu Level 5 -> Slo-Blo; vent light, top gun box light, and front gun box light illuminated \ud83d\udcdd Note: EEPROM menus can only be reached while both the Neutrona Wand and Proton Pack are powered down. Please note whatever settings you have temporarily changed in the regular menus and sub menus will be applied automatically and saved if you exit the EEPROM menu by saving the settings.","title":"Configuration - Bottom Menu"},{"location":"OPERATION_EEPROM/#configuration-menu-level-1","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Save or Clear the EEPROM settings Clear all the configuration only settings in the Proton Pack and Neutrona Wand EEPROMs. The Proton Pack and Neutrona Wand will instead load the software defined defaults the next time you power-cycle from the battery. Save the current settings to the Proton Pack and Neutrona Wand EEPROMs. It is advised to power-cycle your equipment after saving settings to ensure the proper defaults/values are loaded, such as the case of changing the System Mode. 4\ufe0f\u20e3 Firing Mode Selection / Spectral Modes Cycle through VG/CTS operation modes to set as your default. 1 Enable/Disable the Spectral Modes. 3\ufe0f\u20e3 Overheating / Smoke Enable/Disable Overheating Ability Enable/Disable Smoke Effects 2\ufe0f\u20e3 Cyclotron LED Control Cyclotron rotation direction. Clockwise or counter clockwise. Enable/Disable the Cyclotron Lid Ring Simulation in Afterlife and Frozen Empire mode. ONLY applies to use of the 12, 20, or 36 LED hardware options. 1\ufe0f\u20e3 Sound Effects Enable/Disable extra Neutrona Wand sound effects to be played by the Proton Pack. Enable/Disable the proton stream impact sound effects. 1 Choose between Video Game and Cross the Streams (CTS) operation modes. The Cross The Streams modes are closer to what is seen in the films, while Video Game mode imitates behaviour seen in the 2009 Ghostbusters: The Video Game. Note that Video Game mode is only available in Super Hero mode.","title":"Configuration Menu - Level 1"},{"location":"OPERATION_EEPROM/#configuration-menu-level-2","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Quick Vent / Wand Boot Errors Enable/Disable the Quick Venting feature. When enabled, you can manually vent your Proton Pack by pressing the Intensify button while the top right toggle switch is switched down. \ud83d\udcdd Super Hero mode only Enable to disable the Wand boot error mode. When enabled, if you turn on the Neutrona Wand while the top right toggle is up and activated, the Neutrona Wand enters an error mode and remains locked out until the switches are all turned off. \ud83d\udcdd Super Hero mode only 4\ufe0f\u20e3 Vibration Settings Cycle through Proton Pack vibration options 2 Cycle through Neutrona Wand vibration options 3\ufe0f\u20e3 Wand Beep Loop / VGA Colour Mode Toggles Enable/Disable the looping beep sound effect in Afterlife and Frozen Empire Mode. Cycle through VG colour modes. 3 2\ufe0f\u20e3 Overheat Lights Enable/Disable the N-Filter LEDs from strobing during overheating. Enable/Disable the Proton Pack lights to turn off during overheating. When disabled, after ramping down to a slower pace, the lights stay on. 1\ufe0f\u20e3 Default Year Mode / Overheat Sync to Fan Set your default year mode between 1984/1989/Afterlife/Frozen Empire/Default. When set, the system will ignore the year mode toggle switch during bootup. However the toggle switch can still be used while the Proton Pack is on. If set to Default, the system picks the year mode based on the position of the year mode toggle switch in the Proton Pack. 4 Enable/Disable the overheat sync to fan. When enabled, the fan connections in the Proton Pack will only activate at the same time as the smoke connections. When disabled, the fan connections activate slightly after the smoke connections which allows some build of smoke before the fans activate. 2 See Inner Cyclotron for more information on the motorised cyclotron modification for the Proton Pack. 3 Enables/disables the video game colour modes for the Proton Pack's Power Cell and Cyclotron lights. This only affects the pack when in Video Game mode, not for CTS modes, and offers the following states: Disable all the video game colours (Power Cell remains blue, Cyclotron remains red). Enable only the Power Cell LEDs to change colours (requires RGB Power Cell). Enable only the Cyclotron LEDs to change colours (requires RGB replacement such as a Neopixel ring). Enable both the Power Cell and Cyclotron to use video game colours. 4 If the Neutrona Wand is in standalone mode, this does nothing. To change the default year for a standalone Neutrona Wand, please see Menu Level 3 below.","title":"Configuration Menu - Level 2"},{"location":"OPERATION_EEPROM/#configuration-menu-level-3","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 System Default Volume / Neutrona Wand Year Mode (Intensify + Top Dial) Adjusts the default volume for the system. (Uses audio beeps for indication of volume.) Set the year mode your Neutrona Wand operates in. Options are: 1984/1989/Afterlife/Frozen Empire and System Default. When set to System Default, the Neutrona Wand matches the same year mode as that the Proton Pack is in. 4\ufe0f\u20e3 Invert Bargraph / Bargraph Overheat Blinking Toggles inverting of the bargraph in the Neutrona Wand (depending on installation orientation). Enable/Disable the bargraph blink sequence during overheat. When enabled, the bargraph will blink and an error sound will play while overheating. When disabled, the bargraph will ramp down to off without error sounds while overheating. 3\ufe0f\u20e3 Bargraph Animations / Bargraph Firing Animations Toggle between animation modes as default for the idle bargraph: Super Hero , Bargraph Original , or System Default System Default chooses the default animation based on the year mode and system mode. Toggle between animation modes as default for the bargraph when firing: Super Hero , Bargraph Original , or System Default System Default chooses the default animation based on the year mode and system mode. 2\ufe0f\u20e3 Demo Light Mode / Cyclotron 3 LED Toggle Enable/Disable the Demo Light mode. When enabled, the Proton Pack will automatically boot up as soon as the system has power. Toggle between 1 LED or 3 LEDs in each cyclotron lens in 1984/1989 year mode. 1\ufe0f\u20e3 System Mode / CTS Override Toggle between the available system operation modes: Super Hero or Mode Original Toggle between options for default CTS mode: 1984 , Afterlife , or System Default System Default automatically chooses the CTS mode based on the current year mode of your system.","title":"Configuration Menu - Level 3"},{"location":"OPERATION_EEPROM/#configuration-menu-level-4","text":"Adjust the vent smoke duration during overheat events and overheat start delay for each wand power level. Option Purpose Intensify Button + Top Dial Barrel Wing Button + Top Dial 5\ufe0f\u20e3 Power Level 5 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 6 seconds Overheat start delay Range: 2 to 60 seconds Default: 30 seconds 4\ufe0f\u20e3 Power Level 4 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 5 seconds Overheat start delay Range: 2 to 60 seconds Default: 35 seconds 3\ufe0f\u20e3 Power Level 3 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 4 seconds Overheat start delay Range: 2 to 60 seconds Default: 40 seconds 2\ufe0f\u20e3 Power Level 2 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 3 seconds Overheat start delay Range: 2 to 60 seconds Default: 50 seconds 1\ufe0f\u20e3 Power Level 1 Smoke vent duration during overheat Range: 2 to 60 seconds Default: 2 seconds Overheat start delay Range: 2 to 60 seconds Default: 60 seconds","title":"Configuration Menu - Level 4"},{"location":"OPERATION_EEPROM/#configuration-menu-level-5","text":"Toggles overheating ability and continuous smoke effects during firing for each wand power level. The continuous smoke effects will randomly activate for very short bursts while continuously firing for long periods.","title":"Configuration Menu - Level 5"},{"location":"OPERATION_EEPROM/#warning","text":"Running your smoke devices for long periods can potentially damage them, and/or reduce battery life. Adjust these settings with caution and use at your own risk! Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Power Level 5 Enable/Disable Overheating Default: enabled Enable/Disable continuous firing smoke effects Default: enabled 4\ufe0f\u20e3 Power Level 4 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 3\ufe0f\u20e3 Power Level 3 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 2\ufe0f\u20e3 Power Level 2 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled 1\ufe0f\u20e3 Power Level 1 Enable/Disable Overheating Default: disabled Enable/Disable continuous firing smoke effects Default: enabled","title":"\u26a0\ufe0f WARNING"},{"location":"OPERATION_EEPROM/#advanced-user-configurations","text":"To modify defaults within the software rather than the EEPROM menus, please see the Advanced Configuration guide.","title":"Advanced User Configurations"},{"location":"OPERATION_MENUS/","text":"GPStar Proton Pack & Neutrona Wand Operation Manual Neutrona Wand renders courtesy of Luis Pe\u00f1a Operational Guide - Menu System Entering The Menu System There are 2 ways to enter the Menu System. With any right-hand switch DOWN , press the Barrel Wing Button to enter the Neutrona Wand Menu System. \ud83d\udcdd Super Hero mode only While the Neutrona Wand and Proton Pack are powered down, press the Barrel Wing Button . Navigation Use the Top Dial on the top of the wand to navigate up and down through the menu system. When you are in the settings menu system the bargraph's 5 LEDs begin flashing (or 5 distinct segments when using the 28-segment or 30-segment bargraph). All other functions of the wand (such as firing) are temporarily disabled while in the menu system. There are 5 different menu settings, which are indicated by bargraph LED segments 1 through 5 (from bottom to top) with menu level 5 being the default upon entering this mode. For example in navigation, when 1 LED (or bargraph segment) is flashing/displayed that means you are on Option 1 . Action Levels Changes are made by pressing either the Intensify button on the gun box or the Barrel Wing Button at the end of the wand. Menu Level 1 Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Music Track Looping Enable/disable looping of current track 1 Exit the menu system 2 4\ufe0f\u20e3 Proton Pack Light Dimming (Intensify + Top Dial) Increases/Decreases the selected device's LED brightness Toggles between Power Cell, Cyclotron, Inner Cyclotron, or Inner Cyclotron Switch Panel devices 3\ufe0f\u20e3 Music & SFX Volume (Intensify + Top Dial) Increases/Decreases SFX Volume (Barrel Wing Button + Top Dial) Increases/Decreases Music Volume 2\ufe0f\u20e3 Switch Music Track Cycle forward in music queue Cycle backwards in music queue 1\ufe0f\u20e3 Play or Stop Music / System Mute Start/stop music playback Mute the Proton Pack and Neutrona Wand or revert back to the previous volume 3 1 Note that LED/segment #5 will stay solid when the single-track loop is enabled while in the top menu system; it will blink on/off when looping is disabled. 2 When you navigate back to Option 5 and press the Barrel Wing Button , the wand will return to the previously-selected firing mode (if menu was entered while wand was on) or an idle state (if menu was entered while wand was off). Note that music will continue to play (and advance/loop) even when the pack and wand are turned off. 3 Note that LED/segment #1 will stay solid when the Proton Pack and Neutrona Wand volume is muted. Menu Level 2 \ud83d\udcdd Note: The Neutrona Wand Menu Level 2 can only be reached while the Neutrona Wand and Proton Pack are both turned off. To access Menu Level 2, use the Top Dial on the top of the wand to move down and past Option 1 on Menu Level 1. When you reach the the next menu level, an audio cue will play and the Slo-Blo LED will light up to indicate this menu state. Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Firing Mode Selection Cycle through VG/CTS operation modes 4 Cycle through VG colour modes 5 4\ufe0f\u20e3 Overheating / Smoke Enable/Disable Overheating Ability Enable/Disable Smoke Effects 3\ufe0f\u20e3 Cyclotron LED Control Change Cyclotron rotation direction Toggle between 1 or 3 centered LEDs in the Cyclotron Lid for 1984/1989 modes 2\ufe0f\u20e3 Vibration Settings Cycle through Proton Pack vibration options 6 Cycle through Neutrona Wand vibration options 1\ufe0f\u20e3 Year Mode Selection Cycle through 1984, 1989, Afterlife, and Frozen Empire modes Enable/Disable the Proton Stream impact sound effects 4 Switch between Video Game and Cross the Streams (CTS) operation modes. Note that LED/segment #5 will stay solid when CTS or CTS Mix are enabled while in Menu Level 2. Note also that Video Game mode is only available in Super Hero mode. 5 Enables/disables the video game colour modes for the Proton Pack's Power Cell and Cyclotron lights. This only affects the pack when in Video Game mode, not for CTS modes, and offers the following states: Disable all the video game colours (Power Cell remains blue, Cyclotron remains red). Enable only the Power Cell LEDs to change colours (requires a RGB Power Cell). Enable only the Cyclotron LEDs to change colours (requires RGB replacements). Enable both the Power Cell and Cyclotron to use video game colours. 6 See Inner Cyclotron for more information on the motorised cyclotron modification for the Proton Pack. To exit the menu system, navigate to Menu Level 1, Option 5 (Slo-blo LED is no longer illuminated) and press the Barrel Wing Button . A voice callout will be heard when transitioning between the top and sub menu levels.","title":"Runtime Menus"},{"location":"OPERATION_MENUS/#operational-guide-menu-system","text":"","title":"Operational Guide - Menu System"},{"location":"OPERATION_MENUS/#entering-the-menu-system","text":"There are 2 ways to enter the Menu System. With any right-hand switch DOWN , press the Barrel Wing Button to enter the Neutrona Wand Menu System. \ud83d\udcdd Super Hero mode only While the Neutrona Wand and Proton Pack are powered down, press the Barrel Wing Button .","title":"Entering The Menu System"},{"location":"OPERATION_MENUS/#navigation","text":"Use the Top Dial on the top of the wand to navigate up and down through the menu system. When you are in the settings menu system the bargraph's 5 LEDs begin flashing (or 5 distinct segments when using the 28-segment or 30-segment bargraph). All other functions of the wand (such as firing) are temporarily disabled while in the menu system. There are 5 different menu settings, which are indicated by bargraph LED segments 1 through 5 (from bottom to top) with menu level 5 being the default upon entering this mode. For example in navigation, when 1 LED (or bargraph segment) is flashing/displayed that means you are on Option 1 .","title":"Navigation"},{"location":"OPERATION_MENUS/#action-levels","text":"Changes are made by pressing either the Intensify button on the gun box or the Barrel Wing Button at the end of the wand.","title":"Action Levels"},{"location":"OPERATION_MENUS/#menu-level-1","text":"Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Music Track Looping Enable/disable looping of current track 1 Exit the menu system 2 4\ufe0f\u20e3 Proton Pack Light Dimming (Intensify + Top Dial) Increases/Decreases the selected device's LED brightness Toggles between Power Cell, Cyclotron, Inner Cyclotron, or Inner Cyclotron Switch Panel devices 3\ufe0f\u20e3 Music & SFX Volume (Intensify + Top Dial) Increases/Decreases SFX Volume (Barrel Wing Button + Top Dial) Increases/Decreases Music Volume 2\ufe0f\u20e3 Switch Music Track Cycle forward in music queue Cycle backwards in music queue 1\ufe0f\u20e3 Play or Stop Music / System Mute Start/stop music playback Mute the Proton Pack and Neutrona Wand or revert back to the previous volume 3 1 Note that LED/segment #5 will stay solid when the single-track loop is enabled while in the top menu system; it will blink on/off when looping is disabled. 2 When you navigate back to Option 5 and press the Barrel Wing Button , the wand will return to the previously-selected firing mode (if menu was entered while wand was on) or an idle state (if menu was entered while wand was off). Note that music will continue to play (and advance/loop) even when the pack and wand are turned off. 3 Note that LED/segment #1 will stay solid when the Proton Pack and Neutrona Wand volume is muted.","title":"Menu Level 1"},{"location":"OPERATION_MENUS/#menu-level-2","text":"\ud83d\udcdd Note: The Neutrona Wand Menu Level 2 can only be reached while the Neutrona Wand and Proton Pack are both turned off. To access Menu Level 2, use the Top Dial on the top of the wand to move down and past Option 1 on Menu Level 1. When you reach the the next menu level, an audio cue will play and the Slo-Blo LED will light up to indicate this menu state. Option Purpose Intensify Button Barrel Wing Button 5\ufe0f\u20e3 Firing Mode Selection Cycle through VG/CTS operation modes 4 Cycle through VG colour modes 5 4\ufe0f\u20e3 Overheating / Smoke Enable/Disable Overheating Ability Enable/Disable Smoke Effects 3\ufe0f\u20e3 Cyclotron LED Control Change Cyclotron rotation direction Toggle between 1 or 3 centered LEDs in the Cyclotron Lid for 1984/1989 modes 2\ufe0f\u20e3 Vibration Settings Cycle through Proton Pack vibration options 6 Cycle through Neutrona Wand vibration options 1\ufe0f\u20e3 Year Mode Selection Cycle through 1984, 1989, Afterlife, and Frozen Empire modes Enable/Disable the Proton Stream impact sound effects 4 Switch between Video Game and Cross the Streams (CTS) operation modes. Note that LED/segment #5 will stay solid when CTS or CTS Mix are enabled while in Menu Level 2. Note also that Video Game mode is only available in Super Hero mode. 5 Enables/disables the video game colour modes for the Proton Pack's Power Cell and Cyclotron lights. This only affects the pack when in Video Game mode, not for CTS modes, and offers the following states: Disable all the video game colours (Power Cell remains blue, Cyclotron remains red). Enable only the Power Cell LEDs to change colours (requires a RGB Power Cell). Enable only the Cyclotron LEDs to change colours (requires RGB replacements). Enable both the Power Cell and Cyclotron to use video game colours. 6 See Inner Cyclotron for more information on the motorised cyclotron modification for the Proton Pack. To exit the menu system, navigate to Menu Level 1, Option 5 (Slo-blo LED is no longer illuminated) and press the Barrel Wing Button . A voice callout will be heard when transitioning between the top and sub menu levels.","title":"Menu Level 2"},{"location":"OPERATION_USAGE/","text":"GPStar Proton Pack & Neutrona Wand Operation Manual Neutrona Wand renders courtesy of Luis Pe\u00f1a Operational Guide - General Usage Standard Features The switch underneath the Ion Arm can turn the Proton Pack on or off. You can run the pack without the Cyclotron Lid attached. The volume for the pack and wand can be controlled via the Crank Generator knob. Clockwise to raise volume, counter-clockwise to lower it. When the ribbon cable is disconnected it will activate the alarm mode and degrade the Cyclotron spin. The Proton Pack can run without a wand, though it can only be activated via the switch under the Ion Arm. Vibration switch in the Cyclotron switch plate enables or disables the vibration motors for both the Proton Pack and Neutrona Wand. Theme toggle in the Cyclotron switch plate changes the Proton Pack and Neutrona Wand modes between 1984, 1989, Afterlife, and Frozen Empire. The Proton Pack vibrates only while firing. This can be changed to vibrate at all times or entirely disabled. Vibration can be enabled or disabled by the vibration toggle switch in the Proton Pack. Vibration settings can be toggled via the Neutrona Wand menu system or the advanced user configuration settings. The Neutrona Wand vibrates only while firing. This can be changed to vibrate at all times or entirely disabled. Vibration can enabled or disabled by the vibration toggle switch in the Proton Pack. Vibration settings can be toggled via the wand menu system or the advanced user configuration settings. Single (centered) LED per Cyclotron lens for 1984/1989 modes by default. This can be toggled back to 3 LEDs per Cyclotron lens via the Neturona Wand menu system. The Power Cell, Cyclotron and other lighting on the Proton Pack can have the brightness independently adjusted. 1989 and Frozen Empire sound effect modes are available; they can be accessed from the Neutrona Wand menus or set with the advanced user configuration settings. Super Hero and Mode Original system operation modes. Menu system with the ability to customise various settings for both your Proton Pack and Neutrona Wand. Up to 5 different power levels as indicated on the Neutrona Wand bargraph. The Neutrona Wand can be configured within the menu system to adjust the overheat settings. When not set to overheat, you can fire continuously. The Proton Pack can also be configured within the Neutrona Wand menu system to adjust the duration of smoke effects (for each power level), which smoke effects are activated (for each power level), use of overheating smoke effects (for each power level), or whether smoke is enabled or disabled entirely (for each power level). Default settings: The Neutrona Wand will fire forever on power levels level 1 through 4 and overheat on power level 5. The Proton Pack will emit smoke effects during longer firing (Default setting: enabled). This can be configured from the Neutrona Wand menu system. System Power Readiness Indicator When battery power is first applied on the Proton Pack, the lights will flicker and a sound will play to indicate that the system now has power and is ready for use. System Power Inactivity Indicator The LED at the front of the Neutrona Wand body next to the Clippard valve will start to blink after 1 minute of inactivity while the Neutrona Wand and Proton Pack are powered down to indicate the system is still receiving power from the battery. Optional Features Support for changing Cyclotron direction and to enable/disable smoke effects. Support for smoke effects with dedicated fans for the Booster Tube and N-Filter. See the Smoke Effects addendum for more information. Support for motorised inner cyclotron cake or outer cyclotron lighting. See the Inner Cyclotron for more information. Additional Lights available for the Cyclotron panel, internal \"cake\" Cyclotron, and Power Cell. Automatically switches to internal \"cake\" Cyclotron, if implemented (optional). This supports a 35-LED RGB ring light (by default) to be installed in the \"cake\". Other size LED rings or LED setups are supported in the configuration settings. Video game colours supported if using RGB-supported LEDs for the Cyclotron Lid, internal \"cake\" Cyclotron and Power Cell. Support for the Attenuator add-on device. See the Attenuator addendum for more information. Support for additional lights such as the wand hat lights and wand barrel end LED strobe. When adding the Hat1 light a New Barrel Wing Button can also be added. Serial connection and power for a 28-segment or 30-segment bargraph support (to replace the stock 5-LED bargraph). Location of optional hardware for Neutrona Wand, requires advanced modifications. Top Dial Behaviour The primary purpose of the Top Dial on the top of the gun box is to change the power level of the wand, affecting the intensity of the stream effects (indicated by increasing or decreasing the bargraph lights just as the stock wand did). Rotate clockwise to raise power, and counter-clockwise to lower power. There are 5 wand power levels in Super Hero mode and 4 in Mode Original. For lower power levels, the proton stream is more red. On higher power levels, the stream will appear more yellow. Note that it is the other way around for 1989 mode to be more faithful to how proton streams appeared in that film. When Video Game Mode is active and the Neutrona Wand is ON and the top toggle switch is DOWN , rotating the Top Dial will switch between weapon modes. For a description of these modes please see the Video Game Mode section. \ud83d\udcdd Super Hero mode only The Top Dial is also used to navigate the menu systems (see \"Neutrona Wand Menu System\" section). Quick Audio Volume Adjustment System Volume While the Neutrona Wand is OFF and no music is playing, turn the Top Dial to quickly adjust the Proton Pack volume. While the Neutrona Wand is OFF , hold the Intensify button while turning the Top Dial to quickly adjust the Neutrona Wand volume. Music While the Neutrona Wand is OFF and music is playing, turn the Top Dial to quickly adjust the music volume. Refer to the Loading The Audio Files for more information on loading additional music tracks. Toggle Operation Modes There are two modes available which replicate movie or prop-accurate behaviors of the available toggle switches. These operational modes can be altered via an EEPROM menu and will affect the startup sequence for your Proton Pack and Neutrona Wand. Super Hero Mode Operation Guide Super Hero : This is the default operation mode based primarily on how the wand appeared to work in Ghostbusters: Afterlife. Activate Toggle Activate toggle on the gun box turns on both the Proton Pack and Neutrona Wand. The switch under the Proton Pack's Ion Arm does not need to be engaged for this to work. The switch under the Ion Arm will turn the cyclotron on. The green lever near the gunbox acts as a safety and must be pulled to extend the barrel before firing. While firing, the default bargraph animations slide/split the bargraph in half and scroll up and down simultaneously. Button Mash Lockout: If you press the firing button(s) too rapidly the system will malfunction and lock you out for a period of time proportional to the current power level. Right-Hand Toggle Switch Behaviour Right-hand toggles (Bottom and Top) affect the vent light and additional sound effects. The Neutrona Wand will not fire unless these switches are both turned on. Boot-Up Errors : If you attempt to boot up your Neutrona Wand while the top toggle switch is on, the Neutrona Wand will boot into a error mode. Turn the top toggle switch off and restart your Neutrona Wand to boot normally. This is the default behaviour , though this feature can be disabled in the Neutrona Wand EEPROM Configuration Menu. Quick Vent : If the Neutrona Wand is ON and the Top toggle switch is DOWN , pressing Intensify will perform a quick vent. Holding down Intensify will perform a full overheat sequence. This is the default behaviour , though this feature can be disabled in the Neutrona Wand EEPROM Configuration Menu. While in 1984 or 1989 theme mode: Bottom toggle switch turns on the vent light and plays the wand power up sound. Top toggle switch plays a single beep sound. While in Afterlife or Frozen Empire theme mode: Bottom toggle switch turns on the vent light and the wand plays a ramp up sound. Top toggle switch turns on the looping beeping sounds. Mode Original (Prop) Operation Guide Mode Original : This mode reflects original production documentation from 1984 on how the Proton Pack and Neutrona Wand operate together. Other variation differences are the bargraph animations, Neturona Wand sound effects and power levels. Note that the firing modes from the 2009 video game are unavailable in this mode as they are not accurate to these production notes. There are 4 power levels in Mode Original. When the Neutrona Wand is in standby mode (see toggle switch behaviours below), the bargraph settles on the first level. The switch under the Ion Arm on the Proton Pack must be switched on. This gives power to the entire system. The slo-blo light on the Neutrona Wand will turn solid red to indicate power to the system. If you are using a standalone Neutrona Wand without a Proton Pack, double-clicking the Intensify button while the Neutrona Wand is turned off will imitate flipping the switch under the Ion Arm. While firing, the default bargraph animations slide the bargraph up and down small increments to indicate the instability and power of the proton stream. Button Mash Lockout: If you press the firing button(s) too rapidly the system will malfunction and lock you out for a period of time proportional to the current power level. Right-Hand Toggle Switch Behaviours The bottom toggle will put the Neutrona Wand into standby mode with an audible beep, and the slo-blo LED will begin to blink. If the bottom toggle is on the top toggle turns on the bargraph, the vent light, and Clippard LED and the heatup sound will play. The bargraph will ramp up and back down to the lowest level setting. Activate Toggle Activate toggle on the gun box turns on the cyclotron of the Proton Pack. To activate the cyclotron, both right hand toggle switches on the Neutrona Wand must be activated. The Cyclotron will not turn on unless both toggle switches on the Neutrona Wand are activated and the Ion Arm switch on the Pack is in the ON position. The green lever near the gunbox acts as a safety and must be pulled to extend the barrel before firing. System Modes Video Game Mode (Default) \ud83d\udcdd Super Hero mode only While the Neutrona Wand is ON and the top toggle switch is DOWN , rotating the Top Dial will select from the following weapon modes (listed in counter-clockwise order): Proton Stream (Default) Dark Matter Generator Plasm Distribution System Composite Particle System 1 Spectral (Rainbow) 2 Spectral (Holiday) 3 Spectral (Custom) 1 Spectral Mode (Rainbow) is a Proton Stream which gives a RAINBOW effect. If your Proton Pack has RGB LEDs, they will change to match. 2 Spectral (Holiday) is a Proton Stream which gives an ORANGE/PURPLE effect. You can press the Barrel Wing Button while ready to fire in this mode to switch to a RED/GREEN effect. If your Proton Pack has RGB LEDs, it will match these colours. 3 Spectral (Custom) is a Proton Stream with a user-defined colour mode. You can independently adjust the Neutrona Wand Barrel, Power Cell, Cyclotron and Inner Cyclotron colours directly from the EEPROM LED Menu system. The default colours are purple. \ud83d\udcdd Note: Spectral modes are disabled by default but can be enabled from the EEPROM Menu or flashed directly to the Neutrona Wand board. They take advantage of RGB coloured LED add-ons if installed. Proton Stream Holding down Intensify will throw your normal Proton Stream. Pressing the Barrel Wing Button while you are already throwing a Proton Stream will initiate \"Cross the Streams\". Pressing the Barrel Wing Button will fire a Boson Dart. Dark Matter Generator Pressing Intensify will fire a Shock Blast. Holding down the Barrel Wing Button will throw a Stasis Stream. Plasm Distribution System Holding down Intensify will activate the Slime Blower. Pressing the Barrel Wing Button will fire a Slime Tether. Composite Particle System Pressing Intensify will fire the Meson Collider. Pressing the Barrel Wing Button will fire an Overload Pulse. Holding down the Barrel Wing Button allows for rapid-fire. The firing rate is dependent on the Neutrona Wand's current power level. Proton Stream Effects As a nod to accuracy where possible, the proton streams are based on those observed from the movies. Most streams carry the same theme-based effects for power levels 1-4 (2-4 for Mode Original) while the maximum power setting will typically change slightly based on the final battle scenes from the respective movies. 1984 Power Level Notable Effects 1 Firing startup based on first encounter with Slimer 2 - Same - 3 - Same - 4 - Same - 5 Additional sparking sounds at \"full stream\" 1989 Power Level Notable Effects 1 Metallic \"clang\" as notable during the courtroom scene 2 - Same - 3 - Same - 4 - Same - 5 Uses the 1984 high power sound at \"full neutronas\" Afterlife Power Level Notable Effects 1 Uses the same effects as 1984 2 - Same - 3 - Same - 4 - Same - 5 New custom sounds specific for Afterlife Frozen Empire Power Level Notable Effects 1 Uses new startup sound as heard in Frozen Empire 2 - Same - 3 - Same - 4 - Same - 5 - Same - Cross The Streams (CTS) / Cross The Streams Mix (CTS Mix) The Barrel Wing Button at the end of the wand acts as a alternate firing button. When Cross The Streams is enabled, Video Game Modes are disabled and you will only have the Proton Stream on both Intensify and the Barrel Wing Button . The overheat features can only be triggered when holding the Barrel Wing Button when Cross The Streams mode is enabled. Pressing both the Intensify and Barrel Wing Button at the same time enables the \"Cross the Streams\" (CTS) audio and visual effects. Releasing either of the firing buttons will continue these effects as long as one is still held, and will end once both buttons are released. With Cross The Streams Mix, you need to hold both the Intensify and Barrel Wing Button at the same time to remain in Cross The Streams. Releasing one of the firing buttons will revert to the normal Proton Stream for that button. Cross The Streams (CTS) is the default firing mode for Mode Original. Cross The Streams (CTS) or Cross The Streams Mix (CTS Mix) modes can be selected from the Neutrona Wand Menu System. Additional Resources EEPROM Menu Guide Please view the supplemental operation guide for EEPROM menus which can be used to alter hardware configurations and to set user preferences which will persist across battery power-down events. PDF Operational Guide (Direct Download link) GPStar Operational Guide [pdf] Video Demos Video Demo: Features and Menu Walkthrough (YouTube, July 2023) Neutrona Wand Menu System Video Demo: Proton Pack Wand Menu Settings Video Demo (YouTube) Video Game Firing Modes: Ghostbusters: The Video Game (2009) Firing Modes (YouTube)","title":"General Usage"},{"location":"OPERATION_USAGE/#operational-guide-general-usage","text":"","title":"Operational Guide - General Usage"},{"location":"OPERATION_USAGE/#standard-features","text":"The switch underneath the Ion Arm can turn the Proton Pack on or off. You can run the pack without the Cyclotron Lid attached. The volume for the pack and wand can be controlled via the Crank Generator knob. Clockwise to raise volume, counter-clockwise to lower it. When the ribbon cable is disconnected it will activate the alarm mode and degrade the Cyclotron spin. The Proton Pack can run without a wand, though it can only be activated via the switch under the Ion Arm. Vibration switch in the Cyclotron switch plate enables or disables the vibration motors for both the Proton Pack and Neutrona Wand. Theme toggle in the Cyclotron switch plate changes the Proton Pack and Neutrona Wand modes between 1984, 1989, Afterlife, and Frozen Empire. The Proton Pack vibrates only while firing. This can be changed to vibrate at all times or entirely disabled. Vibration can be enabled or disabled by the vibration toggle switch in the Proton Pack. Vibration settings can be toggled via the Neutrona Wand menu system or the advanced user configuration settings. The Neutrona Wand vibrates only while firing. This can be changed to vibrate at all times or entirely disabled. Vibration can enabled or disabled by the vibration toggle switch in the Proton Pack. Vibration settings can be toggled via the wand menu system or the advanced user configuration settings. Single (centered) LED per Cyclotron lens for 1984/1989 modes by default. This can be toggled back to 3 LEDs per Cyclotron lens via the Neturona Wand menu system. The Power Cell, Cyclotron and other lighting on the Proton Pack can have the brightness independently adjusted. 1989 and Frozen Empire sound effect modes are available; they can be accessed from the Neutrona Wand menus or set with the advanced user configuration settings. Super Hero and Mode Original system operation modes. Menu system with the ability to customise various settings for both your Proton Pack and Neutrona Wand. Up to 5 different power levels as indicated on the Neutrona Wand bargraph. The Neutrona Wand can be configured within the menu system to adjust the overheat settings. When not set to overheat, you can fire continuously. The Proton Pack can also be configured within the Neutrona Wand menu system to adjust the duration of smoke effects (for each power level), which smoke effects are activated (for each power level), use of overheating smoke effects (for each power level), or whether smoke is enabled or disabled entirely (for each power level). Default settings: The Neutrona Wand will fire forever on power levels level 1 through 4 and overheat on power level 5. The Proton Pack will emit smoke effects during longer firing (Default setting: enabled). This can be configured from the Neutrona Wand menu system.","title":"Standard Features"},{"location":"OPERATION_USAGE/#system-power-readiness-indicator","text":"When battery power is first applied on the Proton Pack, the lights will flicker and a sound will play to indicate that the system now has power and is ready for use.","title":"System Power Readiness Indicator"},{"location":"OPERATION_USAGE/#system-power-inactivity-indicator","text":"The LED at the front of the Neutrona Wand body next to the Clippard valve will start to blink after 1 minute of inactivity while the Neutrona Wand and Proton Pack are powered down to indicate the system is still receiving power from the battery.","title":"System Power Inactivity Indicator"},{"location":"OPERATION_USAGE/#optional-features","text":"Support for changing Cyclotron direction and to enable/disable smoke effects. Support for smoke effects with dedicated fans for the Booster Tube and N-Filter. See the Smoke Effects addendum for more information. Support for motorised inner cyclotron cake or outer cyclotron lighting. See the Inner Cyclotron for more information. Additional Lights available for the Cyclotron panel, internal \"cake\" Cyclotron, and Power Cell. Automatically switches to internal \"cake\" Cyclotron, if implemented (optional). This supports a 35-LED RGB ring light (by default) to be installed in the \"cake\". Other size LED rings or LED setups are supported in the configuration settings. Video game colours supported if using RGB-supported LEDs for the Cyclotron Lid, internal \"cake\" Cyclotron and Power Cell. Support for the Attenuator add-on device. See the Attenuator addendum for more information. Support for additional lights such as the wand hat lights and wand barrel end LED strobe. When adding the Hat1 light a New Barrel Wing Button can also be added. Serial connection and power for a 28-segment or 30-segment bargraph support (to replace the stock 5-LED bargraph). Location of optional hardware for Neutrona Wand, requires advanced modifications.","title":"Optional Features"},{"location":"OPERATION_USAGE/#top-dial-behaviour","text":"The primary purpose of the Top Dial on the top of the gun box is to change the power level of the wand, affecting the intensity of the stream effects (indicated by increasing or decreasing the bargraph lights just as the stock wand did). Rotate clockwise to raise power, and counter-clockwise to lower power. There are 5 wand power levels in Super Hero mode and 4 in Mode Original. For lower power levels, the proton stream is more red. On higher power levels, the stream will appear more yellow. Note that it is the other way around for 1989 mode to be more faithful to how proton streams appeared in that film. When Video Game Mode is active and the Neutrona Wand is ON and the top toggle switch is DOWN , rotating the Top Dial will switch between weapon modes. For a description of these modes please see the Video Game Mode section. \ud83d\udcdd Super Hero mode only The Top Dial is also used to navigate the menu systems (see \"Neutrona Wand Menu System\" section).","title":"Top Dial Behaviour"},{"location":"OPERATION_USAGE/#quick-audio-volume-adjustment","text":"System Volume While the Neutrona Wand is OFF and no music is playing, turn the Top Dial to quickly adjust the Proton Pack volume. While the Neutrona Wand is OFF , hold the Intensify button while turning the Top Dial to quickly adjust the Neutrona Wand volume. Music While the Neutrona Wand is OFF and music is playing, turn the Top Dial to quickly adjust the music volume. Refer to the Loading The Audio Files for more information on loading additional music tracks.","title":"Quick Audio Volume Adjustment"},{"location":"OPERATION_USAGE/#toggle-operation-modes","text":"There are two modes available which replicate movie or prop-accurate behaviors of the available toggle switches. These operational modes can be altered via an EEPROM menu and will affect the startup sequence for your Proton Pack and Neutrona Wand.","title":"Toggle Operation Modes"},{"location":"OPERATION_USAGE/#super-hero-mode-operation-guide","text":"Super Hero : This is the default operation mode based primarily on how the wand appeared to work in Ghostbusters: Afterlife.","title":"Super Hero Mode Operation Guide"},{"location":"OPERATION_USAGE/#activate-toggle","text":"Activate toggle on the gun box turns on both the Proton Pack and Neutrona Wand. The switch under the Proton Pack's Ion Arm does not need to be engaged for this to work. The switch under the Ion Arm will turn the cyclotron on. The green lever near the gunbox acts as a safety and must be pulled to extend the barrel before firing. While firing, the default bargraph animations slide/split the bargraph in half and scroll up and down simultaneously. Button Mash Lockout: If you press the firing button(s) too rapidly the system will malfunction and lock you out for a period of time proportional to the current power level.","title":"Activate Toggle"},{"location":"OPERATION_USAGE/#right-hand-toggle-switch-behaviour","text":"Right-hand toggles (Bottom and Top) affect the vent light and additional sound effects. The Neutrona Wand will not fire unless these switches are both turned on. Boot-Up Errors : If you attempt to boot up your Neutrona Wand while the top toggle switch is on, the Neutrona Wand will boot into a error mode. Turn the top toggle switch off and restart your Neutrona Wand to boot normally. This is the default behaviour , though this feature can be disabled in the Neutrona Wand EEPROM Configuration Menu. Quick Vent : If the Neutrona Wand is ON and the Top toggle switch is DOWN , pressing Intensify will perform a quick vent. Holding down Intensify will perform a full overheat sequence. This is the default behaviour , though this feature can be disabled in the Neutrona Wand EEPROM Configuration Menu. While in 1984 or 1989 theme mode: Bottom toggle switch turns on the vent light and plays the wand power up sound. Top toggle switch plays a single beep sound. While in Afterlife or Frozen Empire theme mode: Bottom toggle switch turns on the vent light and the wand plays a ramp up sound. Top toggle switch turns on the looping beeping sounds.","title":"Right-Hand Toggle Switch Behaviour"},{"location":"OPERATION_USAGE/#mode-original-prop-operation-guide","text":"Mode Original : This mode reflects original production documentation from 1984 on how the Proton Pack and Neutrona Wand operate together. Other variation differences are the bargraph animations, Neturona Wand sound effects and power levels. Note that the firing modes from the 2009 video game are unavailable in this mode as they are not accurate to these production notes. There are 4 power levels in Mode Original. When the Neutrona Wand is in standby mode (see toggle switch behaviours below), the bargraph settles on the first level. The switch under the Ion Arm on the Proton Pack must be switched on. This gives power to the entire system. The slo-blo light on the Neutrona Wand will turn solid red to indicate power to the system. If you are using a standalone Neutrona Wand without a Proton Pack, double-clicking the Intensify button while the Neutrona Wand is turned off will imitate flipping the switch under the Ion Arm. While firing, the default bargraph animations slide the bargraph up and down small increments to indicate the instability and power of the proton stream. Button Mash Lockout: If you press the firing button(s) too rapidly the system will malfunction and lock you out for a period of time proportional to the current power level.","title":"Mode Original (Prop) Operation Guide"},{"location":"OPERATION_USAGE/#right-hand-toggle-switch-behaviours","text":"The bottom toggle will put the Neutrona Wand into standby mode with an audible beep, and the slo-blo LED will begin to blink. If the bottom toggle is on the top toggle turns on the bargraph, the vent light, and Clippard LED and the heatup sound will play. The bargraph will ramp up and back down to the lowest level setting.","title":"Right-Hand Toggle Switch Behaviours"},{"location":"OPERATION_USAGE/#activate-toggle_1","text":"Activate toggle on the gun box turns on the cyclotron of the Proton Pack. To activate the cyclotron, both right hand toggle switches on the Neutrona Wand must be activated. The Cyclotron will not turn on unless both toggle switches on the Neutrona Wand are activated and the Ion Arm switch on the Pack is in the ON position. The green lever near the gunbox acts as a safety and must be pulled to extend the barrel before firing.","title":"Activate Toggle"},{"location":"OPERATION_USAGE/#system-modes","text":"","title":"System Modes"},{"location":"OPERATION_USAGE/#video-game-mode-default","text":"\ud83d\udcdd Super Hero mode only While the Neutrona Wand is ON and the top toggle switch is DOWN , rotating the Top Dial will select from the following weapon modes (listed in counter-clockwise order): Proton Stream (Default) Dark Matter Generator Plasm Distribution System Composite Particle System 1 Spectral (Rainbow) 2 Spectral (Holiday) 3 Spectral (Custom) 1 Spectral Mode (Rainbow) is a Proton Stream which gives a RAINBOW effect. If your Proton Pack has RGB LEDs, they will change to match. 2 Spectral (Holiday) is a Proton Stream which gives an ORANGE/PURPLE effect. You can press the Barrel Wing Button while ready to fire in this mode to switch to a RED/GREEN effect. If your Proton Pack has RGB LEDs, it will match these colours. 3 Spectral (Custom) is a Proton Stream with a user-defined colour mode. You can independently adjust the Neutrona Wand Barrel, Power Cell, Cyclotron and Inner Cyclotron colours directly from the EEPROM LED Menu system. The default colours are purple. \ud83d\udcdd Note: Spectral modes are disabled by default but can be enabled from the EEPROM Menu or flashed directly to the Neutrona Wand board. They take advantage of RGB coloured LED add-ons if installed.","title":"Video Game Mode (Default)"},{"location":"OPERATION_USAGE/#proton-stream","text":"Holding down Intensify will throw your normal Proton Stream. Pressing the Barrel Wing Button while you are already throwing a Proton Stream will initiate \"Cross the Streams\". Pressing the Barrel Wing Button will fire a Boson Dart.","title":"Proton Stream"},{"location":"OPERATION_USAGE/#dark-matter-generator","text":"Pressing Intensify will fire a Shock Blast. Holding down the Barrel Wing Button will throw a Stasis Stream.","title":"Dark Matter Generator"},{"location":"OPERATION_USAGE/#plasm-distribution-system","text":"Holding down Intensify will activate the Slime Blower. Pressing the Barrel Wing Button will fire a Slime Tether.","title":"Plasm Distribution System"},{"location":"OPERATION_USAGE/#composite-particle-system","text":"Pressing Intensify will fire the Meson Collider. Pressing the Barrel Wing Button will fire an Overload Pulse. Holding down the Barrel Wing Button allows for rapid-fire. The firing rate is dependent on the Neutrona Wand's current power level.","title":"Composite Particle System"},{"location":"OPERATION_USAGE/#proton-stream-effects","text":"As a nod to accuracy where possible, the proton streams are based on those observed from the movies. Most streams carry the same theme-based effects for power levels 1-4 (2-4 for Mode Original) while the maximum power setting will typically change slightly based on the final battle scenes from the respective movies. 1984 Power Level Notable Effects 1 Firing startup based on first encounter with Slimer 2 - Same - 3 - Same - 4 - Same - 5 Additional sparking sounds at \"full stream\" 1989 Power Level Notable Effects 1 Metallic \"clang\" as notable during the courtroom scene 2 - Same - 3 - Same - 4 - Same - 5 Uses the 1984 high power sound at \"full neutronas\" Afterlife Power Level Notable Effects 1 Uses the same effects as 1984 2 - Same - 3 - Same - 4 - Same - 5 New custom sounds specific for Afterlife Frozen Empire Power Level Notable Effects 1 Uses new startup sound as heard in Frozen Empire 2 - Same - 3 - Same - 4 - Same - 5 - Same -","title":"Proton Stream Effects"},{"location":"OPERATION_USAGE/#cross-the-streams-cts-cross-the-streams-mix-cts-mix","text":"The Barrel Wing Button at the end of the wand acts as a alternate firing button. When Cross The Streams is enabled, Video Game Modes are disabled and you will only have the Proton Stream on both Intensify and the Barrel Wing Button . The overheat features can only be triggered when holding the Barrel Wing Button when Cross The Streams mode is enabled. Pressing both the Intensify and Barrel Wing Button at the same time enables the \"Cross the Streams\" (CTS) audio and visual effects. Releasing either of the firing buttons will continue these effects as long as one is still held, and will end once both buttons are released. With Cross The Streams Mix, you need to hold both the Intensify and Barrel Wing Button at the same time to remain in Cross The Streams. Releasing one of the firing buttons will revert to the normal Proton Stream for that button. Cross The Streams (CTS) is the default firing mode for Mode Original. Cross The Streams (CTS) or Cross The Streams Mix (CTS Mix) modes can be selected from the Neutrona Wand Menu System.","title":"Cross The Streams (CTS) / Cross The Streams Mix (CTS Mix)"},{"location":"OPERATION_USAGE/#additional-resources","text":"","title":"Additional Resources"},{"location":"OPERATION_USAGE/#eeprom-menu-guide","text":"Please view the supplemental operation guide for EEPROM menus which can be used to alter hardware configurations and to set user preferences which will persist across battery power-down events.","title":"EEPROM Menu Guide"},{"location":"OPERATION_USAGE/#pdf-operational-guide","text":"(Direct Download link) GPStar Operational Guide [pdf]","title":"PDF Operational Guide"},{"location":"OPERATION_USAGE/#video-demos","text":"Video Demo: Features and Menu Walkthrough (YouTube, July 2023) Neutrona Wand Menu System Video Demo: Proton Pack Wand Menu Settings Video Demo (YouTube) Video Game Firing Modes: Ghostbusters: The Video Game (2009) Firing Modes (YouTube)","title":"Video Demos"},{"location":"PACK_PCB/","text":"GPStar Pack PCB Hookup This guide is part of the kit approach to providing a minimally-invasive upgrade to the stock HasLab controllers. For the Proton Pack all stock connections can be made using the available JST-XH connectors on all existing wiring. The diagram below details the standard HasLab connections. Proton Pack - Connection Details Connections for the pack should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom. Pins denoted D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\". Stock Connectors Label Pins Notes BATTERY 5V-IN +/- Power from battery. This MUST be a regulated 5V source! Volume D3/GND/D2 Rotary encoder connection for pack volume adjusted via crank generator knob. SW1 D31/GND Stock connection for main switch under the Ion Arm. SW3/SW4 GND/D27/D25/GND Stock connection for Cyclotron panel toggles: SW3 (2 pins on left side) = Year Mode Toggle. SW4 (2 pins on right side) = Vibration toggle. SW6 GND/D23 Stock connection for ribbon cable disconnection alarm (wire order does not matter). M1 VCC/GND Stock connection for pack vibration motor (D45) or cyclotron motor 1 . Power Cell VCC/D53/GND/PCCYC Stock connection for Power Cell LEDs (continues to Cyclotron Lid). Cyclotron D43/GND/PCCYC/VCC Stock connection Cyclotron lens LEDs (continues from Power Cell), includes lid sensor. 1 For more information on the motorised cyclotron modification see Inner Cyclotron . Special Connectors Label Pins Notes AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the pack's GPStar Audio or WAV Trigger. Connector type: JST-PH NEUTRONA WAND 5V-OUT +/- Power to the Neutrona Wand. Connector type: JST-XH NEURTONA WAND (Serial) RX2/TX2 Serial communication to the Neutrona Wand. Connector type: JST-XH ICSP DO NOT USE! Reserved header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V chip used for programming GPStar Audio or a WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! Optional Connectors Label Pins Notes SW-D D29/GND Cyclotron direction switch (wire order does not matter). Connector type: JST-XH SM-T GND/D37 Smoke Toggle switch to enable/disable smoke effects (wire order does not matter). Connector type: JST-XH SM-1 -/+ Smoke effects for the N-Filter (D39). SM-1 provides 5V during N-Filter smoke effects. You can connect a 5V pump to this pin to power it, or use it to trigger a relay for off the shelf smoke solutions. Connector type: JST-XH Do not draw more than 1.5amps from this connector. FN-1 -/+ Fan for N-Filter smoke (D33). FN-1 provides 5V during N-Filter smoke effects. During the overheat sequence, it is timed to go off at the same time as the N-Filter light. You can connect a 5V fan to this pin if desired or to trigger a relay. Connector type: JST-XH Do not draw more than 1.5amps from this connector. SM-2 -/+ Smoke effects for the Booster Tube (D35). SM-2 provides 5V during Booster Tube smoke effects. You can connect a 5V pump to this pin to power it, or use it to trigger a relay for off the shelf smoke solutions. Do not draw more than 1.5amps from this connector. FN-2 -/+ Fan for the Booster Tube smoke (D50). FN-2 provides 5V during Booster Tube smoke effects. You can connect a 5V fan to this pin if desired or use it to trigger a relay. Connector type: JST-XH Do not draw more than 1.5amps from this connector. NEO-C D13/VCC/GND Neopixel LED ring for Inner Cyclotron \"Cake\". Connector type: JST-XH P.RED D4/GND/D5/GND Cyclotron Panel LEDs: 2x Red. D4 and D5 provides 5V and has a 150\u03a9 resistor connected to each of them. Do not draw more than 40mA from each LED connection. P.YELLOW D6/GND/D7/GND Cyclotron Panel LEDs: 2x Yellow. D6 and D7 provides 5V and has a 150\u03a9 resistor connected to each of them. Connector type: JST-XH Do not draw more than 40mA from each LED connection. P.GREEN D8/GND/D9/GND Cyclotron Panel LEDs: 2x Green. D8 and D9 provides 5V and has a 100\u03a9 resistor connected to each of them. Connector type: JST-XH Do not draw more than 40mA from each LED connection. P.SWITCH D10/GND/D11/GND JST-XH Cyclotron Panel LEDs: 1x Green (Mode Indicator, D10) and 1x Yellow (Vibration Enabled, D11). D10 and D11 provides 5V. D10 and has a 100\u03a9 resistor connected to it and D11 has a 150\u03a9 resistor connected to it. Connector type: JST-XH Do not draw more than 40mA from each LED connection. LED-W D46/GND Connection for a standalone white LED in the N-Filter. D46 provides 5V and has a 100\u03a9 resistor connected to it. Connector type: JST-XH Do not draw more than 40mA from this connector. 5V-OUT +/- Power for additional accessories. Commonly used to power an ESP32 wireless board or Attenuator. Connector type: JST-XH Do not draw more than 1.5amps from this connector. SCL/SDA SCL/SDA Expansion serial port using I2C. Used to connect to the Frutto Technologies Current Sense board for GPStar Lite. Connector type: JST-XH RX1/TX1 RX1/TX1 Expansion serial port. Used to connect to an ESP32 wireless board or Attenuator. Connector type: JST-XH","title":"Proton Pack"},{"location":"PACK_PCB/#proton-pack-connection-details","text":"Connections for the pack should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom. Pins denoted D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\".","title":"Proton Pack - Connection Details"},{"location":"PACK_PCB/#stock-connectors","text":"Label Pins Notes BATTERY 5V-IN +/- Power from battery. This MUST be a regulated 5V source! Volume D3/GND/D2 Rotary encoder connection for pack volume adjusted via crank generator knob. SW1 D31/GND Stock connection for main switch under the Ion Arm. SW3/SW4 GND/D27/D25/GND Stock connection for Cyclotron panel toggles: SW3 (2 pins on left side) = Year Mode Toggle. SW4 (2 pins on right side) = Vibration toggle. SW6 GND/D23 Stock connection for ribbon cable disconnection alarm (wire order does not matter). M1 VCC/GND Stock connection for pack vibration motor (D45) or cyclotron motor 1 . Power Cell VCC/D53/GND/PCCYC Stock connection for Power Cell LEDs (continues to Cyclotron Lid). Cyclotron D43/GND/PCCYC/VCC Stock connection Cyclotron lens LEDs (continues from Power Cell), includes lid sensor. 1 For more information on the motorised cyclotron modification see Inner Cyclotron .","title":"Stock Connectors"},{"location":"PACK_PCB/#special-connectors","text":"Label Pins Notes AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the pack's GPStar Audio or WAV Trigger. Connector type: JST-PH NEUTRONA WAND 5V-OUT +/- Power to the Neutrona Wand. Connector type: JST-XH NEURTONA WAND (Serial) RX2/TX2 Serial communication to the Neutrona Wand. Connector type: JST-XH ICSP DO NOT USE! Reserved header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V chip used for programming GPStar Audio or a WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector!","title":"Special Connectors"},{"location":"PACK_PCB/#optional-connectors","text":"Label Pins Notes SW-D D29/GND Cyclotron direction switch (wire order does not matter). Connector type: JST-XH SM-T GND/D37 Smoke Toggle switch to enable/disable smoke effects (wire order does not matter). Connector type: JST-XH SM-1 -/+ Smoke effects for the N-Filter (D39). SM-1 provides 5V during N-Filter smoke effects. You can connect a 5V pump to this pin to power it, or use it to trigger a relay for off the shelf smoke solutions. Connector type: JST-XH Do not draw more than 1.5amps from this connector. FN-1 -/+ Fan for N-Filter smoke (D33). FN-1 provides 5V during N-Filter smoke effects. During the overheat sequence, it is timed to go off at the same time as the N-Filter light. You can connect a 5V fan to this pin if desired or to trigger a relay. Connector type: JST-XH Do not draw more than 1.5amps from this connector. SM-2 -/+ Smoke effects for the Booster Tube (D35). SM-2 provides 5V during Booster Tube smoke effects. You can connect a 5V pump to this pin to power it, or use it to trigger a relay for off the shelf smoke solutions. Do not draw more than 1.5amps from this connector. FN-2 -/+ Fan for the Booster Tube smoke (D50). FN-2 provides 5V during Booster Tube smoke effects. You can connect a 5V fan to this pin if desired or use it to trigger a relay. Connector type: JST-XH Do not draw more than 1.5amps from this connector. NEO-C D13/VCC/GND Neopixel LED ring for Inner Cyclotron \"Cake\". Connector type: JST-XH P.RED D4/GND/D5/GND Cyclotron Panel LEDs: 2x Red. D4 and D5 provides 5V and has a 150\u03a9 resistor connected to each of them. Do not draw more than 40mA from each LED connection. P.YELLOW D6/GND/D7/GND Cyclotron Panel LEDs: 2x Yellow. D6 and D7 provides 5V and has a 150\u03a9 resistor connected to each of them. Connector type: JST-XH Do not draw more than 40mA from each LED connection. P.GREEN D8/GND/D9/GND Cyclotron Panel LEDs: 2x Green. D8 and D9 provides 5V and has a 100\u03a9 resistor connected to each of them. Connector type: JST-XH Do not draw more than 40mA from each LED connection. P.SWITCH D10/GND/D11/GND JST-XH Cyclotron Panel LEDs: 1x Green (Mode Indicator, D10) and 1x Yellow (Vibration Enabled, D11). D10 and D11 provides 5V. D10 and has a 100\u03a9 resistor connected to it and D11 has a 150\u03a9 resistor connected to it. Connector type: JST-XH Do not draw more than 40mA from each LED connection. LED-W D46/GND Connection for a standalone white LED in the N-Filter. D46 provides 5V and has a 100\u03a9 resistor connected to it. Connector type: JST-XH Do not draw more than 40mA from this connector. 5V-OUT +/- Power for additional accessories. Commonly used to power an ESP32 wireless board or Attenuator. Connector type: JST-XH Do not draw more than 1.5amps from this connector. SCL/SDA SCL/SDA Expansion serial port using I2C. Used to connect to the Frutto Technologies Current Sense board for GPStar Lite. Connector type: JST-XH RX1/TX1 RX1/TX1 Expansion serial port. Used to connect to an ESP32 wireless board or Attenuator. Connector type: JST-XH","title":"Optional Connectors"},{"location":"POWER/","text":"Power Requirements You will need a suitable power supply to run the pack controller, 2 sound boards, the wand controller, and optionally any audio amplifiers and smoke effects. If looking for configuration options for the latter, please view the SMOKE guide for diagrams and references. Voltage The controller, sound boards, and all LEDs will all require 5VDC which is the standard voltage for USB devices. For this reason many simple battery packs used by the community have been using a USB to JST-XH connector for the stock HasLab equipment. For most audio amplifier choices used with the pack those devices typically require 9-12V. Meanwhile, the components required for smoke kits may use as little as 3.7V or require up to 12V. Note: You will most likely be using a rechargeable lithium-ion battery or similar to power your equipment. Unlike Alkaline batteries these do not drop in voltage as they discharge, but keep up a continuous voltage until their capacity is nearly depleted--at which time the internal circuitry will simply stop providing output. As such, reading voltage is not a reliable means of estimating battery life remaining. 2025 Update - The new GPStar Amplifier II and Power Hub II devices now allow your system to be 24V compatible. These devices can take 12V or 24V source voltage as input while still providing 5V distribution for accessories. Power Draw In addition to voltage we need to consider the amperage required for running components. You will need a power source which can deliver at least 0.6A to run the most basic kit, while additional upgrades such as the 48-LED barrel will require a minimum of 0.8A to run effectively. The 12V batteries offered by Talentcell are a popular choice as they provide up to 2A from the USB port and 3A from the 12V barrel jack. Next is the matter of how long you may wish to run your pack. For those who \"troop\" or will use their equipment for events, you need a long runtime which is a factor of the battery's Amp-Hour rating (typically stated in milli-Amp-hour or mAh). To estimate how long your battery will last you would need to know how many Amps are required to run your kit at a maximum, then divide the mAh rating by Amps. For example, a 3000mAh battery is equivalent to 3Ah, which at a constant 0.8A draw would run for approximately 3.75hrs. June 2024 Update - Since the advent of this kit several components have been added as optional equipment, and some as alternatives to original parts. When using the pack and wand controllers with GPStar Audio boards, an ESP32 and Attenuator kit, all possible wand lighting upgrades, and the GPStar Amplifier the total power draw is around 0.35A at idle and around 0.93A while firing all effects. If adding a single smoke kit for the N-Filter during overheat/venting the maximum power draw is closer to 2.92A which is approaching the maximum rating for the Talentcell batteries. Warnings \"I'm fuzzy on the whole good/bad thing. What do you mean, 'bad'?\" -Dr. Venkman For purposes of a DIY approach, in no case should you use the Arduino Mega's barrel jack to convert 12VDC into 5VDC for that board, nor use the 5V pin on the controller for running any other devices. The power converter on the microcontroller can become hot and may burn out over time, or you could easily draw more power than the Arduino can sustain, causing the need to replace the entire controller. Your best option is to utilize the 5V pin (and GND) to power any Arduino controllers which should come from a stable regulated 5V power source. The D-cell batteries supplied with the stock equipment may not be sufficient for the long runtimes expected by the solutions offered by these guides--furthermore, Alkaline batteries will exhibit a voltage drop as they drain which can fall below the minimum necessary to run the Arduino controllers. Any battery pack which uses PD (power delivery) is not recommended, nor is use of USB-C connections as these could potentially supply up to 100W of power and could destroy your equipment. Using standard USB-A connections is recommended as there are dedicated power wires which are easy to access from a modified cable and is typically limited to 2-3 Amps for output. Putting too high a load on a rechargeable battery is not good long-term for the battery or the components. The battery will be limited to a maximum output in terms of both voltage and camperage. In some cases this can present as degraded behavior for the component (eg. smoke air pumps run slower) or it could affect the controllers causing stuttering or other unexpected behavior. You are encouraged to put high-draw devices on their own separate battery or otherwise limit smoke effects to 1 device per battery if sharing with the pack/wand electronics. When using the new GPStar Amplifier in your Proton Pack, do not run more than 1 smoke device (vape coil + air pump) from any of the provided 5V JST-XH connections. The built-in voltage regulator can only provide a maximum of 3A, and when running all of the pack/wand components plus a single 5V smoke device can easily approach that maximum. Similarly, if using the GPStar Power Hub this also uses the same voltage regulator and should not be used to drive more than 2 smoke device. Options Good A standard USB battery pack with a USB-to-JST cable to deliver only the +5VDC and Ground (-) for use by all components. YMMV based on the option you choose, but it MUST support at least 2A of power for the core electronics, exclusive of any smoke effects. See the next 2 options for more recommended solutions. Better A TalentCell 1 battery pack which only offers a 12VDC output or both USB connections and 12VDC output . For models which support USB, use of a USB-to-JST cable can provide power to the core electronics while the 12VDC barrel jack will be used for the audio amplifier in the pack. Best Either of the TalentCell 1 battery packs just mentioned in conjunction with the GPStar Amplifier . The latter device connects easily using a barrel jack, such as the splitter provided with the TalentCell battery for simultaneous charging and use. The amplifier contains a built-in power regulator and multiple 5VDC JST-XH ports for connecting your GPStar Pack Controller, sending power to the Neutrona Wand, and power for the Attenuator or wireless adapter. 1 TalentCell batteries come in a variety of amp-hour ratings, though 3000mAh or 6000mAh are common capacities. Ultimate With the introduction of the GPStar Amplifier II and Power Hub II devices your Proton Pack can be adapted to run on a 24V input voltage! This will require a suitable battery such as the TalentCell 24V 82.88Wh Battery, model PB240A1 . Using Multiple Power Sources For those who wish to make use of smoke effects, the need for multiple batteries has become more apparent and recommended. Every addition and upgrade to your pack and wand comes at a cost of power, and as of 2024 the number of LEDs in use may require up to 1.2A just for the base system functionality. While most DIY and community smoke kits may require 1.5-2.5A each, which easily pushes the stated limit (3A) of a single TalentCell battery. Please follow our diagrams in the Smoke Guide for more information about how to make use of multiple batteries. With the addition of the GPStar Power Hub this is much easier as you can use a single device with a standalone battery to operate up to 2 smoke kits simultaneously. Per our recommendations, smoke kits can and should be triggered by use of a relay which also makes this scenario possible, as it provides isolation between the power source to the primary electronics from the high-draw heating elements used in most smoke kits. Charging Switch Some users have made use of what's called the \"DPDT Mod\" which uses any standard \"Dual-Pole, Dual-Throw\" toggle or switch to act as a master kill switch to the electronics, but allowing a Talentcell battery to be charged. Assuming you use both the 5V from the USB port and 12V from the barrel jack on a standard Talentcell battery (regardless of mAh capacity), the basic installation would look like this: A 5.5mm x 2.1mm (or 5521) female port is installed on the Proton Pack as a charging port All ground connections are tied together: from the USB, Barrel Jack, and Charging Port Each positive (+) connection is attached to a post on the toggle or switch as follows: The 12V+ and 5V+ to the Proton Pack are connected to the upper posts of the toggle/switch The Barrel Jack's 12V+ and USB's 5V+ are connected to the center posts of the toggle/switch ONLY the 12V+ from the charging port is connected to the end OPPOSITE the Proton Pack connections For a visual aid see the ASCII drawing below for reference. The 12V is intended to go to your audio amplifier, while the 5V goes to the Proton Pack PCB. If using the GPStar Audio Amp which can supply 5V to your pack/wand PCB's you can simply use the 12V connection only and ignore all 5V connections shown/mentioned. Note: In order to use the Talentcell or charge it, the battery itself must be in the ON position. If you wish to conserve power once charged, turn off the battery via its built-in switch if you intend to store or not use your equipment for a long period. Proton Pack -------------- Negative from Common Ground | Amp PCB ----- Negative from Common Ground |+ |+ =========== |12V+ 5V+| | | | | |12V+ 5V+| == Common Center to Battery (Jack/USB) | | | |12V+ NC*| *No Connection for 5V+ side (USB) =========== |+ Charging Port -- Negative from Common Ground","title":"Power Requirements"},{"location":"POWER/#power-requirements","text":"You will need a suitable power supply to run the pack controller, 2 sound boards, the wand controller, and optionally any audio amplifiers and smoke effects. If looking for configuration options for the latter, please view the SMOKE guide for diagrams and references.","title":"Power Requirements"},{"location":"POWER/#voltage","text":"The controller, sound boards, and all LEDs will all require 5VDC which is the standard voltage for USB devices. For this reason many simple battery packs used by the community have been using a USB to JST-XH connector for the stock HasLab equipment. For most audio amplifier choices used with the pack those devices typically require 9-12V. Meanwhile, the components required for smoke kits may use as little as 3.7V or require up to 12V. Note: You will most likely be using a rechargeable lithium-ion battery or similar to power your equipment. Unlike Alkaline batteries these do not drop in voltage as they discharge, but keep up a continuous voltage until their capacity is nearly depleted--at which time the internal circuitry will simply stop providing output. As such, reading voltage is not a reliable means of estimating battery life remaining. 2025 Update - The new GPStar Amplifier II and Power Hub II devices now allow your system to be 24V compatible. These devices can take 12V or 24V source voltage as input while still providing 5V distribution for accessories.","title":"Voltage"},{"location":"POWER/#power-draw","text":"In addition to voltage we need to consider the amperage required for running components. You will need a power source which can deliver at least 0.6A to run the most basic kit, while additional upgrades such as the 48-LED barrel will require a minimum of 0.8A to run effectively. The 12V batteries offered by Talentcell are a popular choice as they provide up to 2A from the USB port and 3A from the 12V barrel jack. Next is the matter of how long you may wish to run your pack. For those who \"troop\" or will use their equipment for events, you need a long runtime which is a factor of the battery's Amp-Hour rating (typically stated in milli-Amp-hour or mAh). To estimate how long your battery will last you would need to know how many Amps are required to run your kit at a maximum, then divide the mAh rating by Amps. For example, a 3000mAh battery is equivalent to 3Ah, which at a constant 0.8A draw would run for approximately 3.75hrs. June 2024 Update - Since the advent of this kit several components have been added as optional equipment, and some as alternatives to original parts. When using the pack and wand controllers with GPStar Audio boards, an ESP32 and Attenuator kit, all possible wand lighting upgrades, and the GPStar Amplifier the total power draw is around 0.35A at idle and around 0.93A while firing all effects. If adding a single smoke kit for the N-Filter during overheat/venting the maximum power draw is closer to 2.92A which is approaching the maximum rating for the Talentcell batteries.","title":"Power Draw"},{"location":"POWER/#warnings","text":"\"I'm fuzzy on the whole good/bad thing. What do you mean, 'bad'?\" -Dr. Venkman For purposes of a DIY approach, in no case should you use the Arduino Mega's barrel jack to convert 12VDC into 5VDC for that board, nor use the 5V pin on the controller for running any other devices. The power converter on the microcontroller can become hot and may burn out over time, or you could easily draw more power than the Arduino can sustain, causing the need to replace the entire controller. Your best option is to utilize the 5V pin (and GND) to power any Arduino controllers which should come from a stable regulated 5V power source. The D-cell batteries supplied with the stock equipment may not be sufficient for the long runtimes expected by the solutions offered by these guides--furthermore, Alkaline batteries will exhibit a voltage drop as they drain which can fall below the minimum necessary to run the Arduino controllers. Any battery pack which uses PD (power delivery) is not recommended, nor is use of USB-C connections as these could potentially supply up to 100W of power and could destroy your equipment. Using standard USB-A connections is recommended as there are dedicated power wires which are easy to access from a modified cable and is typically limited to 2-3 Amps for output. Putting too high a load on a rechargeable battery is not good long-term for the battery or the components. The battery will be limited to a maximum output in terms of both voltage and camperage. In some cases this can present as degraded behavior for the component (eg. smoke air pumps run slower) or it could affect the controllers causing stuttering or other unexpected behavior. You are encouraged to put high-draw devices on their own separate battery or otherwise limit smoke effects to 1 device per battery if sharing with the pack/wand electronics. When using the new GPStar Amplifier in your Proton Pack, do not run more than 1 smoke device (vape coil + air pump) from any of the provided 5V JST-XH connections. The built-in voltage regulator can only provide a maximum of 3A, and when running all of the pack/wand components plus a single 5V smoke device can easily approach that maximum. Similarly, if using the GPStar Power Hub this also uses the same voltage regulator and should not be used to drive more than 2 smoke device.","title":"Warnings"},{"location":"POWER/#options","text":"","title":"Options"},{"location":"POWER/#good","text":"A standard USB battery pack with a USB-to-JST cable to deliver only the +5VDC and Ground (-) for use by all components. YMMV based on the option you choose, but it MUST support at least 2A of power for the core electronics, exclusive of any smoke effects. See the next 2 options for more recommended solutions.","title":"Good"},{"location":"POWER/#better","text":"A TalentCell 1 battery pack which only offers a 12VDC output or both USB connections and 12VDC output . For models which support USB, use of a USB-to-JST cable can provide power to the core electronics while the 12VDC barrel jack will be used for the audio amplifier in the pack.","title":"Better"},{"location":"POWER/#best","text":"Either of the TalentCell 1 battery packs just mentioned in conjunction with the GPStar Amplifier . The latter device connects easily using a barrel jack, such as the splitter provided with the TalentCell battery for simultaneous charging and use. The amplifier contains a built-in power regulator and multiple 5VDC JST-XH ports for connecting your GPStar Pack Controller, sending power to the Neutrona Wand, and power for the Attenuator or wireless adapter. 1 TalentCell batteries come in a variety of amp-hour ratings, though 3000mAh or 6000mAh are common capacities.","title":"Best"},{"location":"POWER/#ultimate","text":"With the introduction of the GPStar Amplifier II and Power Hub II devices your Proton Pack can be adapted to run on a 24V input voltage! This will require a suitable battery such as the TalentCell 24V 82.88Wh Battery, model PB240A1 .","title":"Ultimate"},{"location":"POWER/#using-multiple-power-sources","text":"For those who wish to make use of smoke effects, the need for multiple batteries has become more apparent and recommended. Every addition and upgrade to your pack and wand comes at a cost of power, and as of 2024 the number of LEDs in use may require up to 1.2A just for the base system functionality. While most DIY and community smoke kits may require 1.5-2.5A each, which easily pushes the stated limit (3A) of a single TalentCell battery. Please follow our diagrams in the Smoke Guide for more information about how to make use of multiple batteries. With the addition of the GPStar Power Hub this is much easier as you can use a single device with a standalone battery to operate up to 2 smoke kits simultaneously. Per our recommendations, smoke kits can and should be triggered by use of a relay which also makes this scenario possible, as it provides isolation between the power source to the primary electronics from the high-draw heating elements used in most smoke kits.","title":"Using Multiple Power Sources"},{"location":"POWER/#charging-switch","text":"Some users have made use of what's called the \"DPDT Mod\" which uses any standard \"Dual-Pole, Dual-Throw\" toggle or switch to act as a master kill switch to the electronics, but allowing a Talentcell battery to be charged. Assuming you use both the 5V from the USB port and 12V from the barrel jack on a standard Talentcell battery (regardless of mAh capacity), the basic installation would look like this: A 5.5mm x 2.1mm (or 5521) female port is installed on the Proton Pack as a charging port All ground connections are tied together: from the USB, Barrel Jack, and Charging Port Each positive (+) connection is attached to a post on the toggle or switch as follows: The 12V+ and 5V+ to the Proton Pack are connected to the upper posts of the toggle/switch The Barrel Jack's 12V+ and USB's 5V+ are connected to the center posts of the toggle/switch ONLY the 12V+ from the charging port is connected to the end OPPOSITE the Proton Pack connections For a visual aid see the ASCII drawing below for reference. The 12V is intended to go to your audio amplifier, while the 5V goes to the Proton Pack PCB. If using the GPStar Audio Amp which can supply 5V to your pack/wand PCB's you can simply use the 12V connection only and ignore all 5V connections shown/mentioned. Note: In order to use the Talentcell or charge it, the battery itself must be in the ON position. If you wish to conserve power once charged, turn off the battery via its built-in switch if you intend to store or not use your equipment for a long period. Proton Pack -------------- Negative from Common Ground | Amp PCB ----- Negative from Common Ground |+ |+ =========== |12V+ 5V+| | | | | |12V+ 5V+| == Common Center to Battery (Jack/USB) | | | |12V+ NC*| *No Connection for 5V+ side (USB) =========== |+ Charging Port -- Negative from Common Ground","title":"Charging Switch"},{"location":"POWERCELL/","text":"Power Cell Replacement (Optional) This demonstrates how to replace the stock Power Cell LED array (single-color) with a 15 element RGB array. Installation Guide Video 15 LED Power Cell Addon Installation Guide Video (YouTube)","title":"Power Cell"},{"location":"POWERCELL/#power-cell-replacement-optional","text":"This demonstrates how to replace the stock Power Cell LED array (single-color) with a 15 element RGB array.","title":"Power Cell Replacement (Optional)"},{"location":"POWERCELL/#installation-guide-video","text":"15 LED Power Cell Addon Installation Guide Video (YouTube)","title":"Installation Guide Video"},{"location":"SERIAL1/","text":"GPStar Serial1 Expansion Controller The \"Serial1\" expansion port on the GPStar Proton Pack PCB allows you to connect a device which can offer more functionality with your entire Proton Pack and Neutrona Wand system. At present the only supported uses are as a \"Pack Attenuator\" or a \"Wireless Adapter\". Both use-cases are provided by the same software which normally drives the Attenuator device--in the case of the wireless adapter is simply used without switches or other peripherals to only provide WiFi capability to your Proton Pack. Please read the following guides for more specific details. Please note that the original Attenuator DIY guide used an Arduino Nano which is no longer capable of providing the storage space required by the full range of features supported and that hardware has been deprecated in favor of the ESP32 platform. Pack Attenuator - Full Device Implementation (w/ Switches and Inputs) Wireless Adapter - Scaled-Down Attenuator (No Physical User Inputs)","title":"Overview"},{"location":"SINGLESHOT/","text":"Single-Shot Blaster aka. Wrist Thrower, Compact Arm Thrower, Frozen Empire Arm Gauntlet It may go by many names, though we know it as the arm-mounted Neutrona Wand as seen in Frozen Empire. For purposes of this guide we'll use the official name straight from the source when Adam Savage met the propmaster for a look at the device . This guide covers the use of components as typically used for a standard Neutrona Wand, repurposed to bring life to this device. External Shell - Completed or Models There is no shortage of resources for the device shell itself, as it has been modeled and remixed by several members of the Ghostbusters community. Below are some of the found sources offering either the 3D files or pre-printed parts. If you know of another resource for either please let us know and we'll update this list. 3D Files by EctoLabs 3D Files by Right Coast Creative (Craig Rivest, aka. @scoleri_brothers) Ghostbusters Frozen Empire Compact Arm Thrower by ShapeforgeProps Bill of Materials The following list of parts will allow you to assemble the electronics and internal components to run the device. For a complete list of additional cosmetic parts and advice on assembly of the external components please see the incredibly detailed Build Guide on GBFans by EctoLabs. Qty Desc Use Link 1 GPStar Neutrona Wand PCB Main device controller Direct from GPStar 1 GPStar Audio Controller Sound driver with amplifier Direct from GPStar 2 GPStar 7-LED Jewel RGB lighting for barrel and cyclotron Direct from GPStar 1 GPStar Power Boost USB-C For battery 1 power + charging Direct from GPStar 1 4Ohm 40mm 3W Speaker Primary speaker (under heatsink) https://a.co/d/bNin47P 1 KY-040 Rotary Encoder Top rotary dial https://a.co/d/0wo1bSq 1 12mm Momentary Push Button Hand grip button https://a.co/d/8QxaSBm 1 DC Coreless Vibration Motors Vibration feedback https://a.co/d/iMxmbfp 3 Mini SPST Toggle Switches Device switches https://a.co/d/84qX5Yz 2 Mini Momentary Switches Device buttons https://a.co/d/6e83Clb 1 15mm x 5mm Convex Lens Barrel lens https://a.co/d/8Mr8ZMc 5 5MM 3V Prewired LEDs Various colored lights https://a.co/d/hqEyph8 1 OPTIONAL: Micro UART Programmer For built-in programming via USB https://a.co/d/ibHTVA5 1 Micro Slide Switch Turn battery output on/off https://a.co/d/hVaKDSl 1 3.7V LiPo or Li-Ion Battery 2 Rechargeable lithium battery (min 2500mAh) https://a.co/d/gQlJsY0 https://a.co/d/gML6MVC 1 While most Lithium batteries come with a JST-PH connector by default, the polarity may be reversed. Please observe the correct polarity for the booster/charger device! With the silver tabs up and the JST socket facing toward you, the positive (red) lead should be on the right. There will be -/+ markings on the power connector to the GPStar Power Boost to help you confirm BEFORE plugging in the battery. 2 Battery power must be at least 2500mAh (2.5Ah) to provide sufficient power to the booster. This device will draw around 0.8A at full volume. PCB Connection Details Connections for the device should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom right. Pins denoted A#/D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\". Socket Connections (JST-PH) Label Pins Notes 5V-IN +/- 2-pin JST-PH for power from internal battery This MUST be a regulated 5V source! Q2 VCC/D10/GND 3-pin JST-PH connection for all addressable LEDs 3 SW45/SW4 GND/D2/GND/D3 4-pin JST-PH connection for the Intensify button and Activate toggle SW6 GND/A6 2-pin JST-PH connection for the hand-grip mode/fire switch 3 The 3-pin connector for the LEDs will connect to a pair of 7-LED \"jewel\" boards as built by GPStar Technologies. These will be installed and addressed by the controller in the order of the barrel first, followed by the cyclotron. Wire Connectors (Terminal Blocks) Label/Pin Notes D8 Slo-Blo VCC GND Slo-Blo GND D4 Lower-right Toggle (wire order does not matter) GND Lower-right Toggle (wire order does not matter) A0 Upper-right Toggle (wire order does not matter) GND Upper-right Toggle (wire order does not matter) D9 Clippard LED (Top Left) VCC GND Clippard LED (Top Left) GND R+ Rumble (vibration) motor VCC R- Rumble (vibration) motor GND VCC Power (+) for rotary encoder D12 Blinking top right LED / RGB vent light data D13 White vent light LED VL+ VCC for top/vent lights D7 Rotary encoder B (DT) D6 Rotary encoder A (CLK) ROT- Ground for rotary encoder Special Connectors Label Pins Notes HAT2 GND/D23 Connection for the wand box hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D23 provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. SCL/SDA SCL/SDA Reserved for the 28-segment or 30-segment bargraph using I2C. Connector type: JST-PH 5V-OUT +/- Power for the bargraph. Connector type: JST-PH AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the wands's GPStar Audio or WAV Trigger. Connector type: JST-PH ICSP DO NOT USE! Programming header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Audio or WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! Battery Power Per the BOM above, use of a 2000mAh or higher battery is crucial for supplying enough power for a full day of use. This MUST be a Lithium battery (either LiPo or Li-Ion) with a 3.7V output. The charging circuit is intended for use with Lithium batteries only. Again, Lithium! Both the GPStar Power Boost device for boosting and charging your battery offer 2 pairs of pins which are of importance here: Power Switch (Optional, but Recommended) Adding a switch to the GPStar Power Boost device will allow you to fully turn off the device without draining the rechargeable battery. By default the device is always on and converting the 3.7V source to 5V for the electronics. EN - This is the 'enable' pin. To turn off the booster, connect this pin to ground. The switch can be as small as you like, it is just a signal. When the chip is disabled the output is completely disconnected from the input. GND - This is the shared ground connection which may be used with the 'EN' pin. Boosted Output 5V OUT - This is the boosted output. The pin closest to the USB-C port is the (+) while the further pin is (-). Operation Guide Full guide will be written as features are completed and operation is determined. Firmware Updates Please follow the standard FLASHING guide using the binaries/blaster/SingleShot.hex firmware file. Software Development Requirements As of the v5.4.0 release the development platform of choice for this device has been migrated from Arduino IDE to the VSCode with PlatformIO . Please follow the linked guide for installing the core software and plugins required. All libraries required by the project will be downloaded automatically.","title":"Single-Shot Blaster"},{"location":"SINGLESHOT/#single-shot-blaster","text":"","title":"Single-Shot Blaster"},{"location":"SINGLESHOT/#aka-wrist-thrower-compact-arm-thrower-frozen-empire-arm-gauntlet","text":"It may go by many names, though we know it as the arm-mounted Neutrona Wand as seen in Frozen Empire. For purposes of this guide we'll use the official name straight from the source when Adam Savage met the propmaster for a look at the device . This guide covers the use of components as typically used for a standard Neutrona Wand, repurposed to bring life to this device.","title":"aka. Wrist Thrower, Compact Arm Thrower, Frozen Empire Arm Gauntlet"},{"location":"SINGLESHOT/#external-shell-completed-or-models","text":"There is no shortage of resources for the device shell itself, as it has been modeled and remixed by several members of the Ghostbusters community. Below are some of the found sources offering either the 3D files or pre-printed parts. If you know of another resource for either please let us know and we'll update this list. 3D Files by EctoLabs 3D Files by Right Coast Creative (Craig Rivest, aka. @scoleri_brothers) Ghostbusters Frozen Empire Compact Arm Thrower by ShapeforgeProps","title":"External Shell - Completed or Models"},{"location":"SINGLESHOT/#bill-of-materials","text":"The following list of parts will allow you to assemble the electronics and internal components to run the device. For a complete list of additional cosmetic parts and advice on assembly of the external components please see the incredibly detailed Build Guide on GBFans by EctoLabs. Qty Desc Use Link 1 GPStar Neutrona Wand PCB Main device controller Direct from GPStar 1 GPStar Audio Controller Sound driver with amplifier Direct from GPStar 2 GPStar 7-LED Jewel RGB lighting for barrel and cyclotron Direct from GPStar 1 GPStar Power Boost USB-C For battery 1 power + charging Direct from GPStar 1 4Ohm 40mm 3W Speaker Primary speaker (under heatsink) https://a.co/d/bNin47P 1 KY-040 Rotary Encoder Top rotary dial https://a.co/d/0wo1bSq 1 12mm Momentary Push Button Hand grip button https://a.co/d/8QxaSBm 1 DC Coreless Vibration Motors Vibration feedback https://a.co/d/iMxmbfp 3 Mini SPST Toggle Switches Device switches https://a.co/d/84qX5Yz 2 Mini Momentary Switches Device buttons https://a.co/d/6e83Clb 1 15mm x 5mm Convex Lens Barrel lens https://a.co/d/8Mr8ZMc 5 5MM 3V Prewired LEDs Various colored lights https://a.co/d/hqEyph8 1 OPTIONAL: Micro UART Programmer For built-in programming via USB https://a.co/d/ibHTVA5 1 Micro Slide Switch Turn battery output on/off https://a.co/d/hVaKDSl 1 3.7V LiPo or Li-Ion Battery 2 Rechargeable lithium battery (min 2500mAh) https://a.co/d/gQlJsY0 https://a.co/d/gML6MVC 1 While most Lithium batteries come with a JST-PH connector by default, the polarity may be reversed. Please observe the correct polarity for the booster/charger device! With the silver tabs up and the JST socket facing toward you, the positive (red) lead should be on the right. There will be -/+ markings on the power connector to the GPStar Power Boost to help you confirm BEFORE plugging in the battery. 2 Battery power must be at least 2500mAh (2.5Ah) to provide sufficient power to the booster. This device will draw around 0.8A at full volume.","title":"Bill of Materials"},{"location":"SINGLESHOT/#pcb-connection-details","text":"Connections for the device should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom right. Pins denoted A#/D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\".","title":"PCB Connection Details"},{"location":"SINGLESHOT/#socket-connections-jst-ph","text":"Label Pins Notes 5V-IN +/- 2-pin JST-PH for power from internal battery This MUST be a regulated 5V source! Q2 VCC/D10/GND 3-pin JST-PH connection for all addressable LEDs 3 SW45/SW4 GND/D2/GND/D3 4-pin JST-PH connection for the Intensify button and Activate toggle SW6 GND/A6 2-pin JST-PH connection for the hand-grip mode/fire switch 3 The 3-pin connector for the LEDs will connect to a pair of 7-LED \"jewel\" boards as built by GPStar Technologies. These will be installed and addressed by the controller in the order of the barrel first, followed by the cyclotron.","title":"Socket Connections (JST-PH)"},{"location":"SINGLESHOT/#wire-connectors-terminal-blocks","text":"Label/Pin Notes D8 Slo-Blo VCC GND Slo-Blo GND D4 Lower-right Toggle (wire order does not matter) GND Lower-right Toggle (wire order does not matter) A0 Upper-right Toggle (wire order does not matter) GND Upper-right Toggle (wire order does not matter) D9 Clippard LED (Top Left) VCC GND Clippard LED (Top Left) GND R+ Rumble (vibration) motor VCC R- Rumble (vibration) motor GND VCC Power (+) for rotary encoder D12 Blinking top right LED / RGB vent light data D13 White vent light LED VL+ VCC for top/vent lights D7 Rotary encoder B (DT) D6 Rotary encoder A (CLK) ROT- Ground for rotary encoder","title":"Wire Connectors (Terminal Blocks)"},{"location":"SINGLESHOT/#special-connectors","text":"Label Pins Notes HAT2 GND/D23 Connection for the wand box hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D23 provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. SCL/SDA SCL/SDA Reserved for the 28-segment or 30-segment bargraph using I2C. Connector type: JST-PH 5V-OUT +/- Power for the bargraph. Connector type: JST-PH AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the wands's GPStar Audio or WAV Trigger. Connector type: JST-PH ICSP DO NOT USE! Programming header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Audio or WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector!","title":"Special Connectors"},{"location":"SINGLESHOT/#battery-power","text":"Per the BOM above, use of a 2000mAh or higher battery is crucial for supplying enough power for a full day of use. This MUST be a Lithium battery (either LiPo or Li-Ion) with a 3.7V output. The charging circuit is intended for use with Lithium batteries only. Again, Lithium! Both the GPStar Power Boost device for boosting and charging your battery offer 2 pairs of pins which are of importance here:","title":"Battery Power"},{"location":"SINGLESHOT/#power-switch-optional-but-recommended","text":"Adding a switch to the GPStar Power Boost device will allow you to fully turn off the device without draining the rechargeable battery. By default the device is always on and converting the 3.7V source to 5V for the electronics. EN - This is the 'enable' pin. To turn off the booster, connect this pin to ground. The switch can be as small as you like, it is just a signal. When the chip is disabled the output is completely disconnected from the input. GND - This is the shared ground connection which may be used with the 'EN' pin.","title":"Power Switch (Optional, but Recommended)"},{"location":"SINGLESHOT/#boosted-output","text":"5V OUT - This is the boosted output. The pin closest to the USB-C port is the (+) while the further pin is (-).","title":"Boosted Output"},{"location":"SINGLESHOT/#operation-guide","text":"Full guide will be written as features are completed and operation is determined.","title":"Operation Guide"},{"location":"SINGLESHOT/#firmware-updates","text":"Please follow the standard FLASHING guide using the binaries/blaster/SingleShot.hex firmware file.","title":"Firmware Updates"},{"location":"SINGLESHOT/#software-development-requirements","text":"As of the v5.4.0 release the development platform of choice for this device has been migrated from Arduino IDE to the VSCode with PlatformIO . Please follow the linked guide for installing the core software and plugins required. All libraries required by the project will be downloaded automatically.","title":"Software Development Requirements"},{"location":"SMOKE/","text":"Smoke Effects (Optional) Both the GPStar Proton Pack PCB and DIY Arduino approaches can support up to 2 separate smoke options for the N-Filter and Booster Tube to provide atmospheric effects while operating your Ghostbusters equipment. These effects are automatically triggered during certain interactions and typically after pre-set times through use of 5 JST-XH connections configured to provide DC power during smoke effect phases: Smoke1 aka. N-Filter Smoke SM-1 - GPStar Proton Pack PCB or Pin 39 - Arudino Mega Smoke2 aka. Booster Smoke SM-2 - GPStar Proton Pack PCB or Pin 35 - Arduino Mega Fan1 aka. N-Filter Fan FN-1 - GPStar Proton Pack PCB or Pin 33 - Arduino Mega Fan2 aka. Booster Fan FN-2 - GPStar Proton Pack PCB or Pin 50 - Arduino Mega LED-W aka. N-Filter Light LED-W - GPStar Proton Pack PCB or Pin 46 - Arduino Mega Note: Fan1 is set to run during overheat sequence only. It is useful for pushing smoke through the N-Filter Note: Fan2 is set to run at the same time as Smoke2. This was requested if you want to instead use Smoke2 from the booster tube for another purpose. For the purpose of smoke in the booster tube, Fan2 is not required. What is a \"Smoke Kit\"? Before proceeding it should be made clear what exactly a \"smoke kit\" consists of. In simplest terms this is a combination of 4 components: a vape coil (atomizer), an air pump, a fan or blower, and a white LED. Traditionally, the vape coil will be paired directly with the air pump as it is dangerous to run a vape coil without proper airflow. The fan and LED may either be separated or combined--there are many community makers of smoke kits with various implementations where components may be bundled differently. For modders who are comfortable with building their own smoke solution we recommend this guide to creating your own smoke generator . For purposes of integrating and connecting a smoke solution please read the remainder of this guide. Common Materials The following may be necessary to connect your smoke generator to the Proton Pack, if not provided as part of a maker's kit. 5V Relay Module with Optocoupler - Must support a HIGH signal to turn the relay on! 6mm OD / 4mm ID Silicone Tubing - For routing smoke from the vape coil Disclaimers This project does not make any direct endorsements of kits available in the Ghostbusters community. As stated above most kits consist of common components which can be integrated in a few standard ways. All references to kits or makers by name is for illustrative purposes only as this team has directly confirmed operation with the kit makers. If you have a smoke kit and wish to validate integration, please reach out to the team via the GPStar Technologies Facebook group for assistance. Most smoke kits utilize a combination of vegetable glycerine (VG) and propylene glycol (PG). Please follow any kit maker's instructions for filling or replacing your smoke fluid. Some ratios work better for the type of smoke desired and may be a personal preference. The most common are either 100% VG or a 70/30 mixture, where the latter may create thicker smoke. Warnings Modification of your pack is unavoidable for proper installation as the areas where smoke must be delivered are isolated from the inside of the pack. Please proceed only if you are comfortable with irreversible modifications . One such recommended modification is the full removal of the D-Cell battery compartment which will allow access through the battery door to installed vape coils for easy refilling. Other modifications include drilling holes to fit wires and/or silicone tubing. In both the PCB and DIY approaches each of the smoke and fan pins are designed to use a transistor to run connected devices, as most devices will require more than the recommended 40mA maximum of current through the ATMega controller. Please note the following guidelines and warnings regarding safe connection of these devices: All connectors listed above provide 5V of DC power and are intended to power devices such as relays, pumps, and fans. Do not connect any device which draws more than 500mA of current to your controller. Most fans/blowers and relays can be safely attached to the Fan1 or Fan2 ports without concern as these require 500mA or less to operate. The LED-W port expects a white LED with a forward voltage of 3.0-3.2V and current draw of 20mA. The Proton Pack PCB has been tested using up to 2 Amps of current but is NOT recommended as some components may be pushed to their thermal limits and could potentially fail prematurely under extended use. Most vape coil and air pump combinations require dedicated power sources or may require a 12V power source. ALWAYS use a relay module to complete the circuit to power these types of devices! Powering a Kit Power should be provided as recommended by your kit manufacturer. Most kits run on either 5V or 12V sources so this will determine the best way to implement a power connection. Though in most cases kits operate on the principle of \"apply power, get smoke\" so the only concern is how to turn the 5V (HIGH) signal from the PCB or Arduino into something which can safely run a vape coil and air pump combination. So we have 2 steps to take: 1) how to get power for the smoke kit(s) and 2) how to switch on power safely. Now before we begin with how to power your kit, take a look at this video which shows the correlation between voltage to the vape coil and how much amperage is consumed during operation. Typically most vape coils used with many kits are 1.8ohms and like their voltage in the range of 3.3-4V, though 5V can and will work fine. Just remember that more voltage means more current, which means more strain on your battery. So if you are short on available power or have a reduced runtime you can potentially look at reducing the voltage by use of a buck converter for just the vape coil itself. Step 1: Providing Power As of mid-2024 there are now 2 standard options available for obtaining power easily from a Talentcell battery: the GPStar Amplifier and the GPStar Power Hub. Both devices accept 12VDC from the 5525 barrel jack on the common Talentcell batteries, and both use an on-board 5V regulator which is capable of delivering up to 3A of power. WARNING Do not operate more than 1 smoke kit from the amplifier. This device must consume power to run the speakers, and is also meant to provide power easily to the Proton Pack controller. This can result in pushing the voltage converter (and battery) to its stated limit and will result in poor performance from attempting to run 2 smoke kits simultaneously. The power hub device is meant to provide dedicated power to high-current devices. It has been tested by operating 2 smoke kits (5V each, at ~1.5A) simultaneously without issue. The primary and expected use-case is when used with a second Talentcell battery reserved exclusively for powering smoke effects. Some additional but optional parts which may be required for these devices: 2-Pin JST-XH Connectors w/ Wires - For connecting relay modules to the 5V ports on the amp or power hub. Male USB w/ Short Pigtail Cable - For connecting directly to the USB port of a Talentcell battery. Male 5.5mm x 2.5mm Pigtail Cable - For connecting the amp to a battery using the available terminal screws. Male-to-Male 5.5mm x 2.5mm Cable - For connecting the amp or power hub to a Talentcell battery. Step 2: Switching Power As previously noted in the warnings section, this is where a 5V Relay Module becomes necessary. For a 5V relay, this device will electrically isolate the power provided by the PCB or Arduino from the power source running the smoke generator. This is the recommended solution for safely turning on your smoke generator. Remember that most vape coils will draw 1.5 to 2 Amps so your power supply must be able to provide that safely without triggering a safety shutoff. Most relays work using 3 wires: 2 for power (+/-) to the relay itself, and 1 for the signal to turn the relay on or off. One solution is to use a relay which can accept a HIGH signal to turn on and use the + connection to drive both the relay power and input signal. This arrangement typically uses less than 100mA and can safely connect to the Smoke1 or Smoke2 connectors. Typically the vape coil and air pump will have their positive leads connected together, and the negative leads connected together. The positive from the power source will be connected to the NO (normally-open) terminal on the relay module while the combined positive leads are connected to the COM (common) terminal. The negative leads should connect directly to the power source for the smoke generator. Connection Examples For a more in-depth look at the electrical connections, the following diagrams demonstrate what is required for integrating several smoke kits available from the community. These have been either directly verified or confirmed as \"expected\" by their respective makers. Other kits or DIY solutions may be used, provided they adhere to the use of a relay for applying power directly to a vape coil device. Refer to any kit makers' instructions and recommendations for power sources and connecting cables. This solution uses a vape pen with its own built-in battery for power: The following demonstrate common kits which require 5V for operation: * The GPStar Power Hub may be used in place of the DC buck converter shown * The GPStar Power Hub may be used in place of the DC buck converter shown This device uses its own power supply for smoke, but must connect a 5V RF transmitter directly to the controller: The following demonstrates how to connect a smoke kit which requires a 12V supply: Booster Tube Installation The process involves removing the booster tube for easy access and drilling a small hole at the bottom for insertion of silicone tubing. The space below the stock D-Cell battery compartment is convenient for housing smoke generators though as noted it may be easier to access by cutting away the battery compartment itself. If using a 3rd-party motherboard, opt for the version which retains a battery door for easy access once the pack is reassembled and attached to an ALICE frame. Note: For this component a fan is not necessary as the smoke will rise through use of only the air pump device. N-Filter Installation The following 3D models are provided for those able to print components for their pack. These are designed to fit perfectly within the Hasbro equipment and provide a familiar look to the end solution for getting smoke out of your pack. N-Filter Blower Mount - Holds the 50mm blower in an upright position N-Filter Filter Cone - Replaces the stock cone and allows smoke and air to exit N-Filter Template - Used to mark where to cut into the pack for smoke tubing and blower air hole The template print will help identify the correct placement for holes which will allow the silicone tubing and LED power wires to pass through, as well as the port opening for the blower fan. Place this with the word TEMPLATE facing up for the proper orientation. Once the holes are drilled you can simply insert the blower mount into the socket from below. There will be space to access the screw which holds the cone in place, as well as routing the silicone tubing and LED power wires. The blower will be held in place by the other half of the inner cyclotron housing once reassembled--this should be done last, after the cone has been fully installed and tested. The LED and wires should be installed first, pushing the LED to the very tip of the cone. Once in place, the silicone tubing can be inserted 2-3cm (1/2\") into the same hole to keep the wires (and LED) in place. Adding some hot glue will keep these in place and prevent smoke from escaping out this hole in the cone. Once those are installed the tubing and wires can be gently pulled through the drilled hole as the cone is pushed into place and secured using the original screw. Testing Congratulations, you are now ready to test your smoke solution! While in the Video Game mode, use the Barrel Wing Button to select the Venting menu option (after all firing mode options). Put the Neutrona Wand into firing state and press the Intensify button to activate the N-Filter smoke option directly. Alternatively, regardless of mode set your wand to level 5 and throw a proton stream (or activate Cross the Streams) and wait for the smoke effects to kick in. Remember to activate all smoke options for the pack via the EEPROM menu if you previously changed these. DIY Smoke Installation Video DIY Smoke Installation Video (YouTube)","title":"Smoke Kits"},{"location":"SMOKE/#smoke-effects-optional","text":"Both the GPStar Proton Pack PCB and DIY Arduino approaches can support up to 2 separate smoke options for the N-Filter and Booster Tube to provide atmospheric effects while operating your Ghostbusters equipment. These effects are automatically triggered during certain interactions and typically after pre-set times through use of 5 JST-XH connections configured to provide DC power during smoke effect phases: Smoke1 aka. N-Filter Smoke SM-1 - GPStar Proton Pack PCB or Pin 39 - Arudino Mega Smoke2 aka. Booster Smoke SM-2 - GPStar Proton Pack PCB or Pin 35 - Arduino Mega Fan1 aka. N-Filter Fan FN-1 - GPStar Proton Pack PCB or Pin 33 - Arduino Mega Fan2 aka. Booster Fan FN-2 - GPStar Proton Pack PCB or Pin 50 - Arduino Mega LED-W aka. N-Filter Light LED-W - GPStar Proton Pack PCB or Pin 46 - Arduino Mega Note: Fan1 is set to run during overheat sequence only. It is useful for pushing smoke through the N-Filter Note: Fan2 is set to run at the same time as Smoke2. This was requested if you want to instead use Smoke2 from the booster tube for another purpose. For the purpose of smoke in the booster tube, Fan2 is not required.","title":"Smoke Effects (Optional)"},{"location":"SMOKE/#what-is-a-smoke-kit","text":"Before proceeding it should be made clear what exactly a \"smoke kit\" consists of. In simplest terms this is a combination of 4 components: a vape coil (atomizer), an air pump, a fan or blower, and a white LED. Traditionally, the vape coil will be paired directly with the air pump as it is dangerous to run a vape coil without proper airflow. The fan and LED may either be separated or combined--there are many community makers of smoke kits with various implementations where components may be bundled differently. For modders who are comfortable with building their own smoke solution we recommend this guide to creating your own smoke generator . For purposes of integrating and connecting a smoke solution please read the remainder of this guide.","title":"What is a \"Smoke Kit\"?"},{"location":"SMOKE/#common-materials","text":"The following may be necessary to connect your smoke generator to the Proton Pack, if not provided as part of a maker's kit. 5V Relay Module with Optocoupler - Must support a HIGH signal to turn the relay on! 6mm OD / 4mm ID Silicone Tubing - For routing smoke from the vape coil","title":"Common Materials"},{"location":"SMOKE/#disclaimers","text":"This project does not make any direct endorsements of kits available in the Ghostbusters community. As stated above most kits consist of common components which can be integrated in a few standard ways. All references to kits or makers by name is for illustrative purposes only as this team has directly confirmed operation with the kit makers. If you have a smoke kit and wish to validate integration, please reach out to the team via the GPStar Technologies Facebook group for assistance. Most smoke kits utilize a combination of vegetable glycerine (VG) and propylene glycol (PG). Please follow any kit maker's instructions for filling or replacing your smoke fluid. Some ratios work better for the type of smoke desired and may be a personal preference. The most common are either 100% VG or a 70/30 mixture, where the latter may create thicker smoke.","title":"Disclaimers"},{"location":"SMOKE/#warnings","text":"Modification of your pack is unavoidable for proper installation as the areas where smoke must be delivered are isolated from the inside of the pack. Please proceed only if you are comfortable with irreversible modifications . One such recommended modification is the full removal of the D-Cell battery compartment which will allow access through the battery door to installed vape coils for easy refilling. Other modifications include drilling holes to fit wires and/or silicone tubing. In both the PCB and DIY approaches each of the smoke and fan pins are designed to use a transistor to run connected devices, as most devices will require more than the recommended 40mA maximum of current through the ATMega controller. Please note the following guidelines and warnings regarding safe connection of these devices: All connectors listed above provide 5V of DC power and are intended to power devices such as relays, pumps, and fans. Do not connect any device which draws more than 500mA of current to your controller. Most fans/blowers and relays can be safely attached to the Fan1 or Fan2 ports without concern as these require 500mA or less to operate. The LED-W port expects a white LED with a forward voltage of 3.0-3.2V and current draw of 20mA. The Proton Pack PCB has been tested using up to 2 Amps of current but is NOT recommended as some components may be pushed to their thermal limits and could potentially fail prematurely under extended use. Most vape coil and air pump combinations require dedicated power sources or may require a 12V power source. ALWAYS use a relay module to complete the circuit to power these types of devices!","title":"Warnings"},{"location":"SMOKE/#powering-a-kit","text":"Power should be provided as recommended by your kit manufacturer. Most kits run on either 5V or 12V sources so this will determine the best way to implement a power connection. Though in most cases kits operate on the principle of \"apply power, get smoke\" so the only concern is how to turn the 5V (HIGH) signal from the PCB or Arduino into something which can safely run a vape coil and air pump combination. So we have 2 steps to take: 1) how to get power for the smoke kit(s) and 2) how to switch on power safely. Now before we begin with how to power your kit, take a look at this video which shows the correlation between voltage to the vape coil and how much amperage is consumed during operation. Typically most vape coils used with many kits are 1.8ohms and like their voltage in the range of 3.3-4V, though 5V can and will work fine. Just remember that more voltage means more current, which means more strain on your battery. So if you are short on available power or have a reduced runtime you can potentially look at reducing the voltage by use of a buck converter for just the vape coil itself. Step 1: Providing Power As of mid-2024 there are now 2 standard options available for obtaining power easily from a Talentcell battery: the GPStar Amplifier and the GPStar Power Hub. Both devices accept 12VDC from the 5525 barrel jack on the common Talentcell batteries, and both use an on-board 5V regulator which is capable of delivering up to 3A of power. WARNING Do not operate more than 1 smoke kit from the amplifier. This device must consume power to run the speakers, and is also meant to provide power easily to the Proton Pack controller. This can result in pushing the voltage converter (and battery) to its stated limit and will result in poor performance from attempting to run 2 smoke kits simultaneously. The power hub device is meant to provide dedicated power to high-current devices. It has been tested by operating 2 smoke kits (5V each, at ~1.5A) simultaneously without issue. The primary and expected use-case is when used with a second Talentcell battery reserved exclusively for powering smoke effects. Some additional but optional parts which may be required for these devices: 2-Pin JST-XH Connectors w/ Wires - For connecting relay modules to the 5V ports on the amp or power hub. Male USB w/ Short Pigtail Cable - For connecting directly to the USB port of a Talentcell battery. Male 5.5mm x 2.5mm Pigtail Cable - For connecting the amp to a battery using the available terminal screws. Male-to-Male 5.5mm x 2.5mm Cable - For connecting the amp or power hub to a Talentcell battery. Step 2: Switching Power As previously noted in the warnings section, this is where a 5V Relay Module becomes necessary. For a 5V relay, this device will electrically isolate the power provided by the PCB or Arduino from the power source running the smoke generator. This is the recommended solution for safely turning on your smoke generator. Remember that most vape coils will draw 1.5 to 2 Amps so your power supply must be able to provide that safely without triggering a safety shutoff. Most relays work using 3 wires: 2 for power (+/-) to the relay itself, and 1 for the signal to turn the relay on or off. One solution is to use a relay which can accept a HIGH signal to turn on and use the + connection to drive both the relay power and input signal. This arrangement typically uses less than 100mA and can safely connect to the Smoke1 or Smoke2 connectors. Typically the vape coil and air pump will have their positive leads connected together, and the negative leads connected together. The positive from the power source will be connected to the NO (normally-open) terminal on the relay module while the combined positive leads are connected to the COM (common) terminal. The negative leads should connect directly to the power source for the smoke generator.","title":"Powering a Kit"},{"location":"SMOKE/#connection-examples","text":"For a more in-depth look at the electrical connections, the following diagrams demonstrate what is required for integrating several smoke kits available from the community. These have been either directly verified or confirmed as \"expected\" by their respective makers. Other kits or DIY solutions may be used, provided they adhere to the use of a relay for applying power directly to a vape coil device. Refer to any kit makers' instructions and recommendations for power sources and connecting cables. This solution uses a vape pen with its own built-in battery for power: The following demonstrate common kits which require 5V for operation: * The GPStar Power Hub may be used in place of the DC buck converter shown * The GPStar Power Hub may be used in place of the DC buck converter shown This device uses its own power supply for smoke, but must connect a 5V RF transmitter directly to the controller: The following demonstrates how to connect a smoke kit which requires a 12V supply:","title":"Connection Examples"},{"location":"SMOKE/#booster-tube-installation","text":"The process involves removing the booster tube for easy access and drilling a small hole at the bottom for insertion of silicone tubing. The space below the stock D-Cell battery compartment is convenient for housing smoke generators though as noted it may be easier to access by cutting away the battery compartment itself. If using a 3rd-party motherboard, opt for the version which retains a battery door for easy access once the pack is reassembled and attached to an ALICE frame. Note: For this component a fan is not necessary as the smoke will rise through use of only the air pump device.","title":"Booster Tube Installation"},{"location":"SMOKE/#n-filter-installation","text":"The following 3D models are provided for those able to print components for their pack. These are designed to fit perfectly within the Hasbro equipment and provide a familiar look to the end solution for getting smoke out of your pack. N-Filter Blower Mount - Holds the 50mm blower in an upright position N-Filter Filter Cone - Replaces the stock cone and allows smoke and air to exit N-Filter Template - Used to mark where to cut into the pack for smoke tubing and blower air hole The template print will help identify the correct placement for holes which will allow the silicone tubing and LED power wires to pass through, as well as the port opening for the blower fan. Place this with the word TEMPLATE facing up for the proper orientation. Once the holes are drilled you can simply insert the blower mount into the socket from below. There will be space to access the screw which holds the cone in place, as well as routing the silicone tubing and LED power wires. The blower will be held in place by the other half of the inner cyclotron housing once reassembled--this should be done last, after the cone has been fully installed and tested. The LED and wires should be installed first, pushing the LED to the very tip of the cone. Once in place, the silicone tubing can be inserted 2-3cm (1/2\") into the same hole to keep the wires (and LED) in place. Adding some hot glue will keep these in place and prevent smoke from escaping out this hole in the cone. Once those are installed the tubing and wires can be gently pulled through the drilled hole as the cone is pushed into place and secured using the original screw.","title":"N-Filter Installation"},{"location":"SMOKE/#testing","text":"Congratulations, you are now ready to test your smoke solution! While in the Video Game mode, use the Barrel Wing Button to select the Venting menu option (after all firing mode options). Put the Neutrona Wand into firing state and press the Intensify button to activate the N-Filter smoke option directly. Alternatively, regardless of mode set your wand to level 5 and throw a proton stream (or activate Cross the Streams) and wait for the smoke effects to kick in. Remember to activate all smoke options for the pack via the EEPROM menu if you previously changed these.","title":"Testing"},{"location":"SMOKE/#diy-smoke-installation-video","text":"DIY Smoke Installation Video (YouTube)","title":"DIY Smoke Installation Video"},{"location":"SMOKE_DIY/","text":"DIY Smoke Generator This guide is intended to explain the process of creating your own smoke generator for the Proton Pack. For installation and connections to the GPStar Proton Pack PCB or Arduino Mega please follow this guide . Booster Tube Example Provided by GPStar For this solution, the following parts were used: Air Pump/Vacuum DC Motor 4.5V Vape Pen w/ Battery 100% Pure Vegetable Glycerine for the vape pen to generate smoke This will be attached to the Smoke2 connector per the explanation in the main smoke guide. The vape pen used in this solution contains its own battery and automatically turns on when air is pulled through the device. The air pump is configured in reverse to pull air through the pen and connected using silicone tubing and heatshrink tubing. No fan is required for this solution. N-Filter Example Provided by JustinDustin This also uses a vape coil approach with a 6V mini air pump, and can be run from a 5V relay module. The content below will assume use of a DIY approach and fully examines the creation and fitment of the following components. Kanger T2 Clearomizer Tank (Pack of 5) - Note that for many US states the online ordering of vaping supplies may be restricted. This supplier has successfully shipped to Georgia, which is one such restricted state. Be sure to make sure the supplier can ship to your state before ordering! 6V Mini Air Pump - Sits below the N-filter to push smoke out 2W 1 Ohm Axial Lead Metal Film Resistor - Reduces voltage/power to vape coil 50mm 5V Blower Fan - Ideal for the small space and limits cutting of the pack 3mm ID Silicone Tubing - For connecting the vape coil to the air pump Push Connect Fitting 6mm ID - For connecting silicone tubing to the vape coil Vegetable Glycerine & Propylene Glycol 70/30 - Safe, non-toxic, and mostly odorless DC Buck Converter - For reducing voltate when using the 12V output of the Talentcell Electronics For basic instructions on creating the smoke machine itself, you may follow this video tutorial which essentially pairs the clearomizer tank with the air pump and provides the wiring for that module. You can successfully run both devices off of a single pair of shared positive and negative wires. The most intensive portion of assembly is soldering wires to the vape coil. It is necessary to use a Dremel with a small grinding tip to make a hole in the center post for the positive wire to attach. The negative wire can be soldered to the side wall of the T2 tank. A small piece of tubing can be placed over the positive wire and center air hole, while hot glue will keep the wire stable. While the pump will work perfectly well at 5V, the vape coil (T2 Clearomizer style) uses a 1.8 ohm coil and wants about 3.6-4V to make decent smoke, and can potentially draw over 2 Amps of power. The solution here is to add a metal-film resistor to the positive lead on the vape coil to reduce the power demands and prevent it from burning out prematurely. Once the resistor is attached to the positive lead on the vape coil, and wires are attached to the air pump, simply combine both positive wires to each other and both negative wires to each other. These are now ready to install per the main smoke guide. See the diagrams below for demonstration of the connections and placement of the resistor. Components can be housed in a project box or similar for easy placement within the Proton Pack.","title":"DIY Smoke Generator"},{"location":"SMOKE_DIY/#diy-smoke-generator","text":"This guide is intended to explain the process of creating your own smoke generator for the Proton Pack. For installation and connections to the GPStar Proton Pack PCB or Arduino Mega please follow this guide .","title":"DIY Smoke Generator"},{"location":"SMOKE_DIY/#booster-tube-example","text":"Provided by GPStar For this solution, the following parts were used: Air Pump/Vacuum DC Motor 4.5V Vape Pen w/ Battery 100% Pure Vegetable Glycerine for the vape pen to generate smoke This will be attached to the Smoke2 connector per the explanation in the main smoke guide. The vape pen used in this solution contains its own battery and automatically turns on when air is pulled through the device. The air pump is configured in reverse to pull air through the pen and connected using silicone tubing and heatshrink tubing. No fan is required for this solution.","title":"Booster Tube Example"},{"location":"SMOKE_DIY/#n-filter-example","text":"Provided by JustinDustin This also uses a vape coil approach with a 6V mini air pump, and can be run from a 5V relay module. The content below will assume use of a DIY approach and fully examines the creation and fitment of the following components. Kanger T2 Clearomizer Tank (Pack of 5) - Note that for many US states the online ordering of vaping supplies may be restricted. This supplier has successfully shipped to Georgia, which is one such restricted state. Be sure to make sure the supplier can ship to your state before ordering! 6V Mini Air Pump - Sits below the N-filter to push smoke out 2W 1 Ohm Axial Lead Metal Film Resistor - Reduces voltage/power to vape coil 50mm 5V Blower Fan - Ideal for the small space and limits cutting of the pack 3mm ID Silicone Tubing - For connecting the vape coil to the air pump Push Connect Fitting 6mm ID - For connecting silicone tubing to the vape coil Vegetable Glycerine & Propylene Glycol 70/30 - Safe, non-toxic, and mostly odorless DC Buck Converter - For reducing voltate when using the 12V output of the Talentcell Electronics For basic instructions on creating the smoke machine itself, you may follow this video tutorial which essentially pairs the clearomizer tank with the air pump and provides the wiring for that module. You can successfully run both devices off of a single pair of shared positive and negative wires. The most intensive portion of assembly is soldering wires to the vape coil. It is necessary to use a Dremel with a small grinding tip to make a hole in the center post for the positive wire to attach. The negative wire can be soldered to the side wall of the T2 tank. A small piece of tubing can be placed over the positive wire and center air hole, while hot glue will keep the wire stable. While the pump will work perfectly well at 5V, the vape coil (T2 Clearomizer style) uses a 1.8 ohm coil and wants about 3.6-4V to make decent smoke, and can potentially draw over 2 Amps of power. The solution here is to add a metal-film resistor to the positive lead on the vape coil to reduce the power demands and prevent it from burning out prematurely. Once the resistor is attached to the positive lead on the vape coil, and wires are attached to the air pump, simply combine both positive wires to each other and both negative wires to each other. These are now ready to install per the main smoke guide. See the diagrams below for demonstration of the connections and placement of the resistor. Components can be housed in a project box or similar for easy placement within the Proton Pack.","title":"N-Filter Example"},{"location":"SOUND/","text":"Sound Output Options \"Listen! You smell something?\" - Ray Stantz Sound is a huge component of this build and the options are relatively open for how best you wish to proceed. For the wand you will be limited by space, but for the pack you can go as big and as bold as you wish. The following options should give you an idea of what is possible with hardware given certain space constraints. For instructions on loading audio files to a microSD card, please see the AUDIO Guide . Audio Controllers Sounds are output via one of the supported polyphonic WAV audio controllers: Robertsonics WAV Trigger or GPStar Audio. The former is a 3rd-party component originally included with all GPStar kits up until early 2024, while the latter is a fully custom solution which is part of the GPStar family of controllers for your cosplay needs. Firmware Compatibility The compatibility matrix below notes whether a device is compatible with major versions of the GPStar software for the Proton Pack and Neutrona Wand controllers. The version number inside each cell is the minimum firmware version required or strongly recommended for the respective device. Audio Device v1.x v2.x v3.x v4.x v5.0.x v5.1.x v5.4.x v6.0.x Robertsonics WAV Trigger v134 v134 v140 v140 v140 v140 v140 v140 GPStar Audio \u2014 \u2014 \u2014 \u2014 v100 1 v102 2 v103 3 v104 4 1 All initial orders for GPStar Audio controllers shipped with v100 firmware which delivers all of the basic functionality needed for a Pack+Wand operation. 2 The GPStar Audio v102 firmware added the Pause/Resume ability which is only accessible via the WiFi Web UI, while also providing stability improvements. 3 The GPStar Audio v103 firmware adjusts the internal gain for the line-out levels to improve audio quality prior to amplification (primarily with Proton Pack usage which relies on an external amp to drive larger speakers). 4 The GPStar Audio v104 firmware provides a new version info reply which gives the ability to provide unique features to users based on their flashed version. Notably, one of the new features for the v104 is a \"WAV queueing\" or preloading of audio files for use in chained events, reducing latency for certain effects. Firmware Updates All firmware files for the audio controllers can be found in the extras/sound/ folder. Files are grouped by their device name, and a firmware update tool for the GPStar Audio firmware is available for ease of flashing that device. Pack Audio This is where you can branch out to other options as desired and can really go all-out with your choice of audio. Neither of the GPStar Audio or WAV Trigger controllers recommended for use in the Proton Pack will use their onboard amplifier by default. In both cases the 3.5mm / \u215b\" stereo phono jack will be used. This means you can use virtually any amplifier which accepts that type of connection as an input. When you choose your amplifier, that should dictate the choice of speakers to match. Amplifiers We recommend a handful of small form-factor audio amplifiers which will provide the loudness demanded by many kit users. The following are listed in order of their peak output, but also compatibility within the GPStar ecosystem. GPStar Amplifier II - 50W @ 4\u03a9 24V Class D Stereo Amplifier This beast of an amplifier is capable of running some serious wattage through matched speakers. When provided with the recommended 24V supply voltage the output is closer to 60W @ 4\u03a9, and is therefore reserved for the most serious of users willing to install and carry a suitable battery system on their Proton Pack. It is possible to run this amplifier at 12V as well for considerable sound output at around 30W @ 4\u03a9. If using 8\u03a9 speakers, expect roughly 30W @ 24V and 15W @ 12V. GPStar Amplifier - 15W @ 8\u03a9 12V Class D Stereo Amplifier A more common class of amplifier with a 12V input. This is the same form-factor as the GPStar Amplifier II, but without the built-in heatsink. Output is identical to the Drok 15W listed next. Drok 15W Class D Stereo Amplifier While rated at 15W that is only when driven at 24V. Expect closer to 10W @ 8\u03a9 when driven with a standard 12V TalentCell battery. This is an off-the-shelf item which has been tested successfully with the full replacement kits and various speaker recommendations. In terms of capability this is identical to the GPStar Amplifier, though it has a built-in volume control if that is something you desire (otherwise the audio input will be controlled by the Proton Pack controller). It should go without saying that for any amplifier which can run on 12V, the more wattage it can output and will drain the battery faster at higher volumes. Testing of the 12V amplifiers shows a draw of 1-1.25A at full power, hence a 6000 mAh TalentCell is going to be recommended for a full day of audio playback. Speakers Speakers may be subjective to your personal tastes and budget, so kits do not ship with speakers. However, we have tested and do recommend several options which are listed below in order of quality and availability. The most important criteria is to match the speakers to the maximum output of the amplifier chosen. For instance, you would want speakers which can handle at least 60W @ 4\u03a9 for the GPStar Amplifier II. 2x LaVoce FSN030.71 3\" Neodymium Full-Range Woofer 8\u03a9 Considered by our team as the peak of performance, weight, and quality this 30W @ 8\u03a9 speaker is going to provide the lightest option with the most compatibility with all amplifiers recommended. 2x LaVoce FSF030.70 3\" Ferrite Full-Range Woofer 8\u03a9 Identical to the LaVoce FSN030.71 in specs, this is a standard magnet driver with a reduced cost per speaker. Consider this as a budget alternative. 2x 3\" Dayton Audio DMA-80 8\u03a9 Full Range Drivers These speakers are a mix of lightest weight due to their neodymium core and aluminum cone, with decent quality at 25W RMS (50W peak). Pair of 3\" Full Range Bookshelf Speaker (15W @ 8\u03a9) These are the most economical options and can be perfectly suitable with the GPStar or Drok 15W amplifiers. However, their quality is not as good as the LaVoce or Dayton Audio speakers. Accessories The following items are optional and may not even be necessary depending on the amplifier chosen. For instance, if using either of the GPStar amplifiers it is not necessary to provide a Ground Loop Isolator as this is built into those amplifiers already. 8\" Auxiliary Stereo Audio Cable w/ 90\u00b0 Jack Optional: Useful in tight locations, depending on where the amp is mounted Ground Loop Isolator - Not required for the GPStar Amplifier Recommended for 3rd-party Amps: Prevents unwanted hum and noise from the amplifier due to the LEDs 2 Input to 1 Output Passive Mixer For users who may want to mix a second source into their Proton Pack, such as an Aux-In or Bluetooth device, this is a good option to mix your GPStar Audio (or WAV Trigger) input with an external source. Note: As of mid-2024 all kits which include an amplifier will ship with the new GPStar Amplifier which is a high-powered Class D stereo amp. This device is very similar to the Drok amplifier noted, though it includes more 12V pass-through options for chaining other devices which need the full power offered by the Talentcell battery. It also includes a built-in 5V regulator which may be used for powering other kit devices via JST-XH connectors. The placement of your speakers is up to you. Though it is possible to mount a 3\" speaker in the location used for the original pack speaker, a mount should be used to help offload some of the added weight from that device. And if the stock vibration motor is not important (as the solution above will provide some physical feedback in that regard), removal of that device opens up a cavity just behind and above the cross-bar of a standard ALICE frame for another speaker. For the latter, it will be necessary to carefully drill some small holes into the motherboard of the pack for sound output. Shown below is an example of how a pair of stereo speakers may be mounted inside of the pack. The upper speaker is located where the original speaker was mounted, while the lower speaker occupies the space where the vibration motor casing was secured into the pack. Note the WAV Trigger and amplifier as shown here are mounted in the space normally occupied by the D-cell battery compartment, primarily so the volume control for the amplifier can be accessed from the service door when the pack is reassembled. That portion of the motherboard would need to be partially or fully removed if you wish to use this space as shown. Optional Part Shown: 3D Model for Pack - Upper Speaker Mount Note: Amplifier Volume Controls Most amplifier boards will contain their own dedicated volume control (potentiometer) which will adjust output from that device only. The built-in controls for the pack/wand will control the source audio (sound effects vs. music) and the overall volume output for both of the WAV Trigger boards, which will affect the input level to your choice of amplifier and in turn affect the output relative to that device. tl;dr: You should mount your amplifier in a space where you also have access to its volume control so you can adjust the pack to balance with the wand (or make it the domninant audio source) as necessary. Under normal operating conditions setting the recommended Drok 15W amplifier to 1/2 power will be sufficient and capable of outputting over 80dB from the suggested pack speakers. Higher volume may also result in faster battery drain with very little improvement in volume. The GPStar Amplifier does not contain a volume control and is preset to output at its maximum volume. To control the volume level use the available controls on the pack or wand to adjust the overall system volume. Wand Audio This is the most restrictive of spaces which means the device which provides audio must also double as an amplifier. Luckily, both options for sound can provide output directly to a speaker. While the GPStar Audio can output stereo sound to 2 speakers, there is only room for 1 speaker in the wand as mounted behind the heatsink. The stock speaker is rated at 0.25W @ 16\u03a9 and uses a cone made from plastic--essentially more of a tweeter than a full-range speaker, so it is advised that if you would like better quality sound you will need a replacement speaker. Otherwise, you can still use the original Hasbro wand speaker. Below are the listed specifications of the on-board amplifiers depending on which audio board you are using, which will affect which speaker should be purchased. GPStar Audio on-board amplifier (stereo output) Rated for 2.5W @ 4\u03a9 or 1.5W @ 8\u03a9 per channel. WAV Trigger on-board amplifier (mono output only) Rated for 2W @ 4\u03a9 or 1W @ 8\u03a9. There has been success in using this 40mm speaker rated for 3W @ 4\u03a9. While this does not fit in the standard speaker location under the heatsink (its size interferes with the retraction of the wand) it can be mounted within the base of the gun box and offers just enough sound to be heard (indoors at least) and can double as a rumble motor due to being able to reproduce the low-end sounds which the stock speaker cannot. This larger speaker can also be fitted into a optional Heatsink located in the STL folder of this repository. A potential example of how the upgraded 40mm speaker might be installed into the gun box is shown below in a DIY build. Note that in order to fit these components as shown the barrel connector for power was CAREFULLY removed (as it will not be used), and the screw posts for the wand mount were filed down to ensure they do not interfere with fitment. Other users in the community have reported satisfactory results with the Visaton speakers available through DigiKey which are both of identical specs (300 Hz to 20 kHz) and closer in size to the stock speaker. The Visaton speaker fits in the standard heatsink with little modifications or it can fit in a alternative heatsink which is provided in the STL folder of this repository: K-36-WP 8ohm K-36-MO 8ohm Optional Part Shown: 3D Model for Wand - 40mm Speaker Mount For more wand mounting solutions, refer to the DIY Wand Setup page","title":"Sound Output"},{"location":"SOUND/#sound-output-options","text":"\"Listen! You smell something?\" - Ray Stantz Sound is a huge component of this build and the options are relatively open for how best you wish to proceed. For the wand you will be limited by space, but for the pack you can go as big and as bold as you wish. The following options should give you an idea of what is possible with hardware given certain space constraints. For instructions on loading audio files to a microSD card, please see the AUDIO Guide .","title":"Sound Output Options"},{"location":"SOUND/#audio-controllers","text":"Sounds are output via one of the supported polyphonic WAV audio controllers: Robertsonics WAV Trigger or GPStar Audio. The former is a 3rd-party component originally included with all GPStar kits up until early 2024, while the latter is a fully custom solution which is part of the GPStar family of controllers for your cosplay needs. Firmware Compatibility The compatibility matrix below notes whether a device is compatible with major versions of the GPStar software for the Proton Pack and Neutrona Wand controllers. The version number inside each cell is the minimum firmware version required or strongly recommended for the respective device. Audio Device v1.x v2.x v3.x v4.x v5.0.x v5.1.x v5.4.x v6.0.x Robertsonics WAV Trigger v134 v134 v140 v140 v140 v140 v140 v140 GPStar Audio \u2014 \u2014 \u2014 \u2014 v100 1 v102 2 v103 3 v104 4 1 All initial orders for GPStar Audio controllers shipped with v100 firmware which delivers all of the basic functionality needed for a Pack+Wand operation. 2 The GPStar Audio v102 firmware added the Pause/Resume ability which is only accessible via the WiFi Web UI, while also providing stability improvements. 3 The GPStar Audio v103 firmware adjusts the internal gain for the line-out levels to improve audio quality prior to amplification (primarily with Proton Pack usage which relies on an external amp to drive larger speakers). 4 The GPStar Audio v104 firmware provides a new version info reply which gives the ability to provide unique features to users based on their flashed version. Notably, one of the new features for the v104 is a \"WAV queueing\" or preloading of audio files for use in chained events, reducing latency for certain effects. Firmware Updates All firmware files for the audio controllers can be found in the extras/sound/ folder. Files are grouped by their device name, and a firmware update tool for the GPStar Audio firmware is available for ease of flashing that device.","title":"Audio Controllers"},{"location":"SOUND/#pack-audio","text":"This is where you can branch out to other options as desired and can really go all-out with your choice of audio. Neither of the GPStar Audio or WAV Trigger controllers recommended for use in the Proton Pack will use their onboard amplifier by default. In both cases the 3.5mm / \u215b\" stereo phono jack will be used. This means you can use virtually any amplifier which accepts that type of connection as an input. When you choose your amplifier, that should dictate the choice of speakers to match.","title":"Pack Audio"},{"location":"SOUND/#amplifiers","text":"We recommend a handful of small form-factor audio amplifiers which will provide the loudness demanded by many kit users. The following are listed in order of their peak output, but also compatibility within the GPStar ecosystem. GPStar Amplifier II - 50W @ 4\u03a9 24V Class D Stereo Amplifier This beast of an amplifier is capable of running some serious wattage through matched speakers. When provided with the recommended 24V supply voltage the output is closer to 60W @ 4\u03a9, and is therefore reserved for the most serious of users willing to install and carry a suitable battery system on their Proton Pack. It is possible to run this amplifier at 12V as well for considerable sound output at around 30W @ 4\u03a9. If using 8\u03a9 speakers, expect roughly 30W @ 24V and 15W @ 12V. GPStar Amplifier - 15W @ 8\u03a9 12V Class D Stereo Amplifier A more common class of amplifier with a 12V input. This is the same form-factor as the GPStar Amplifier II, but without the built-in heatsink. Output is identical to the Drok 15W listed next. Drok 15W Class D Stereo Amplifier While rated at 15W that is only when driven at 24V. Expect closer to 10W @ 8\u03a9 when driven with a standard 12V TalentCell battery. This is an off-the-shelf item which has been tested successfully with the full replacement kits and various speaker recommendations. In terms of capability this is identical to the GPStar Amplifier, though it has a built-in volume control if that is something you desire (otherwise the audio input will be controlled by the Proton Pack controller). It should go without saying that for any amplifier which can run on 12V, the more wattage it can output and will drain the battery faster at higher volumes. Testing of the 12V amplifiers shows a draw of 1-1.25A at full power, hence a 6000 mAh TalentCell is going to be recommended for a full day of audio playback.","title":"Amplifiers"},{"location":"SOUND/#speakers","text":"Speakers may be subjective to your personal tastes and budget, so kits do not ship with speakers. However, we have tested and do recommend several options which are listed below in order of quality and availability. The most important criteria is to match the speakers to the maximum output of the amplifier chosen. For instance, you would want speakers which can handle at least 60W @ 4\u03a9 for the GPStar Amplifier II. 2x LaVoce FSN030.71 3\" Neodymium Full-Range Woofer 8\u03a9 Considered by our team as the peak of performance, weight, and quality this 30W @ 8\u03a9 speaker is going to provide the lightest option with the most compatibility with all amplifiers recommended. 2x LaVoce FSF030.70 3\" Ferrite Full-Range Woofer 8\u03a9 Identical to the LaVoce FSN030.71 in specs, this is a standard magnet driver with a reduced cost per speaker. Consider this as a budget alternative. 2x 3\" Dayton Audio DMA-80 8\u03a9 Full Range Drivers These speakers are a mix of lightest weight due to their neodymium core and aluminum cone, with decent quality at 25W RMS (50W peak). Pair of 3\" Full Range Bookshelf Speaker (15W @ 8\u03a9) These are the most economical options and can be perfectly suitable with the GPStar or Drok 15W amplifiers. However, their quality is not as good as the LaVoce or Dayton Audio speakers.","title":"Speakers"},{"location":"SOUND/#accessories","text":"The following items are optional and may not even be necessary depending on the amplifier chosen. For instance, if using either of the GPStar amplifiers it is not necessary to provide a Ground Loop Isolator as this is built into those amplifiers already. 8\" Auxiliary Stereo Audio Cable w/ 90\u00b0 Jack Optional: Useful in tight locations, depending on where the amp is mounted Ground Loop Isolator - Not required for the GPStar Amplifier Recommended for 3rd-party Amps: Prevents unwanted hum and noise from the amplifier due to the LEDs 2 Input to 1 Output Passive Mixer For users who may want to mix a second source into their Proton Pack, such as an Aux-In or Bluetooth device, this is a good option to mix your GPStar Audio (or WAV Trigger) input with an external source. Note: As of mid-2024 all kits which include an amplifier will ship with the new GPStar Amplifier which is a high-powered Class D stereo amp. This device is very similar to the Drok amplifier noted, though it includes more 12V pass-through options for chaining other devices which need the full power offered by the Talentcell battery. It also includes a built-in 5V regulator which may be used for powering other kit devices via JST-XH connectors. The placement of your speakers is up to you. Though it is possible to mount a 3\" speaker in the location used for the original pack speaker, a mount should be used to help offload some of the added weight from that device. And if the stock vibration motor is not important (as the solution above will provide some physical feedback in that regard), removal of that device opens up a cavity just behind and above the cross-bar of a standard ALICE frame for another speaker. For the latter, it will be necessary to carefully drill some small holes into the motherboard of the pack for sound output. Shown below is an example of how a pair of stereo speakers may be mounted inside of the pack. The upper speaker is located where the original speaker was mounted, while the lower speaker occupies the space where the vibration motor casing was secured into the pack. Note the WAV Trigger and amplifier as shown here are mounted in the space normally occupied by the D-cell battery compartment, primarily so the volume control for the amplifier can be accessed from the service door when the pack is reassembled. That portion of the motherboard would need to be partially or fully removed if you wish to use this space as shown. Optional Part Shown: 3D Model for Pack - Upper Speaker Mount","title":"Accessories"},{"location":"SOUND/#note-amplifier-volume-controls","text":"Most amplifier boards will contain their own dedicated volume control (potentiometer) which will adjust output from that device only. The built-in controls for the pack/wand will control the source audio (sound effects vs. music) and the overall volume output for both of the WAV Trigger boards, which will affect the input level to your choice of amplifier and in turn affect the output relative to that device. tl;dr: You should mount your amplifier in a space where you also have access to its volume control so you can adjust the pack to balance with the wand (or make it the domninant audio source) as necessary. Under normal operating conditions setting the recommended Drok 15W amplifier to 1/2 power will be sufficient and capable of outputting over 80dB from the suggested pack speakers. Higher volume may also result in faster battery drain with very little improvement in volume. The GPStar Amplifier does not contain a volume control and is preset to output at its maximum volume. To control the volume level use the available controls on the pack or wand to adjust the overall system volume.","title":"Note: Amplifier Volume Controls"},{"location":"SOUND/#wand-audio","text":"This is the most restrictive of spaces which means the device which provides audio must also double as an amplifier. Luckily, both options for sound can provide output directly to a speaker. While the GPStar Audio can output stereo sound to 2 speakers, there is only room for 1 speaker in the wand as mounted behind the heatsink. The stock speaker is rated at 0.25W @ 16\u03a9 and uses a cone made from plastic--essentially more of a tweeter than a full-range speaker, so it is advised that if you would like better quality sound you will need a replacement speaker. Otherwise, you can still use the original Hasbro wand speaker. Below are the listed specifications of the on-board amplifiers depending on which audio board you are using, which will affect which speaker should be purchased.","title":"Wand Audio"},{"location":"SOUND/#gpstar-audio-on-board-amplifier-stereo-output","text":"Rated for 2.5W @ 4\u03a9 or 1.5W @ 8\u03a9 per channel.","title":"GPStar Audio on-board amplifier (stereo output)"},{"location":"SOUND/#wav-trigger-on-board-amplifier-mono-output-only","text":"Rated for 2W @ 4\u03a9 or 1W @ 8\u03a9. There has been success in using this 40mm speaker rated for 3W @ 4\u03a9. While this does not fit in the standard speaker location under the heatsink (its size interferes with the retraction of the wand) it can be mounted within the base of the gun box and offers just enough sound to be heard (indoors at least) and can double as a rumble motor due to being able to reproduce the low-end sounds which the stock speaker cannot. This larger speaker can also be fitted into a optional Heatsink located in the STL folder of this repository. A potential example of how the upgraded 40mm speaker might be installed into the gun box is shown below in a DIY build. Note that in order to fit these components as shown the barrel connector for power was CAREFULLY removed (as it will not be used), and the screw posts for the wand mount were filed down to ensure they do not interfere with fitment. Other users in the community have reported satisfactory results with the Visaton speakers available through DigiKey which are both of identical specs (300 Hz to 20 kHz) and closer in size to the stock speaker. The Visaton speaker fits in the standard heatsink with little modifications or it can fit in a alternative heatsink which is provided in the STL folder of this repository: K-36-WP 8ohm K-36-MO 8ohm Optional Part Shown: 3D Model for Wand - 40mm Speaker Mount","title":"WAV Trigger on-board amplifier (mono output only)"},{"location":"SOUND/#for-more-wand-mounting-solutions-refer-to-the-diy-wand-setup-page","text":"","title":"For more wand mounting solutions, refer to the DIY Wand Setup page"},{"location":"TROUBLESHOOTING/","text":"Troubleshooting If you are experiencing issues during the installation process there are a few ways to get back on track. Use the guides below to help narrow down where you are having an issue and try the suggested remedies. Should you need additional assistance, reach out to the GPStar Technologies Facebook group and either use the group search (see below) or post a question to the community. General Guidance Before continuing, be certain whether the following items have been reviewed: Check he operation switch on your audio controller: GPStar Audio should be set to BOOT. WAV Trigger should be set to RUN. Check that the microSD card is fully seated (pushed) into its socket. Check the JST connector on the PCB controller is fully seated into its socket. Verify the connections are intact and solid for GND, 5Vin, Rx, and Tx in all parts of the hose connectors. Sound files should start with a file having a prefix of 001_ and increment by 1. Music files should start with a file having a prefix of 500_ and increment by 1. Switch to SanDisk brand media as these SD cards have proven reliable in every use case. Troubleshooting: Proton Pack Since all connections to the Proton Pack utilize standard JST-XH connections to the available devices, please re-check any connections for incorrect seating and polarity before continuing. If these are in place then at a minimum you should be able to turn on the pack using the red switch under the ion arm which should cause the Power Cell lights to activate. This will be the primary means of validating that the pack controller is enabled. Pack will not power on (no lights or sounds) Confirm that the battery pack is sufficiently charged, switched to the on state, and USB-to-JST connection is in place. Pack Cyclotron (lid) will not light up Always be sure that your Power Cell device is plugged in and working, first. Both the Power Cell and Cyclotron are considered to be a single, continuious chain of LEDs and the latter will not function without the former. Note that when you first apply power to your pack you should hear and see a startup sequence which is a form of sanity check on the hardware to confirm the lights are working as expected. If using the Cyclotron Bypass (for Spirit or DIY packs) you must ensure the jumper is in place on the board to simulate the lid closure state. Removing or replacing the jumper while power is applied should result in an audio cue to indicate the bypass device is working (simulating lid removal and replacement). Pack has lights but does not play audio Re-check the 3.5mm audio cable is connected to the audio amplifier, and that the audio amplifier has power, is connected to at least 1 speaker, and volume has been turned up to at least 30%. If possible, connect the 3.5mm audio cable to a known-good audio source such as a smartphone, Alexa device, or similar to confirm that the amplifier is capable of receiving a signal. If there is still no sound from your Proton Pack, please refer to the Audio Troubleshooting section at the bottom of this page. Troubleshooting: Neutrona Wand The wand assumes successful operation of the pack, so please only proceed once that has been established. Wand will not power on (no lights or sounds) The wand is expects to communicate with the pack and will only power on when that connection is successfully established. If no lights or audio are observed when using the Activate switch, please consider the following options. Re-check the Power/GND connections in the hose to make sure they are not reversed. Also check if the ends of the wires are making contact on the Neutrik connectors when clamping down. You can tin the ends of the wires to make it a bit thicker or simply fold them over to double them up. Just make sure the Neutrik connectors are not clamping down on the rubber part of the wire. If you are using the 28 Segment bargraph from Frutto Technology, make sure the connection cables are plugged into the proper connectors. If the power cable for the bargraph is plugged into the SCL/SDA connector on the wand board and the communication cable is plugged into the 5V power connector on the wand board, then the wand will not start up. Wand has a blinking vent light but does not start up When the wand is trying to establish communication to the GPStar Proton Pack controller, the LED beside the vent light blinks. When a successful connection is made, the light will stop blinking. Re-check the TX/RX serial connections in the hose to make sure they are not reversed. Also check if the ends of the wires are making contact on the Neutrik connectors when clamping down. You can tin the ends of the wires to make it a bit thicker or simply fold them over to double them up. Just make sure the Neutrik connectors are not clamping down on the rubber part of the wire. (Firmware 5.3.3 or later) You can test to see if your issue is related to the serial data lines for the hose connectors by shorting the wand board's pack data connector TX and RX pins. This will cause the wand to start in standalone mode and ignore the Proton Pack. Wand has no audio Re-check the connection to the speaker. Polarity should be observed for the best audio quality, though a reversed connection should still support some form of audio playback. Re-flash the latest software to both the pack and wand controllers. These devices must be in agreement for the communication layer to operate correctly. Re-check the Tx/Rx connections to the pack. If these are reversed it will prevent proper communication. Attempt to switch the wires at the pack-side connector which use screw terminals, and retry the Activate switch. Re-check the power connection to the wand. If you have a digital multimeter available, set the device to the DC power measurement and check that the 5V-OUT connection is supplying the expected voltage. Be careful to not short out the pins and mind the polarity. Wand has audio briefly before it cuts out Re-check the connection to the speaker terminal blocks on the Audio board. Make sure the wires seat well, if needed, add a dab of solder onto the ends. If there is still no sound from your Neutrona Wand, please refer to the Audio Troubleshooting section at the bottom of this page. The music I added is not playing back Make sure to following the naming conventions that are indicated in the Loading The Audio Files guide. Remove any metadata that may be embedded in your wav files. This can cause problems with loading the music. The Proton Pack at a minimum must contain all the music, however it is advised for the Neutrona Wand to have the same files as well if you want music to also play back from the Neutrona Wand audio system while the Neutrona Wand is operating in Bench Test Mode. I'm firing but no overheating is happening! If your pack and wand are on default settings (you may test this by entering the EEPROM Configuration Menu then pressing Intensify to clear all settings, then turn off the Talentcell battery so the changes take effect), only Power Level 5 will overheat, and will do so after 30 seconds. If you have made changes to EEPROM settings, here are common reasons why overheating may not occur as expected. If you are in Cross The Streams or Cross The Streams Mix instead of Video Game Modes, overheating will only occur when using the alternate fire button (Barrel Wing Button). No overheating will occur if you hold Intensify by itself. Check to make sure you have the global Overheating setting enabled. If this is disabled, no overheating will ever occur. Check to make sure that the overheating toggle for the specific power level you are in is also enabled (enabling overheating generally will not automatically enable it for all power levels). Check to see what you have the Overheat Start Delay for the specific power level you are in set to. For example, merely enabling overheating for Power Level 1 will mean it will take 60 full seconds before overheating triggers by default. Bench Test Mode If you wish to use the Neutrona Wand without a Proton Pack, flash NeutronaWand-BenchTest.hex from the Neutrona Wand binary extras folder to the device to enable a special mode which will allow the wand to operate without waiting for a response from the pack. As of firmware 5.3.3 you can also bridge/jumper the Proton Pack TX1 and RX1 pins on the Neutrona Wand circuit board to enable Bench Test mode without flashing the above firmware (see below image). This is useful for debugging whether an issue with your Proton Pack serial connection is the cause of your wand issues. Troubleshooting: Audio IMPORTANT: Metadata Problems When adding extra music to your system, many audio software tend to add metadata information into the file. This will prevent the file from playing. As simple as importing the file into Audacity and re-exporting will solve the issue, or you can use any other software to remove the Meta Data information. Depending on which audio board or amplifier you are using in your system, following the troubleshooting guides below. GPStar Amplifier Troubleshooting When using the GPStar Amplifier I V1.0, if no audio is heard but the green LED is lit, make sure that 2 jumpers are attached on the 6 pin JST connector near the center of the board. This connector is reserved for use with a 250k stereo potentiometer but must be configured to allow audio to pass when one is not in use. The following table shows the 2 pairs of pins which must be jumpered for operation. R-I R-O GND L-I L-O GND X X X X Remember that a ground loop isolator is not required for this device as this is built into the hardware. Use of an additional isolator may negatively impact the audio quality. GPStar Audio Troubleshooting Make sure your WAV files are named properly and are located in the root directory of the microSD card. When you first power on GPStar Audio, it will locate and index the files and then the green LED will blink at half second intervals. NOTE: As of firmware 5.4.4, once the GPStar Audio successfully connects to one of the device boards the green LED will turn off to prevent light bleed. If there\u2019s no activity on the green status LED whatsoever when you first power up the GPStar Audio, check the \u201cBOOT/LOAD\u201d switch next to the 6 pin JST-XH connector is in the \u201cBOOT\u201d position. Once you see the green status LED blinking slowly, pressing the on-board \"Test\" button will play the lowest numbered track on the microSD card. Confirm this by observing the green status LED turning blinking very rapidly to indicate a track is playing. You should hear the track through the stereo jack or any speaker connected to the board. NOTE: As of firmware 5.4.4, this LED will not blink if the GPStar Audio has successfully connected to GPStar equipment. The GPStar Audio can be tested outside of equipment by plugging your GPStar Programming Cable into the white device connector and connecting the USB cable to your computer. Low quality SD Cards sometimes provide issues such as sounds not playing. Please consider using high quality SD Cards. We recommend the Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. If you\u2019ve gotten this far and tracks won\u2019t play, then it\u2019s most likely that your WAV files are not the correct format. GPStar Audio will only play uncompressed WAV files formatted as 16-bit, stereo, 44.1kHz, and there can be no meta-data (non-audio data) in the file before the audio data. It seems that many Mac audio applications insert a meta-data chunk prior to the audio, and this will prevent the track from playing. In such cases, simply importing the file and re-exporting with Audacity will likely fix the problem. Please remove any metadata contained in the music wav files you add, as it can cause issues loading the file for playback. WAV Trigger Troubleshooting Startup Blinking Patterns: 1x (long) - 1 long blink upon startup indicates that the SD card is no good or the formatting was bad. Re-format fully using your OS or the provided guiformat.exe utility in extras (for Windows only). Name brand microSD cards are highly recommended, with SanDisk having been proven the most reliable so far. 3x (quick) - 3 quick blinks in succession is the normal pattern at initial power-up to indicate the device has initialized without issues. Post Startup Blinking Patterns 1x - The WAV Trigger will blink once every ~4 seconds when the PCB and device are powered on. This indicates a regular serial connection checking the status of the WAV Trigger and is to be expected. WAV Trigger Troubleshooting Make sure your WAV files are named properly and are located in the root directory of the microSD card. When you first power on the WAV Trigger, it will locate and index the files and then blink 3 times to indicate that it found at least one WAV file. One long blink means that it either couldn\u2019t read the card or it didn\u2019t find any WAV files. If there\u2019s no activity on the \"Red\" status LED whatsoever when you power up the WAV Trigger, check the \u201cLoad/Run\u201d switch next to the power connector and make sure it\u2019s in the \u201cRun\u201d position. Once you get the 3 blinks, pressing the on-board button will play the lowest numbered track on the microSD card. Confirm this by observing the status LED turning on to indicate a track is playing. You should hear the track through the stereo jack. If the audio is not working, try plugging in a set of headphones into the 3.5mm audio port and test again. If you\u2019re using the on-board audio amp and speaker connection, you won\u2019t hear anything unless the onboard amp is enabled using the init file or via software. Low quality SD Cards sometimes provide issues such as sounds not playing. Please consider using high quality SD Cards. We recommend the Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. If you\u2019ve gotten this far and tracks won\u2019t play, then it\u2019s most likely that your WAV files are not the correct format. The WAV Trigger will only play WAV files formatted as 16-bit, stereo, 44.1kHz, and there can be no meta-data (non-audio data) in the file before the audio data. It seems that many Mac audio applications insert a meta-data chunk prior to the audio, and this will prevent the track from playing. In such cases, simply importing the file and re-exporting with Audacity will likely fix the problem. Please remove any metadata contained in the music wav files you add, as it can cause issues loading the file for playback. Manual for the WAV Trigger [pdf]","title":"Troubleshooting"},{"location":"TROUBLESHOOTING/#troubleshooting","text":"If you are experiencing issues during the installation process there are a few ways to get back on track. Use the guides below to help narrow down where you are having an issue and try the suggested remedies. Should you need additional assistance, reach out to the GPStar Technologies Facebook group and either use the group search (see below) or post a question to the community.","title":"Troubleshooting"},{"location":"TROUBLESHOOTING/#general-guidance","text":"Before continuing, be certain whether the following items have been reviewed: Check he operation switch on your audio controller: GPStar Audio should be set to BOOT. WAV Trigger should be set to RUN. Check that the microSD card is fully seated (pushed) into its socket. Check the JST connector on the PCB controller is fully seated into its socket. Verify the connections are intact and solid for GND, 5Vin, Rx, and Tx in all parts of the hose connectors. Sound files should start with a file having a prefix of 001_ and increment by 1. Music files should start with a file having a prefix of 500_ and increment by 1. Switch to SanDisk brand media as these SD cards have proven reliable in every use case.","title":"General Guidance"},{"location":"TROUBLESHOOTING/#troubleshooting-proton-pack","text":"Since all connections to the Proton Pack utilize standard JST-XH connections to the available devices, please re-check any connections for incorrect seating and polarity before continuing. If these are in place then at a minimum you should be able to turn on the pack using the red switch under the ion arm which should cause the Power Cell lights to activate. This will be the primary means of validating that the pack controller is enabled.","title":"Troubleshooting: Proton Pack"},{"location":"TROUBLESHOOTING/#pack-will-not-power-on-no-lights-or-sounds","text":"Confirm that the battery pack is sufficiently charged, switched to the on state, and USB-to-JST connection is in place.","title":"Pack will not power on (no lights or sounds)"},{"location":"TROUBLESHOOTING/#pack-cyclotron-lid-will-not-light-up","text":"Always be sure that your Power Cell device is plugged in and working, first. Both the Power Cell and Cyclotron are considered to be a single, continuious chain of LEDs and the latter will not function without the former. Note that when you first apply power to your pack you should hear and see a startup sequence which is a form of sanity check on the hardware to confirm the lights are working as expected. If using the Cyclotron Bypass (for Spirit or DIY packs) you must ensure the jumper is in place on the board to simulate the lid closure state. Removing or replacing the jumper while power is applied should result in an audio cue to indicate the bypass device is working (simulating lid removal and replacement).","title":"Pack Cyclotron (lid) will not light up"},{"location":"TROUBLESHOOTING/#pack-has-lights-but-does-not-play-audio","text":"Re-check the 3.5mm audio cable is connected to the audio amplifier, and that the audio amplifier has power, is connected to at least 1 speaker, and volume has been turned up to at least 30%. If possible, connect the 3.5mm audio cable to a known-good audio source such as a smartphone, Alexa device, or similar to confirm that the amplifier is capable of receiving a signal. If there is still no sound from your Proton Pack, please refer to the Audio Troubleshooting section at the bottom of this page.","title":"Pack has lights but does not play audio"},{"location":"TROUBLESHOOTING/#troubleshooting-neutrona-wand","text":"The wand assumes successful operation of the pack, so please only proceed once that has been established.","title":"Troubleshooting: Neutrona Wand"},{"location":"TROUBLESHOOTING/#wand-will-not-power-on-no-lights-or-sounds","text":"The wand is expects to communicate with the pack and will only power on when that connection is successfully established. If no lights or audio are observed when using the Activate switch, please consider the following options. Re-check the Power/GND connections in the hose to make sure they are not reversed. Also check if the ends of the wires are making contact on the Neutrik connectors when clamping down. You can tin the ends of the wires to make it a bit thicker or simply fold them over to double them up. Just make sure the Neutrik connectors are not clamping down on the rubber part of the wire. If you are using the 28 Segment bargraph from Frutto Technology, make sure the connection cables are plugged into the proper connectors. If the power cable for the bargraph is plugged into the SCL/SDA connector on the wand board and the communication cable is plugged into the 5V power connector on the wand board, then the wand will not start up.","title":"Wand will not power on (no lights or sounds)"},{"location":"TROUBLESHOOTING/#wand-has-a-blinking-vent-light-but-does-not-start-up","text":"When the wand is trying to establish communication to the GPStar Proton Pack controller, the LED beside the vent light blinks. When a successful connection is made, the light will stop blinking. Re-check the TX/RX serial connections in the hose to make sure they are not reversed. Also check if the ends of the wires are making contact on the Neutrik connectors when clamping down. You can tin the ends of the wires to make it a bit thicker or simply fold them over to double them up. Just make sure the Neutrik connectors are not clamping down on the rubber part of the wire. (Firmware 5.3.3 or later) You can test to see if your issue is related to the serial data lines for the hose connectors by shorting the wand board's pack data connector TX and RX pins. This will cause the wand to start in standalone mode and ignore the Proton Pack.","title":"Wand has a blinking vent light but does not start up"},{"location":"TROUBLESHOOTING/#wand-has-no-audio","text":"Re-check the connection to the speaker. Polarity should be observed for the best audio quality, though a reversed connection should still support some form of audio playback. Re-flash the latest software to both the pack and wand controllers. These devices must be in agreement for the communication layer to operate correctly. Re-check the Tx/Rx connections to the pack. If these are reversed it will prevent proper communication. Attempt to switch the wires at the pack-side connector which use screw terminals, and retry the Activate switch. Re-check the power connection to the wand. If you have a digital multimeter available, set the device to the DC power measurement and check that the 5V-OUT connection is supplying the expected voltage. Be careful to not short out the pins and mind the polarity.","title":"Wand has no audio"},{"location":"TROUBLESHOOTING/#wand-has-audio-briefly-before-it-cuts-out","text":"Re-check the connection to the speaker terminal blocks on the Audio board. Make sure the wires seat well, if needed, add a dab of solder onto the ends. If there is still no sound from your Neutrona Wand, please refer to the Audio Troubleshooting section at the bottom of this page.","title":"Wand has audio briefly before it cuts out"},{"location":"TROUBLESHOOTING/#the-music-i-added-is-not-playing-back","text":"Make sure to following the naming conventions that are indicated in the Loading The Audio Files guide. Remove any metadata that may be embedded in your wav files. This can cause problems with loading the music. The Proton Pack at a minimum must contain all the music, however it is advised for the Neutrona Wand to have the same files as well if you want music to also play back from the Neutrona Wand audio system while the Neutrona Wand is operating in Bench Test Mode.","title":"The music I added is not playing back"},{"location":"TROUBLESHOOTING/#im-firing-but-no-overheating-is-happening","text":"If your pack and wand are on default settings (you may test this by entering the EEPROM Configuration Menu then pressing Intensify to clear all settings, then turn off the Talentcell battery so the changes take effect), only Power Level 5 will overheat, and will do so after 30 seconds. If you have made changes to EEPROM settings, here are common reasons why overheating may not occur as expected. If you are in Cross The Streams or Cross The Streams Mix instead of Video Game Modes, overheating will only occur when using the alternate fire button (Barrel Wing Button). No overheating will occur if you hold Intensify by itself. Check to make sure you have the global Overheating setting enabled. If this is disabled, no overheating will ever occur. Check to make sure that the overheating toggle for the specific power level you are in is also enabled (enabling overheating generally will not automatically enable it for all power levels). Check to see what you have the Overheat Start Delay for the specific power level you are in set to. For example, merely enabling overheating for Power Level 1 will mean it will take 60 full seconds before overheating triggers by default.","title":"I'm firing but no overheating is happening!"},{"location":"TROUBLESHOOTING/#bench-test-mode","text":"If you wish to use the Neutrona Wand without a Proton Pack, flash NeutronaWand-BenchTest.hex from the Neutrona Wand binary extras folder to the device to enable a special mode which will allow the wand to operate without waiting for a response from the pack. As of firmware 5.3.3 you can also bridge/jumper the Proton Pack TX1 and RX1 pins on the Neutrona Wand circuit board to enable Bench Test mode without flashing the above firmware (see below image). This is useful for debugging whether an issue with your Proton Pack serial connection is the cause of your wand issues.","title":"Bench Test Mode"},{"location":"TROUBLESHOOTING/#troubleshooting-audio","text":"","title":"Troubleshooting: Audio"},{"location":"TROUBLESHOOTING/#important-metadata-problems","text":"When adding extra music to your system, many audio software tend to add metadata information into the file. This will prevent the file from playing. As simple as importing the file into Audacity and re-exporting will solve the issue, or you can use any other software to remove the Meta Data information. Depending on which audio board or amplifier you are using in your system, following the troubleshooting guides below.","title":"IMPORTANT: Metadata Problems"},{"location":"TROUBLESHOOTING/#gpstar-amplifier-troubleshooting","text":"When using the GPStar Amplifier I V1.0, if no audio is heard but the green LED is lit, make sure that 2 jumpers are attached on the 6 pin JST connector near the center of the board. This connector is reserved for use with a 250k stereo potentiometer but must be configured to allow audio to pass when one is not in use. The following table shows the 2 pairs of pins which must be jumpered for operation. R-I R-O GND L-I L-O GND X X X X Remember that a ground loop isolator is not required for this device as this is built into the hardware. Use of an additional isolator may negatively impact the audio quality.","title":"GPStar Amplifier Troubleshooting"},{"location":"TROUBLESHOOTING/#gpstar-audio-troubleshooting","text":"Make sure your WAV files are named properly and are located in the root directory of the microSD card. When you first power on GPStar Audio, it will locate and index the files and then the green LED will blink at half second intervals. NOTE: As of firmware 5.4.4, once the GPStar Audio successfully connects to one of the device boards the green LED will turn off to prevent light bleed. If there\u2019s no activity on the green status LED whatsoever when you first power up the GPStar Audio, check the \u201cBOOT/LOAD\u201d switch next to the 6 pin JST-XH connector is in the \u201cBOOT\u201d position. Once you see the green status LED blinking slowly, pressing the on-board \"Test\" button will play the lowest numbered track on the microSD card. Confirm this by observing the green status LED turning blinking very rapidly to indicate a track is playing. You should hear the track through the stereo jack or any speaker connected to the board. NOTE: As of firmware 5.4.4, this LED will not blink if the GPStar Audio has successfully connected to GPStar equipment. The GPStar Audio can be tested outside of equipment by plugging your GPStar Programming Cable into the white device connector and connecting the USB cable to your computer. Low quality SD Cards sometimes provide issues such as sounds not playing. Please consider using high quality SD Cards. We recommend the Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. If you\u2019ve gotten this far and tracks won\u2019t play, then it\u2019s most likely that your WAV files are not the correct format. GPStar Audio will only play uncompressed WAV files formatted as 16-bit, stereo, 44.1kHz, and there can be no meta-data (non-audio data) in the file before the audio data. It seems that many Mac audio applications insert a meta-data chunk prior to the audio, and this will prevent the track from playing. In such cases, simply importing the file and re-exporting with Audacity will likely fix the problem. Please remove any metadata contained in the music wav files you add, as it can cause issues loading the file for playback.","title":"GPStar Audio Troubleshooting"},{"location":"TROUBLESHOOTING/#wav-trigger-troubleshooting","text":"Startup Blinking Patterns: 1x (long) - 1 long blink upon startup indicates that the SD card is no good or the formatting was bad. Re-format fully using your OS or the provided guiformat.exe utility in extras (for Windows only). Name brand microSD cards are highly recommended, with SanDisk having been proven the most reliable so far. 3x (quick) - 3 quick blinks in succession is the normal pattern at initial power-up to indicate the device has initialized without issues. Post Startup Blinking Patterns 1x - The WAV Trigger will blink once every ~4 seconds when the PCB and device are powered on. This indicates a regular serial connection checking the status of the WAV Trigger and is to be expected. WAV Trigger Troubleshooting Make sure your WAV files are named properly and are located in the root directory of the microSD card. When you first power on the WAV Trigger, it will locate and index the files and then blink 3 times to indicate that it found at least one WAV file. One long blink means that it either couldn\u2019t read the card or it didn\u2019t find any WAV files. If there\u2019s no activity on the \"Red\" status LED whatsoever when you power up the WAV Trigger, check the \u201cLoad/Run\u201d switch next to the power connector and make sure it\u2019s in the \u201cRun\u201d position. Once you get the 3 blinks, pressing the on-board button will play the lowest numbered track on the microSD card. Confirm this by observing the status LED turning on to indicate a track is playing. You should hear the track through the stereo jack. If the audio is not working, try plugging in a set of headphones into the 3.5mm audio port and test again. If you\u2019re using the on-board audio amp and speaker connection, you won\u2019t hear anything unless the onboard amp is enabled using the init file or via software. Low quality SD Cards sometimes provide issues such as sounds not playing. Please consider using high quality SD Cards. We recommend the Sandisk Extreme A1/A2 U3 V30 32GB Micro SD Cards. If you\u2019ve gotten this far and tracks won\u2019t play, then it\u2019s most likely that your WAV files are not the correct format. The WAV Trigger will only play WAV files formatted as 16-bit, stereo, 44.1kHz, and there can be no meta-data (non-audio data) in the file before the audio data. It seems that many Mac audio applications insert a meta-data chunk prior to the audio, and this will prevent the track from playing. In such cases, simply importing the file and re-exporting with Audacity will likely fix the problem. Please remove any metadata contained in the music wav files you add, as it can cause issues loading the file for playback. Manual for the WAV Trigger [pdf]","title":"WAV Trigger Troubleshooting"},{"location":"VENTLIGHT/","text":"GPStar RGB Vent Lights (Optional) A colour changing vent light board that can be installed very easily with the GPStar Neutrona Wand PCB with no soldering required. Installation Mount the board and wire the connections as indicated in the photo below. Note that the GND wire for the vent light board shares the same connection in the terminal blocks as the top dial ROT- terminal. Vent Light Neutrona Wand VL+ VL+ D12 D12 GND ROT- After installation, you will need to enter the EEPROM Lighting Menu to enable the GPSTar RGB Vent Light. Please see the [EEPROM Configuration](OPERATION_EEPROM.md) guide. Frutto Technology High Intensity Vent Lights A brighter high intensity vent light from Frutto Technology can be installed very easily with the GPStar Neutrona Wand PCB with no soldering required. Installation Mount the board and wire the connections as indicated in the photo below. Note that the GND wire for the vent light board shares the same connection in the terminal blocks as the top dial ROT- terminal. This circuit draws around 100mA, so that is why you need to provide the GND pin. WARNING: The light is very intense, do not look at it directly. By default, the intensity of the Frutto Technology vent light is based on the power level and firing status of the wand. If you wish to disable this feature, please see the [Advanced Configuration](ADVCONFIG.md) guide.","title":"Vent Lights"},{"location":"VENTLIGHT/#gpstar-rgb-vent-lights-optional","text":"A colour changing vent light board that can be installed very easily with the GPStar Neutrona Wand PCB with no soldering required.","title":"GPStar RGB Vent Lights (Optional)"},{"location":"VENTLIGHT/#installation","text":"Mount the board and wire the connections as indicated in the photo below. Note that the GND wire for the vent light board shares the same connection in the terminal blocks as the top dial ROT- terminal. Vent Light Neutrona Wand VL+ VL+ D12 D12 GND ROT- After installation, you will need to enter the EEPROM Lighting Menu to enable the GPSTar RGB Vent Light. Please see the [EEPROM Configuration](OPERATION_EEPROM.md) guide.","title":"Installation"},{"location":"VENTLIGHT/#frutto-technology-high-intensity-vent-lights","text":"A brighter high intensity vent light from Frutto Technology can be installed very easily with the GPStar Neutrona Wand PCB with no soldering required.","title":"Frutto Technology High Intensity Vent Lights"},{"location":"VENTLIGHT/#installation_1","text":"Mount the board and wire the connections as indicated in the photo below. Note that the GND wire for the vent light board shares the same connection in the terminal blocks as the top dial ROT- terminal. This circuit draws around 100mA, so that is why you need to provide the GND pin. WARNING: The light is very intense, do not look at it directly. By default, the intensity of the Frutto Technology vent light is based on the power level and firing status of the wand. If you wish to disable this feature, please see the [Advanced Configuration](ADVCONFIG.md) guide.","title":"Installation"},{"location":"VSCODE/","text":"VSCode + PlatformIO This guide will outline how to begin coding and compiling using Visual Studio Code and PlatformIO instead of ArduinoIDE. Prerequisites Start with downloading the VSCode IDE for your operating system and get the PlatformIO extension added. Visual Studio Code for Windows, macOS, and Linux How to install PlatformIO for VSCode Once PIO is available you can get to the Platforms and Libraries tabs to begin adding support for our typical microcontrollers and to manage the libraries independently and with specific version requirements. We need support for the correct platforms first, so we'll need to access PlatformIO and begin adding those. Select the PlatformIO tab on the left-hand panel Go to PIO Home > Platforms Install the following for hardware support: Atmel megaAVR for ATMega 2560 Espressif 32 for ESP32 Libraries Before installing a library you'll need a project in context. Alternatively, once a project is configured with libraries they will be downloaded automatically and kept up to date per an associated platformio.ini file. Go to PIO Home > Libraries Search for the library you need to install Select the project for which the library is needed Once associated with a project, all libraries will be downloaded by PlatformIO upon opening the project. Command Line Tools To compile a PlatformIO project via shell script, you will need the \"pio\" utility which can be installed via Python v3.11 or higher . After installing Python3 run the following: pip install platformio If you need to upgrade pip that can be done using the following: pip install --upgrade pip Once the pio utility is available, the included scripts in the project's .github/ folder may be used to compile code. Uploading Firmware Each project's platformio.ini file specifies the upload speed and a default upload port for the device based on typical device names used to flash the hardware. This may need to be adjusted for your local machine if using a non-standard FTDI flashing cable. You can use the PIO home tab in VSCode to view a list of connected Devices. If your device cannot be identified from the list, try unplugging the device, refresh the page, plug it in again, and refresh again to see if there are any changes. Remember that if your OS cannot see the device you may need to install a USB driver. Code Assistance This project is enabled for use with Github CoPilot for development assistance. The file .github/copilot-instructions.md serves as a template to the AI assistant to set standards for coding and fulfill assumptions about the project.","title":"VSCode + PlatformIO"},{"location":"VSCODE/#vscode-platformio","text":"This guide will outline how to begin coding and compiling using Visual Studio Code and PlatformIO instead of ArduinoIDE.","title":"VSCode + PlatformIO"},{"location":"VSCODE/#prerequisites","text":"Start with downloading the VSCode IDE for your operating system and get the PlatformIO extension added. Visual Studio Code for Windows, macOS, and Linux How to install PlatformIO for VSCode Once PIO is available you can get to the Platforms and Libraries tabs to begin adding support for our typical microcontrollers and to manage the libraries independently and with specific version requirements. We need support for the correct platforms first, so we'll need to access PlatformIO and begin adding those. Select the PlatformIO tab on the left-hand panel Go to PIO Home > Platforms Install the following for hardware support: Atmel megaAVR for ATMega 2560 Espressif 32 for ESP32","title":"Prerequisites"},{"location":"VSCODE/#libraries","text":"Before installing a library you'll need a project in context. Alternatively, once a project is configured with libraries they will be downloaded automatically and kept up to date per an associated platformio.ini file. Go to PIO Home > Libraries Search for the library you need to install Select the project for which the library is needed Once associated with a project, all libraries will be downloaded by PlatformIO upon opening the project.","title":"Libraries"},{"location":"VSCODE/#command-line-tools","text":"To compile a PlatformIO project via shell script, you will need the \"pio\" utility which can be installed via Python v3.11 or higher . After installing Python3 run the following: pip install platformio If you need to upgrade pip that can be done using the following: pip install --upgrade pip Once the pio utility is available, the included scripts in the project's .github/ folder may be used to compile code.","title":"Command Line Tools"},{"location":"VSCODE/#uploading-firmware","text":"Each project's platformio.ini file specifies the upload speed and a default upload port for the device based on typical device names used to flash the hardware. This may need to be adjusted for your local machine if using a non-standard FTDI flashing cable. You can use the PIO home tab in VSCode to view a list of connected Devices. If your device cannot be identified from the list, try unplugging the device, refresh the page, plug it in again, and refresh again to see if there are any changes. Remember that if your OS cannot see the device you may need to install a USB driver.","title":"Uploading Firmware"},{"location":"VSCODE/#code-assistance","text":"This project is enabled for use with Github CoPilot for development assistance. The file .github/copilot-instructions.md serves as a template to the AI assistant to set standards for coding and fulfill assumptions about the project.","title":"Code Assistance"},{"location":"WAND_PCB/","text":"GPStar Wand PCB Hookup This guide is part of the kit approach to providing a minimally-invasive upgrade to the stock HasLab controllers. For the Neutrona Wand all available connections for JST-PH wiring is present, though a significant amount of wire-cutting will be required to separate the stock controller and re-attach using terminal blocks on the new PCB. The diagrams below detail the standard HasLab connections as well as using the 28-segment or 30-segment bargraphs. Neutrona Wand - Connection Details Connections for the wand should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom. Pins denoted A#/D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\". Stock Connectors (JST-PH) Label Pins Notes 5V-IN +/- 2-pin JST-PH for power from Proton Pack. This MUST be a regulated 5V source! Q2 VCC/D10/GND 3-pin JST-PH connection for addressable barrel LEDs SW45/SW4 GND/D2/GND/D3 4-pin JST-PH connection for the Intensify button and Activate toggle SW6 GND/A6 2-pin JST-PH connection for the orange wand-end mode/alt switch Note: The 3-pin connector for the Barrel LEDs is compatible with the Frutto Technology 49-LED wand barrel replacement as a drop-in replacement. Stock Connectors (Terminal Blocks) Label/Pin Color Notes A7 Orange Barrel extension switch (wire order does not matter) GND Orange Barrel extension switch (wire order does not matter) D8 Red Slo-Blo VCC GND Black Slo-Blo GND D4 Brown Lower-right Toggle (wire order does not matter) GND Brown Lower-right Toggle (wire order does not matter) A0 Red Upper-right Toggle (wire order does not matter) GND Red Upper-right Toggle (wire order does not matter) D9 Red Clippard LED (Top Left) VCC GND Yellow Clippard LED (Top Left) GND R+ Red Rumble (vibration) motor VCC R- Black Rumble (vibration) motor GND VCC Blue Power for stock bar graph A5 Green Stock bar graph LED 5 A4 Yellow Stock bar graph LED 4 A3 Orange Stock bar graph LED 3 A2 Red Stock bar graph LED 2 A1 Brown Stock bar graph LED 1 D12 White Blinking top right LED / RGB vent light data D13 Black White vent light LED VL+ Red VCC for top/vent lights D7 Orange Rotary encoder B D6 Red Rotary encoder A ROT- Brown Ground for rotary encoder Special Connectors Label Pins Notes PACK (Serial) TX1/RX1 Serial communication to the Proton Pack. Connector type: JST-PH AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the wands's GPStar Audio or WAV Trigger. Connector type: JST-PH ICSP DO NOT USE! Programming header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Audio or WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector! Optional Connectors Label Pins Notes HAT1 GND/D22 Connection for top of the barrel tip hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D22 which provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. HAT2 GND/D23 Connection for the wand box hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D23 provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. BARREL-LED GND/D24 Connection for white wand tip light. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D24 which provides 5V and has a 100\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. 5V-OUT +/- Power for additional accessories. Connector type: JST-PH SCL/SDA SCL/SDA Expansion serial port using I2C. Connector type: JST-PH Note: If using the 28-segment or 30-segment bargraph , power may be delivered via the 5V-OUT while the SCL/SDA serial connection will provide data/control.","title":"Neutrona Wand"},{"location":"WAND_PCB/#neutrona-wand-connection-details","text":"Connections for the wand should be made according to the tables below. Ordering aligns with PCB labels or when viewed left-to-right with the connector keyhole at the bottom. Pins denoted A#/D# correspond to the internal code and connection to the controller chip. Ground may be designated as \"GND\" or simply \"-\".","title":"Neutrona Wand - Connection Details"},{"location":"WAND_PCB/#stock-connectors-jst-ph","text":"Label Pins Notes 5V-IN +/- 2-pin JST-PH for power from Proton Pack. This MUST be a regulated 5V source! Q2 VCC/D10/GND 3-pin JST-PH connection for addressable barrel LEDs SW45/SW4 GND/D2/GND/D3 4-pin JST-PH connection for the Intensify button and Activate toggle SW6 GND/A6 2-pin JST-PH connection for the orange wand-end mode/alt switch Note: The 3-pin connector for the Barrel LEDs is compatible with the Frutto Technology 49-LED wand barrel replacement as a drop-in replacement.","title":"Stock Connectors (JST-PH)"},{"location":"WAND_PCB/#stock-connectors-terminal-blocks","text":"Label/Pin Color Notes A7 Orange Barrel extension switch (wire order does not matter) GND Orange Barrel extension switch (wire order does not matter) D8 Red Slo-Blo VCC GND Black Slo-Blo GND D4 Brown Lower-right Toggle (wire order does not matter) GND Brown Lower-right Toggle (wire order does not matter) A0 Red Upper-right Toggle (wire order does not matter) GND Red Upper-right Toggle (wire order does not matter) D9 Red Clippard LED (Top Left) VCC GND Yellow Clippard LED (Top Left) GND R+ Red Rumble (vibration) motor VCC R- Black Rumble (vibration) motor GND VCC Blue Power for stock bar graph A5 Green Stock bar graph LED 5 A4 Yellow Stock bar graph LED 4 A3 Orange Stock bar graph LED 3 A2 Red Stock bar graph LED 2 A1 Brown Stock bar graph LED 1 D12 White Blinking top right LED / RGB vent light data D13 Black White vent light LED VL+ Red VCC for top/vent lights D7 Orange Rotary encoder B D6 Red Rotary encoder A ROT- Brown Ground for rotary encoder","title":"Stock Connectors (Terminal Blocks)"},{"location":"WAND_PCB/#special-connectors","text":"Label Pins Notes PACK (Serial) TX1/RX1 Serial communication to the Proton Pack. Connector type: JST-PH AUDIO BOARD GND/NC/VCC/TX/RX/NC Communication and Power for the wands's GPStar Audio or WAV Trigger. Connector type: JST-PH ICSP DO NOT USE! Programming header for bootloader updates (reserved). Connector type: Header pins UART See Below Programming header for software updates (optional). Connector type: Header pins For connecting the UART pins, use a suitable FTDI chip such as the same FTDI Basic 5V used for programming the GPStar Audio or WAV Trigger. Pins on the PCB should align with with the standard wire order for FTDI-to-USB cables which use a single Dupont 6-pin connector. Observe these common colors and notes to ensure proper orientation: The ground pin will typically be a black wire, while VCC will typically be red. The DTR pin on the PCB will connect to a wire labelled either DTR or RTS. Any wire labelled CTS will be connected to the 2nd pin labelled GND on the PCB. Be careful to not reverse the connector!","title":"Special Connectors"},{"location":"WAND_PCB/#optional-connectors","text":"Label Pins Notes HAT1 GND/D22 Connection for top of the barrel tip hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D22 which provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. HAT2 GND/D23 Connection for the wand box hat LED. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D23 provides 5V and has a 150\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. BARREL-LED GND/D24 Connection for white wand tip light. The left (top in the photo) pin is GND, the right (bottom in the photo) pin is D24 which provides 5V and has a 100\u03a9 resistor connected to it. Connector type: JST-PH Do not draw more than 40mA from this connector. 5V-OUT +/- Power for additional accessories. Connector type: JST-PH SCL/SDA SCL/SDA Expansion serial port using I2C. Connector type: JST-PH Note: If using the 28-segment or 30-segment bargraph , power may be delivered via the 5V-OUT while the SCL/SDA serial connection will provide data/control.","title":"Optional Connectors"},{"location":"WAVTRIGGER/","text":"WAV Trigger Configuration The first thing to take care of is updating the firmware on the WAV Trigger boards. They all currently ship with at least version 1.34, and 1.40 is required for some unique features of the GPStar Proton Pack. Version 1.40 can be found here in this repository in the extras folder. The WAV Trigger software updater and instructions can be found on the Robertsonics website . To update the firmware, an FTDI Basic (5V version) from Sparkfun should be used to interface with the WAV Trigger. You may also use any USB-to-serial adapter, so long as it is a TTL-level device, not RS- 232. Plugging RS-232 level signals into the WAV Trigger serial interface will damage the WAV Trigger! WAV Trigger Firmware v1.40 - Custom firmware for GPStar equipment, not available via manufacturer's website. WAV Trigger Flasher Utility v2.00 Windows Executable (zip) WAV Trigger Flasher Utility v2.00 OS X (10.11 and above) (dmg) Only 4 connections between the boards will be required: TX/RX and 5V/Ground. Firmware Summary Steps Solder wires directly or use a row of pin headers to the holes along the bottom right edge of the WAV Trigger (as viewed with the barrel connector oriented at the top left). Solder the small pad marked \"5V\" just below the sockets for SPKR +/-. This will allow the WAV Trigger to operate from the 5V supplied by USB and later the battery for your Proton Pack. There is a small switch near the power connect (barrel) to on the WAV Trigger, set it to the \u201cload\u201d position. Connect the following wires from the FTDI to WAV Trigger: RX on the FTDI to the TX of the WAV Trigger. TX from the FTDI to the RX of the WAV Trigger. 5V from the FTDI to 5Vin. GND from one side to the other. Plug in the USB cable from your computer to the FTDI board. Run the WT-Flasher app on your computer, then click on BROWSE and navigate to and select the 1.40 firmware hex file WAVTrig_20231001_v140.hex that you downloaded from the extras folder in this repository. Once connected to your computer, click the RESCAN button and select the device from the drop down USB Serial Port menu. Then click the PROGRAM button. The app should establish communication and begin flashing the new firmware. After it has finished updating the firmware, disconnect everything and set the black switch back from LOAD to RUN . While flashing, you will see a number % progress indicator at the bottom of the Flasher software window indicating the status of the flashing progress. IMPORTANT: Make sure after flashing the firmware to set the small switch on the WAV Trigger back to the RUN position. Note the \"5V\" pad just below the SPKR connection holes. Connections Once the firmware is updated to 1.40 and you have confirmed this using the WAV Trigger setup utility, there will be connections made to the respective microcontroller boards. Similar to the previous step the RX and TX will go to the respective TX and RX ports on the microcontroller boards. See the setup instructions for the Pack and Wand as necessary. The 5Vin and GND will be connected to the power to each of the pack and wand, respectively. DO NOT use the 5V port on either Mega or Nano to drive this device--you will need to split your power connection to each device to provide sufficient current. NOTE: See below for more information. I used standard breadboard friendly header jumper cables to make the connections from the FTDI basic to the connectors I added to the WAV Trigger. Also note that the WAV Triggers have both a AUX output and/or 2 pins for audio output. You can use either or to connect to your speakers or amps. IMPORTANT: You will need to solder the 5V pad on the WAV Trigger to enable 5V power from the device. After you do this, NEVER USE the BARREL CONNECTOR for power. We will be using 5V to power the WAV Triggers for both in the Pack and the Wand. Loading Audio Files Please see the Audio Files guide.","title":"WAV Trigger Configuration"},{"location":"WAVTRIGGER/#wav-trigger-configuration","text":"The first thing to take care of is updating the firmware on the WAV Trigger boards. They all currently ship with at least version 1.34, and 1.40 is required for some unique features of the GPStar Proton Pack. Version 1.40 can be found here in this repository in the extras folder. The WAV Trigger software updater and instructions can be found on the Robertsonics website . To update the firmware, an FTDI Basic (5V version) from Sparkfun should be used to interface with the WAV Trigger. You may also use any USB-to-serial adapter, so long as it is a TTL-level device, not RS- 232. Plugging RS-232 level signals into the WAV Trigger serial interface will damage the WAV Trigger! WAV Trigger Firmware v1.40 - Custom firmware for GPStar equipment, not available via manufacturer's website. WAV Trigger Flasher Utility v2.00 Windows Executable (zip) WAV Trigger Flasher Utility v2.00 OS X (10.11 and above) (dmg) Only 4 connections between the boards will be required: TX/RX and 5V/Ground. Firmware Summary Steps Solder wires directly or use a row of pin headers to the holes along the bottom right edge of the WAV Trigger (as viewed with the barrel connector oriented at the top left). Solder the small pad marked \"5V\" just below the sockets for SPKR +/-. This will allow the WAV Trigger to operate from the 5V supplied by USB and later the battery for your Proton Pack. There is a small switch near the power connect (barrel) to on the WAV Trigger, set it to the \u201cload\u201d position. Connect the following wires from the FTDI to WAV Trigger: RX on the FTDI to the TX of the WAV Trigger. TX from the FTDI to the RX of the WAV Trigger. 5V from the FTDI to 5Vin. GND from one side to the other. Plug in the USB cable from your computer to the FTDI board. Run the WT-Flasher app on your computer, then click on BROWSE and navigate to and select the 1.40 firmware hex file WAVTrig_20231001_v140.hex that you downloaded from the extras folder in this repository. Once connected to your computer, click the RESCAN button and select the device from the drop down USB Serial Port menu. Then click the PROGRAM button. The app should establish communication and begin flashing the new firmware. After it has finished updating the firmware, disconnect everything and set the black switch back from LOAD to RUN . While flashing, you will see a number % progress indicator at the bottom of the Flasher software window indicating the status of the flashing progress. IMPORTANT: Make sure after flashing the firmware to set the small switch on the WAV Trigger back to the RUN position. Note the \"5V\" pad just below the SPKR connection holes.","title":"WAV Trigger Configuration"},{"location":"WAVTRIGGER/#connections","text":"Once the firmware is updated to 1.40 and you have confirmed this using the WAV Trigger setup utility, there will be connections made to the respective microcontroller boards. Similar to the previous step the RX and TX will go to the respective TX and RX ports on the microcontroller boards. See the setup instructions for the Pack and Wand as necessary. The 5Vin and GND will be connected to the power to each of the pack and wand, respectively. DO NOT use the 5V port on either Mega or Nano to drive this device--you will need to split your power connection to each device to provide sufficient current. NOTE: See below for more information. I used standard breadboard friendly header jumper cables to make the connections from the FTDI basic to the connectors I added to the WAV Trigger. Also note that the WAV Triggers have both a AUX output and/or 2 pins for audio output. You can use either or to connect to your speakers or amps. IMPORTANT: You will need to solder the 5V pad on the WAV Trigger to enable 5V power from the device. After you do this, NEVER USE the BARREL CONNECTOR for power. We will be using 5V to power the WAV Triggers for both in the Pack and the Wand.","title":"Connections"},{"location":"WAVTRIGGER/#loading-audio-files","text":"Please see the Audio Files guide.","title":"Loading Audio Files"},{"location":"WIRELESS/","text":"Wireless Adapter (Optional) Use of the serial expansion port on the gpstar Proton Pack can bring WiFi capabilities to your unlicensed nuclear reactor! This is a minimal version of the Attenuator device without input or output devices (no lights, sound, vibration, or switches) and may be installed directly into your pack alongside the gpstar Proton Pack controller. Video Installation Guide (YouTube, November 2023). Bill of Materials The configuration for this device is extremely simple and can be implemented with NO SOLDERING using the parts below. You will need a true ESP32 (ESP-WROOM-32 not ESP8266) development board with a terminal shield and a pair of JST-XH pre-wired connectors with bare wire ends. ESP-WROOM-32 Dev Board w/ Terminal Shield JST-XH 2-Pin Connector and Wire Set ESP32 - Pin Connections The following is a diagram of the ESP32 pins from left and right, when oriented with the USB connection facing down (south) like the pinout diagram above. Again, this table is based on the expected pin labels on the ESP32 itself--your terminal shield may differ slightly and should be checked for proper orientation when you insert the ESP32 into the socket. Connection ESP32 (L) ESP32 (R) Connection EN GPIO23 GPIO36 GPIO22 GPIO39 GPIO1 GPIO34 GPIO3 GPIO35 GPIO21 GPIO32 GPIO19 GPIO33 GPIO18 GPIO25 GPIO5 GPIO26 GPIO17 to Pack RX1 GPIO27 GPIO16 to Pack TX1 GPIO14 GPIO4 GPIO12 GPIO2 GPIO13 GPIO15 to 5V-OUT - GND GND to 5V-OUT + VIN 3.3V USB As shown above you will only need 4 connections using the pair of JST-XH connectors connecting the 5V-OUT and RX1/TX1 sockets to the ESP32 device. Since the pre-wired connections may only have a red/black color pattern the diagram below has been intentionally designed with this in mind, though the table above should be consulted for connections if your device does not work as expected. IMPORTANT: Please check all LABELS for proper connections, regardless of wire color. Some early parts/kits may have shipped with JST connectors which swap the order of the red/black wires. Firmware Flashing This device currently uses the exact same firmware image as the Attenuator device, so please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your wireless adapter. Operation When using the ESP32 controller it is possible to connect to the device via WiFi. The SSID (Network Name) will be broadcast as \"ProtonPack_####\" where \"####\" is the last 4 hexadecimal values for the MAC address of the WiFi interface. This will differ for each ESP32 device, making each network unique to the attached pack. The default password is \"555-2368\" and can (and should) be changed via the web interface after successfully connecting to the network. The IP address for the device will be hardcoded as \"192.168.1.2\" with the web interface accessible at http://192.168.1.2 . For instructions on using the web interface to control your equipment, please see the Wireless Operations guide. Security Notice Once you have successfully paired with the WiFi network for the Proton pack, you are HIGHLY encouraged to change the default password. This is accessible via a link at the bottom of the main device page as noted above. Follow the prompts to enter and confirm a new password then re-join your pack's WiFi network with the new credentials.","title":"WiFi Adapter"},{"location":"WIRELESS/#wireless-adapter-optional","text":"Use of the serial expansion port on the gpstar Proton Pack can bring WiFi capabilities to your unlicensed nuclear reactor! This is a minimal version of the Attenuator device without input or output devices (no lights, sound, vibration, or switches) and may be installed directly into your pack alongside the gpstar Proton Pack controller. Video Installation Guide (YouTube, November 2023).","title":"Wireless Adapter (Optional)"},{"location":"WIRELESS/#bill-of-materials","text":"The configuration for this device is extremely simple and can be implemented with NO SOLDERING using the parts below. You will need a true ESP32 (ESP-WROOM-32 not ESP8266) development board with a terminal shield and a pair of JST-XH pre-wired connectors with bare wire ends. ESP-WROOM-32 Dev Board w/ Terminal Shield JST-XH 2-Pin Connector and Wire Set","title":"Bill of Materials"},{"location":"WIRELESS/#esp32-pin-connections","text":"The following is a diagram of the ESP32 pins from left and right, when oriented with the USB connection facing down (south) like the pinout diagram above. Again, this table is based on the expected pin labels on the ESP32 itself--your terminal shield may differ slightly and should be checked for proper orientation when you insert the ESP32 into the socket. Connection ESP32 (L) ESP32 (R) Connection EN GPIO23 GPIO36 GPIO22 GPIO39 GPIO1 GPIO34 GPIO3 GPIO35 GPIO21 GPIO32 GPIO19 GPIO33 GPIO18 GPIO25 GPIO5 GPIO26 GPIO17 to Pack RX1 GPIO27 GPIO16 to Pack TX1 GPIO14 GPIO4 GPIO12 GPIO2 GPIO13 GPIO15 to 5V-OUT - GND GND to 5V-OUT + VIN 3.3V USB As shown above you will only need 4 connections using the pair of JST-XH connectors connecting the 5V-OUT and RX1/TX1 sockets to the ESP32 device. Since the pre-wired connections may only have a red/black color pattern the diagram below has been intentionally designed with this in mind, though the table above should be consulted for connections if your device does not work as expected. IMPORTANT: Please check all LABELS for proper connections, regardless of wire color. Some early parts/kits may have shipped with JST connectors which swap the order of the red/black wires.","title":"ESP32 - Pin Connections"},{"location":"WIRELESS/#firmware-flashing","text":"This device currently uses the exact same firmware image as the Attenuator device, so please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your wireless adapter.","title":"Firmware Flashing"},{"location":"WIRELESS/#operation","text":"When using the ESP32 controller it is possible to connect to the device via WiFi. The SSID (Network Name) will be broadcast as \"ProtonPack_####\" where \"####\" is the last 4 hexadecimal values for the MAC address of the WiFi interface. This will differ for each ESP32 device, making each network unique to the attached pack. The default password is \"555-2368\" and can (and should) be changed via the web interface after successfully connecting to the network. The IP address for the device will be hardcoded as \"192.168.1.2\" with the web interface accessible at http://192.168.1.2 . For instructions on using the web interface to control your equipment, please see the Wireless Operations guide. Security Notice Once you have successfully paired with the WiFi network for the Proton pack, you are HIGHLY encouraged to change the default password. This is accessible via a link at the bottom of the main device page as noted above. Follow the prompts to enter and confirm a new password then re-join your pack's WiFi network with the new credentials.","title":"Operation"},{"location":"WIRELESS_OPERATION/","text":"Wireless Operation This guide will cover the web interface available via an ESP32 chip used as either the Attenuator or Wireless Adapter devices, and is capable of controlling some operations of your Proton Pack and Neutrona Wand. Requirements Before proceeding, it is worth noting that the ESP32 device is only capable of operating on the 2.4GHz band for WiFi communications. While it does support the 801.11b/g/n networking standards, any computer/phone/tablet which connects to this device via external WiFi network, or will be connected via the private WiFi network on this device as a client, must support the 2.4GHz band. For secured networks, only the WPA2 standard is allowed (joining an open networks is not supported nor advised). Connectivity options include either a private WiFi network from the device, and the ability to join an external WiFi network. For the latter this may be your home network or a cellular hotspot, though this is subject to some factors which are environmental or vendor-specific. WiFi Limitations It should be clearly stated that the ESP32 is a low-power consumer device and will not have the same range and features as a true wireless access point. When used at home or a controlled environment it should respond in a satisfactory manner. Though when used in a crowded (read: convention) environment the signal may become lost or overwhelmed by competing RF devices. When possible, configure the device to connect to a stronger, stable wireless network as a client rather than relying on the built-in access point as this may improve the range and performance of the web-based interface. For Android devices offering a cellular hotspot, these devices may utilize a feature called \"Client Isolation Mode\" which will prevent hotspot clients from seeing each other. Unless you can disable this option (via a rooted device) you will not be able to reach the web UI via the hotspot network. For iOS devices offering a cellular hotspot, please make sure that the \"Maximize Compatibility\" option is enabled. This will ensure your device offers the 2.4GHz radio and will be seen by the ESP32 device. WiFi Debug Mode If you have forgotten the password to your device's private WiFi network, you can load the special Attenuator-ESP32-Reset.bin firmware by following the \"Forgot Your WiFi Password\" section of the ATTENUATOR_FLASHING guide . As of the 5.2.2 firmware release a special debug option is available when using the hardware as an Attenuator, or if a momentary switch is installed between pin D4 and GND on the ESP32 controller. While powering on the device, push down on the main dial on the Attenuator (or press the momentary switch), and the device will bypass any stored password for local WiFi. This will bypass setting of a password for the built-in WiFi network, allowing the \"ProtonPack_\" network to run without WPA2 security. This should only be done as a last resort to regain access to the device if the password is forgotten or another technical issue may be preventing access! Firmware Flashing Please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your Wireless Adapter controller. Hardware Synchronization In order to view the state of the pack and control it remotely, the Proton Pack and ESP32 devices must be physically connected and have been sychnronized via the built-in software. On the ESP32 are 2 on-board LEDs which will show the current status: The onboard red LED indicates the device is powered and should be accessible via the private WiFi network. A second onboard LED will be lit blue to indicate when the device has successfully synchronized with the Proton Pack. Additionally, when using the device as an Attenuator, the topmost LED on that device will be lit as purple until pack synchronization has completed. If using the \"standalone\" firmware the top LED will remain lit as red. Web Interface When using the ESP32 controller for either the Attenuator or Wireless Adapter, it will offer a default, private WiFi network (access point) which begins with the pattern \"ProtonPack_NNNN\" where the NNNN is unique to each ESP32's WiFi network interface, and this will be secured with a default password of \"555-2368\" . Once connected, your computer/phone/table should be assigned an IP address starting from \"192.168.1.100\" with a subnet of \"255.255.255.0\" . Please remember that if you intend to have multiple Attenuator/Wireless devices connect via this private WiFi network you will be assigned a unique IP address for each client device (eg. phone, tablet, or computer). A web-based user interface is available at http://192.168.1.2 to view the state of your Proton Pack and Neutrona Wand, and to manage specific actions. The available sections are described below. Note: As of the latest 5.3.x release a new mDNS feature allows the device to respond to a localized name regardless of the WiFi network. In your browser simply navigate to http://<SSID>.local where the \"SSID\" is the same name as the private access point. This SSID is now user-customizable using the \"Attenuator Settings\" page shown below. Tab 1: Equipment Status The equipment status will reflect the current state of your Proton Pack and Neutrona Wand and will update in real-time as you interact with those devices. This information is available as either a text-based or graphical display, or both if you prefer (set via Attenuator Preferences). When using the graphical display, most components of the Proton pack and Neutrona Wand are represented by color-coded overlays on the component will may be affected by runtime actions: The top of the display will indicate the mode (Standard = Mode Original, Upgraded = Super Hero) along with the year theme (V1.9.8x or V2.0.2x). When the Ion Arm switch is engaged for Mode Original, the overlay for the Ion Arm will be green to indicate a ready state. When in Super Hero mode this overlay will be green when the Proton Pack is powered on. When the Proton Pack is powered on: The Power Cell, Booster Tube, and Cyclotron overlays will be green as their default state. When the Cyclotron is in a normal state the overlay will be green. It will change to yellow then red as it goes through the pre-warning and overheat states. During venting the overlay will be blue to indicate the recovery period. The color state of the Booster Tube is linked to the \"Output\" text value which is the voltage measured at the Proton Pack PCB (in volts, but displayed as Gev). During high power draw events such as smoke generation the voltage can drop briefly, and will be reflected as a red overlay when that value is below 4.2V When the Neutrona Wand is powered on, the overlay above the Activate/Intensify portion of the gun box will indicate if the barrel is retracted (red) or extended (green). The current power level for the Neutrona Wand will be indicated by the \"L-#\" beside the barrel. The type of firing mode will be displayed below the Neutrona Wand and will be color coded via the barrel. Color intensity increases with the power level. Proton Stream: Red (includes Spectral modes) Plasm System: Green (incl. for 1989 theme) Dark Matter Gen.: Blue Particle System: Orange Settings: Gray When using the power-detection feature with a stock Haslab Neutrona Wand the default stream will be Proton with a power level of 5. Instead of the stream type being displayed, there will be a wattage value displayed as Gigawatts (GW). If the Ribbon Cable is removed, a warning icon will appear over that component to indicate an alarm state. When the Cyclotron lid is removed a radiation exposure warning will be displayed at the bottom of the CRT display. Note: When using the text-based display, if you see a \"\u2014\" (dash) beside the labels it can indicate a potential communication issue. Simply refresh the page and/or check your WiFi connection to the device. In rare cases you may need to do a reboot of the ESP32 device via the admin tab. Special thanks and credit to fellow cosplayer Alexander Hibbs (@BeaulieuDesigns87) from the South Carolina Ghostbusters , who created the amazingly detailed Proton Pack and Neutrona Wand technical illustration, available as a printed poster or digital image . He has graciously provided a version of his design to make the new graphical interface. Tab 2: Audio Controls This section allows full control of the system (overall) volume, effects volume, and music volume along with the ability to mute/unmute all devices. The current volume levels will be shown and updated in real-time whether adjusted via the web UI, the pack, or the wand. For playback of music you can use the improved navigation controls: Indicator Track Action \u25c0\u25c0 Previous \u25a2 \u25b6 Start/Stop \u25ae\u25ae \u25b6 Pause/Resume \u25b6\u25b6 Next/Skip You may also jump directly to a specific track for playback via the selection field (switching immediately if already playing, otherwise that track will be started via the Start/Stop button). By default, only the track numbers are known to the audio device as all music tracks must begin at value \"500\" per the naming convention used by the GPStar controller software. However, as of the 5.x release it is possible to add a track listing to the ESP32 device's memory so that user-friendly song names can be displayed. See the Attenuator Settings described below for more information. Tab 3: Pack Controls Controls will be made available on a per-action or per-state basis. Shown here, the pack and wand are both in an Idle state while in the \"Super Hero\" operation mode which allows the pack to be turned on/off remotely. The options to remotely vent or to \"Attenuate\" are only enabled when the devices are in a specific state. Vent: This can only be triggered remotely when in the \"Super Hero\" mode and while the Pack State is \"Powered\". Attenuate: When firing, the Cyclotron State must be either \"Warning\" or \"Critical\" to enable this button. Tab 4: Preferences / Administration These provide a web interface for managing options which are accessed via the LED or Config EEPROM menus. The settings are divided into 3 sections: Pack, Wand, and Smoke. The features available via these sections will be covered in-depth later in this document. These links allow you to change or control aspects of the available devices in lieu of the EEPROM menu. Update ESP32 Firmware - Allows you to update the ESP32 firmware using Over-the-Air updates. See the ATTENUATOR_FLASHING guide for details Secure Device WiFi - Allows changing of the default password for the private WiFi network Change WiFi Settings - Provides an optional means of joining an existing, external WiFi network for access of your device Restart/Resync - Allows a remote restart of the software by performing a reboot ONLY of the ESP32 device At the bottom of the screen is a timestamp representing the date of the software build for the ESP32 firmware, along with the name of the private WiFi network offered by the current device. If connected to an external WiFi network the current IP address and subnet mask will be displayed. Attenuator Settings Set options related specifically to the Attenuator, such as when the vibration motor or buzzer may be used to provide physical feedback during operation. Note: If you installed the Frutto Technology electronics into your DIY or GPStar Attenuator shell and found that the top and lower LEDs are displaying the wrong colors, you can use the \"Invert\" option to put the 3 lights into the correct order. NEW in 5.x - The ability to add a user-friendly track listing has been integrated into the UI. Song titles may be entered as 1 entry per line, in the order by which they are numbered on your microSD card. The text is limited by bytes (max 2,000) not the number of lines, so to fit more entries into this text box you may need to use shorter song titles. This list of songs will be matched to each track number (starting from \"500_\" per the required numbering scheme). This data is stored only within the ESP32 device and is only visible/used by the track selection field in the Music Navigation area. Pack Settings Set options related specifically to the Proton Pack. Options such as the color/saturation sliders will only take effect if you have installed upgrades to the RGB Power Cell and Cyclotron lid light kits. Similarly, the Video Game mode option will have no effect on the stock Haslab LEDs. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \ud83d\udcdd Note: When changing options such as the count of LEDs in use for a device, or some options such as the Operation Mode, a full power-cycle of the equipment is required after saving to EEPROM. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved. Wand Settings Set options related specifically to the Neutrona Wand. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \ud83d\udcdd Note: When changing options such as the count of LEDs in use for a device, a full power-cycle of the equipment is required after saving to EEPROM. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved. Overheat/Smoke Settings Adjust overall smoke effects (toggle on/off) and adjust per-level effects. Naturally, these options will have no effect on operation without a smoke kit installed. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved. External WiFi Settings It is possible to have your device join an existing WiFi network which may provide a more stable network connection. Access the \"Change WiFi Settings\" page via http://192.168.1.2/network URL to make the necessary device modifications. Enable the external WiFi options and supply the preferred WiFi network name (SSID) and WPA2 password for access. Optionally, you may specify an IP address, subnet mask, and gateway IP if you wish to use static values. Otherwise, the ESP32 will obtain these values automatically from your chosen network via DHCP. Save the changes, which will cause the device to reboot and attempt to connect to the network (up to 3 tries). Return to the URL above to observe the IP address information. If the connection was successful, an IP address, subnet mask, and gateway IP will be shown. While connected to the same WiFi network on your computer/phone/tablet, use the IP address shown to connect to your device's web interface. Use of an unsecured WiFi network is not supported and not recommended. Web API The web UI is built as a single-page application, using single HTML pages for the interface elements and performing actions using an API layer. These API endpoints are available for use if you wish to build your own interface. They pass data in JSON format though the exact structure is not described here at this time. The following URI's will serve the informational/maintenance pages as shown previously in this guide: GET / - Standard Index/Landing Page GET /network - External WiFi Settings Page GET /password - WiFi Password Update Page GET /settings/attenuator = Attenuator Settings Page GET /settings/pack - Pack Settings Page GET /settings/wand - Wand Settings Page GET /settings/smoke - Smoke Settings Page GET /style.css - Common Stylesheet GET /common.js - Common JavaScript GET /index.js - Index Page JavaScript For real-time updates, the built-in web server offers a special URI /ws to support WebSockets . When connected to that endpoint, the ESP32 device will \"push\" any relevant information direct to clients in real-time. Note that this data may be in the form of a JSON object or just a plain string, so check the contents of the text data carefully before usage. The following URI's are API endpoints available for managing actions within your devices. You may use these to create your own UI or control your pack/wand via other hardware devices. For instance, you can monitor the /status endpoint for changes, or use the volume/music endpoints to create your own jukebox interface. All data should use the application/json content type for sending or receiving of data. Where applicable for body data to be sent to the device a footnote describes where to find a sample of the JSON payload. GET /status - Obtain all current equipment status (pack + wand) DELETE /restart - Perform a software restart of the ESP32 controller PUT /pack/on - Turn the pack on (subject to system state) PUT /pack/off - Turn the pack onf (subject to system state) PUT /pack/attenuate - Cancel pack overheat via \"attenuation\" PUT /pack/vent - Perform manual vent (subject to system state) PUT /pack/lockout/start - Perform manual lockout (subject to system state) PUT /pack/lockout/cancel - Cancel manual lockout (subject to system state) PUT /volume/toggle - Toggle mute for all devices PUT /volume/master/up - Increase system (master) volume PUT /volume/master/down - Decrease system (master) volume PUT /volume/effects/up - Increase effects volume PUT /volume/effects/down - Decrease effects volume PUT /volume/music/up - Increase music volume PUT /volume/music/down - Decrease music volume PUT /music/startstop - Toggle music playback via start/stop PUT /music/pauseresume - Toggle music playback via resume/pause PUT /music/next - Move to next track PUT /music/prev - Move to previous track PUT /music/loop - Toggle looping of current track PUT /music/select?track=[INTEGER] - Select a specific music track (Min Value: 500) GET /wifi/settings - Returns the current external WiFi settings PUT /wifi/update - Save new/modified external WiFi settings Body: Send same JSON body as returned by /wifi/settings GET /config/device - Obtain the current (local) device settings PUT /config/device/save - Saves attenuator settings Body: Send same JSON body as returned by /config/pack GET /config/pack - Obtain the current pack equipment settings PUT /config/pack/save - Saves pack settings for evaluation Body: Send same JSON body as returned by /config/pack GET /config/wand - Obtain the current wand equipment settings PUT /config/wand/save - Saves wand settings for evaluation Body: Send same JSON body as returned by /config/wand GET /config/smoke - Obtain the current pack/wand smoke settings PUT /config/smoke/save - Saves smoke settings for evaluation Body: Send same JSON body as returned by /config/smoke WARNING: Only call these API's as necessary as these cause write cycles to the EEPROM! PUT /eeprom/all - Stores all current preferences to pack/wand EEPROMs (eg. smoke settings) PUT /eeprom/pack - Stores current pack preferences to pack EEPROM PUT /eeprom/wand - Stores current wand preferences to wand EEPROM","title":"Wireless Operation"},{"location":"WIRELESS_OPERATION/#wireless-operation","text":"This guide will cover the web interface available via an ESP32 chip used as either the Attenuator or Wireless Adapter devices, and is capable of controlling some operations of your Proton Pack and Neutrona Wand.","title":"Wireless Operation"},{"location":"WIRELESS_OPERATION/#requirements","text":"Before proceeding, it is worth noting that the ESP32 device is only capable of operating on the 2.4GHz band for WiFi communications. While it does support the 801.11b/g/n networking standards, any computer/phone/tablet which connects to this device via external WiFi network, or will be connected via the private WiFi network on this device as a client, must support the 2.4GHz band. For secured networks, only the WPA2 standard is allowed (joining an open networks is not supported nor advised). Connectivity options include either a private WiFi network from the device, and the ability to join an external WiFi network. For the latter this may be your home network or a cellular hotspot, though this is subject to some factors which are environmental or vendor-specific.","title":"Requirements"},{"location":"WIRELESS_OPERATION/#wifi-limitations","text":"It should be clearly stated that the ESP32 is a low-power consumer device and will not have the same range and features as a true wireless access point. When used at home or a controlled environment it should respond in a satisfactory manner. Though when used in a crowded (read: convention) environment the signal may become lost or overwhelmed by competing RF devices. When possible, configure the device to connect to a stronger, stable wireless network as a client rather than relying on the built-in access point as this may improve the range and performance of the web-based interface. For Android devices offering a cellular hotspot, these devices may utilize a feature called \"Client Isolation Mode\" which will prevent hotspot clients from seeing each other. Unless you can disable this option (via a rooted device) you will not be able to reach the web UI via the hotspot network. For iOS devices offering a cellular hotspot, please make sure that the \"Maximize Compatibility\" option is enabled. This will ensure your device offers the 2.4GHz radio and will be seen by the ESP32 device.","title":"WiFi Limitations"},{"location":"WIRELESS_OPERATION/#wifi-debug-mode","text":"If you have forgotten the password to your device's private WiFi network, you can load the special Attenuator-ESP32-Reset.bin firmware by following the \"Forgot Your WiFi Password\" section of the ATTENUATOR_FLASHING guide . As of the 5.2.2 firmware release a special debug option is available when using the hardware as an Attenuator, or if a momentary switch is installed between pin D4 and GND on the ESP32 controller. While powering on the device, push down on the main dial on the Attenuator (or press the momentary switch), and the device will bypass any stored password for local WiFi. This will bypass setting of a password for the built-in WiFi network, allowing the \"ProtonPack_\" network to run without WPA2 security. This should only be done as a last resort to regain access to the device if the password is forgotten or another technical issue may be preventing access!","title":"WiFi Debug Mode"},{"location":"WIRELESS_OPERATION/#firmware-flashing","text":"Please see the ATTENUATOR_FLASHING guide for details on compiling and/or uploading software to your Wireless Adapter controller.","title":"Firmware Flashing"},{"location":"WIRELESS_OPERATION/#hardware-synchronization","text":"In order to view the state of the pack and control it remotely, the Proton Pack and ESP32 devices must be physically connected and have been sychnronized via the built-in software. On the ESP32 are 2 on-board LEDs which will show the current status: The onboard red LED indicates the device is powered and should be accessible via the private WiFi network. A second onboard LED will be lit blue to indicate when the device has successfully synchronized with the Proton Pack. Additionally, when using the device as an Attenuator, the topmost LED on that device will be lit as purple until pack synchronization has completed. If using the \"standalone\" firmware the top LED will remain lit as red.","title":"Hardware Synchronization"},{"location":"WIRELESS_OPERATION/#web-interface","text":"When using the ESP32 controller for either the Attenuator or Wireless Adapter, it will offer a default, private WiFi network (access point) which begins with the pattern \"ProtonPack_NNNN\" where the NNNN is unique to each ESP32's WiFi network interface, and this will be secured with a default password of \"555-2368\" . Once connected, your computer/phone/table should be assigned an IP address starting from \"192.168.1.100\" with a subnet of \"255.255.255.0\" . Please remember that if you intend to have multiple Attenuator/Wireless devices connect via this private WiFi network you will be assigned a unique IP address for each client device (eg. phone, tablet, or computer). A web-based user interface is available at http://192.168.1.2 to view the state of your Proton Pack and Neutrona Wand, and to manage specific actions. The available sections are described below. Note: As of the latest 5.3.x release a new mDNS feature allows the device to respond to a localized name regardless of the WiFi network. In your browser simply navigate to http://<SSID>.local where the \"SSID\" is the same name as the private access point. This SSID is now user-customizable using the \"Attenuator Settings\" page shown below.","title":"Web Interface"},{"location":"WIRELESS_OPERATION/#tab-1-equipment-status","text":"The equipment status will reflect the current state of your Proton Pack and Neutrona Wand and will update in real-time as you interact with those devices. This information is available as either a text-based or graphical display, or both if you prefer (set via Attenuator Preferences). When using the graphical display, most components of the Proton pack and Neutrona Wand are represented by color-coded overlays on the component will may be affected by runtime actions: The top of the display will indicate the mode (Standard = Mode Original, Upgraded = Super Hero) along with the year theme (V1.9.8x or V2.0.2x). When the Ion Arm switch is engaged for Mode Original, the overlay for the Ion Arm will be green to indicate a ready state. When in Super Hero mode this overlay will be green when the Proton Pack is powered on. When the Proton Pack is powered on: The Power Cell, Booster Tube, and Cyclotron overlays will be green as their default state. When the Cyclotron is in a normal state the overlay will be green. It will change to yellow then red as it goes through the pre-warning and overheat states. During venting the overlay will be blue to indicate the recovery period. The color state of the Booster Tube is linked to the \"Output\" text value which is the voltage measured at the Proton Pack PCB (in volts, but displayed as Gev). During high power draw events such as smoke generation the voltage can drop briefly, and will be reflected as a red overlay when that value is below 4.2V When the Neutrona Wand is powered on, the overlay above the Activate/Intensify portion of the gun box will indicate if the barrel is retracted (red) or extended (green). The current power level for the Neutrona Wand will be indicated by the \"L-#\" beside the barrel. The type of firing mode will be displayed below the Neutrona Wand and will be color coded via the barrel. Color intensity increases with the power level. Proton Stream: Red (includes Spectral modes) Plasm System: Green (incl. for 1989 theme) Dark Matter Gen.: Blue Particle System: Orange Settings: Gray When using the power-detection feature with a stock Haslab Neutrona Wand the default stream will be Proton with a power level of 5. Instead of the stream type being displayed, there will be a wattage value displayed as Gigawatts (GW). If the Ribbon Cable is removed, a warning icon will appear over that component to indicate an alarm state. When the Cyclotron lid is removed a radiation exposure warning will be displayed at the bottom of the CRT display. Note: When using the text-based display, if you see a \"\u2014\" (dash) beside the labels it can indicate a potential communication issue. Simply refresh the page and/or check your WiFi connection to the device. In rare cases you may need to do a reboot of the ESP32 device via the admin tab. Special thanks and credit to fellow cosplayer Alexander Hibbs (@BeaulieuDesigns87) from the South Carolina Ghostbusters , who created the amazingly detailed Proton Pack and Neutrona Wand technical illustration, available as a printed poster or digital image . He has graciously provided a version of his design to make the new graphical interface.","title":"Tab 1: Equipment Status"},{"location":"WIRELESS_OPERATION/#tab-2-audio-controls","text":"This section allows full control of the system (overall) volume, effects volume, and music volume along with the ability to mute/unmute all devices. The current volume levels will be shown and updated in real-time whether adjusted via the web UI, the pack, or the wand. For playback of music you can use the improved navigation controls: Indicator Track Action \u25c0\u25c0 Previous \u25a2 \u25b6 Start/Stop \u25ae\u25ae \u25b6 Pause/Resume \u25b6\u25b6 Next/Skip You may also jump directly to a specific track for playback via the selection field (switching immediately if already playing, otherwise that track will be started via the Start/Stop button). By default, only the track numbers are known to the audio device as all music tracks must begin at value \"500\" per the naming convention used by the GPStar controller software. However, as of the 5.x release it is possible to add a track listing to the ESP32 device's memory so that user-friendly song names can be displayed. See the Attenuator Settings described below for more information.","title":"Tab 2: Audio Controls"},{"location":"WIRELESS_OPERATION/#tab-3-pack-controls","text":"Controls will be made available on a per-action or per-state basis. Shown here, the pack and wand are both in an Idle state while in the \"Super Hero\" operation mode which allows the pack to be turned on/off remotely. The options to remotely vent or to \"Attenuate\" are only enabled when the devices are in a specific state. Vent: This can only be triggered remotely when in the \"Super Hero\" mode and while the Pack State is \"Powered\". Attenuate: When firing, the Cyclotron State must be either \"Warning\" or \"Critical\" to enable this button.","title":"Tab 3: Pack Controls"},{"location":"WIRELESS_OPERATION/#tab-4-preferences-administration","text":"These provide a web interface for managing options which are accessed via the LED or Config EEPROM menus. The settings are divided into 3 sections: Pack, Wand, and Smoke. The features available via these sections will be covered in-depth later in this document. These links allow you to change or control aspects of the available devices in lieu of the EEPROM menu. Update ESP32 Firmware - Allows you to update the ESP32 firmware using Over-the-Air updates. See the ATTENUATOR_FLASHING guide for details Secure Device WiFi - Allows changing of the default password for the private WiFi network Change WiFi Settings - Provides an optional means of joining an existing, external WiFi network for access of your device Restart/Resync - Allows a remote restart of the software by performing a reboot ONLY of the ESP32 device At the bottom of the screen is a timestamp representing the date of the software build for the ESP32 firmware, along with the name of the private WiFi network offered by the current device. If connected to an external WiFi network the current IP address and subnet mask will be displayed.","title":"Tab 4: Preferences / Administration"},{"location":"WIRELESS_OPERATION/#attenuator-settings","text":"Set options related specifically to the Attenuator, such as when the vibration motor or buzzer may be used to provide physical feedback during operation. Note: If you installed the Frutto Technology electronics into your DIY or GPStar Attenuator shell and found that the top and lower LEDs are displaying the wrong colors, you can use the \"Invert\" option to put the 3 lights into the correct order. NEW in 5.x - The ability to add a user-friendly track listing has been integrated into the UI. Song titles may be entered as 1 entry per line, in the order by which they are numbered on your microSD card. The text is limited by bytes (max 2,000) not the number of lines, so to fit more entries into this text box you may need to use shorter song titles. This list of songs will be matched to each track number (starting from \"500_\" per the required numbering scheme). This data is stored only within the ESP32 device and is only visible/used by the track selection field in the Music Navigation area.","title":"Attenuator Settings"},{"location":"WIRELESS_OPERATION/#pack-settings","text":"Set options related specifically to the Proton Pack. Options such as the color/saturation sliders will only take effect if you have installed upgrades to the RGB Power Cell and Cyclotron lid light kits. Similarly, the Video Game mode option will have no effect on the stock Haslab LEDs. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \ud83d\udcdd Note: When changing options such as the count of LEDs in use for a device, or some options such as the Operation Mode, a full power-cycle of the equipment is required after saving to EEPROM. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved.","title":"Pack Settings"},{"location":"WIRELESS_OPERATION/#wand-settings","text":"Set options related specifically to the Neutrona Wand. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \ud83d\udcdd Note: When changing options such as the count of LEDs in use for a device, a full power-cycle of the equipment is required after saving to EEPROM. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved.","title":"Wand Settings"},{"location":"WIRELESS_OPERATION/#overheatsmoke-settings","text":"Adjust overall smoke effects (toggle on/off) and adjust per-level effects. Naturally, these options will have no effect on operation without a smoke kit installed. Reminder: The ability to update settings or save to EEPROM will be disabled so long as the pack and wand are running. Turn off all physical toggles to set these devices to an idle state before adjusting settings. Refresh the page to get the latest values for preferences. \u26a0\ufe0f NOTICE: The EEPROM memory has a specified life of 100,000 write/erase cycles. You will generally not reach this limit in your lifetime, so limit use of the \"Save to EEPROM\" button to only after settings have been successfully saved.","title":"Overheat/Smoke Settings"},{"location":"WIRELESS_OPERATION/#external-wifi-settings","text":"It is possible to have your device join an existing WiFi network which may provide a more stable network connection. Access the \"Change WiFi Settings\" page via http://192.168.1.2/network URL to make the necessary device modifications. Enable the external WiFi options and supply the preferred WiFi network name (SSID) and WPA2 password for access. Optionally, you may specify an IP address, subnet mask, and gateway IP if you wish to use static values. Otherwise, the ESP32 will obtain these values automatically from your chosen network via DHCP. Save the changes, which will cause the device to reboot and attempt to connect to the network (up to 3 tries). Return to the URL above to observe the IP address information. If the connection was successful, an IP address, subnet mask, and gateway IP will be shown. While connected to the same WiFi network on your computer/phone/tablet, use the IP address shown to connect to your device's web interface. Use of an unsecured WiFi network is not supported and not recommended.","title":"External WiFi Settings"},{"location":"WIRELESS_OPERATION/#web-api","text":"The web UI is built as a single-page application, using single HTML pages for the interface elements and performing actions using an API layer. These API endpoints are available for use if you wish to build your own interface. They pass data in JSON format though the exact structure is not described here at this time. The following URI's will serve the informational/maintenance pages as shown previously in this guide: GET / - Standard Index/Landing Page GET /network - External WiFi Settings Page GET /password - WiFi Password Update Page GET /settings/attenuator = Attenuator Settings Page GET /settings/pack - Pack Settings Page GET /settings/wand - Wand Settings Page GET /settings/smoke - Smoke Settings Page GET /style.css - Common Stylesheet GET /common.js - Common JavaScript GET /index.js - Index Page JavaScript For real-time updates, the built-in web server offers a special URI /ws to support WebSockets . When connected to that endpoint, the ESP32 device will \"push\" any relevant information direct to clients in real-time. Note that this data may be in the form of a JSON object or just a plain string, so check the contents of the text data carefully before usage. The following URI's are API endpoints available for managing actions within your devices. You may use these to create your own UI or control your pack/wand via other hardware devices. For instance, you can monitor the /status endpoint for changes, or use the volume/music endpoints to create your own jukebox interface. All data should use the application/json content type for sending or receiving of data. Where applicable for body data to be sent to the device a footnote describes where to find a sample of the JSON payload. GET /status - Obtain all current equipment status (pack + wand) DELETE /restart - Perform a software restart of the ESP32 controller PUT /pack/on - Turn the pack on (subject to system state) PUT /pack/off - Turn the pack onf (subject to system state) PUT /pack/attenuate - Cancel pack overheat via \"attenuation\" PUT /pack/vent - Perform manual vent (subject to system state) PUT /pack/lockout/start - Perform manual lockout (subject to system state) PUT /pack/lockout/cancel - Cancel manual lockout (subject to system state) PUT /volume/toggle - Toggle mute for all devices PUT /volume/master/up - Increase system (master) volume PUT /volume/master/down - Decrease system (master) volume PUT /volume/effects/up - Increase effects volume PUT /volume/effects/down - Decrease effects volume PUT /volume/music/up - Increase music volume PUT /volume/music/down - Decrease music volume PUT /music/startstop - Toggle music playback via start/stop PUT /music/pauseresume - Toggle music playback via resume/pause PUT /music/next - Move to next track PUT /music/prev - Move to previous track PUT /music/loop - Toggle looping of current track PUT /music/select?track=[INTEGER] - Select a specific music track (Min Value: 500) GET /wifi/settings - Returns the current external WiFi settings PUT /wifi/update - Save new/modified external WiFi settings Body: Send same JSON body as returned by /wifi/settings GET /config/device - Obtain the current (local) device settings PUT /config/device/save - Saves attenuator settings Body: Send same JSON body as returned by /config/pack GET /config/pack - Obtain the current pack equipment settings PUT /config/pack/save - Saves pack settings for evaluation Body: Send same JSON body as returned by /config/pack GET /config/wand - Obtain the current wand equipment settings PUT /config/wand/save - Saves wand settings for evaluation Body: Send same JSON body as returned by /config/wand GET /config/smoke - Obtain the current pack/wand smoke settings PUT /config/smoke/save - Saves smoke settings for evaluation Body: Send same JSON body as returned by /config/smoke WARNING: Only call these API's as necessary as these cause write cycles to the EEPROM! PUT /eeprom/all - Stores all current preferences to pack/wand EEPROMs (eg. smoke settings) PUT /eeprom/pack - Stores current pack preferences to pack EEPROM PUT /eeprom/wand - Stores current wand preferences to wand EEPROM","title":"Web API"}]}